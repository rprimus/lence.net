<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<link rel="self" type="application/atom+xml" href="http://lence.net/github-nim.atom"/>
<id>urn:rprimus:github:newnimrepos</id>
<updated>2021-07-04T08:24:00Z</updated>
<title type='text'>New GitHub Nim Repos</title>
 <entry>
  <title>anak10thn: nimmpc</title>
  <author>
   <name>anak10thn</name>
  </author>
  <link href="https://github.com/anak10thn/nimmpc" />
  <id>urn:rprimus:github:anak10thn:nimmpc</id>
  <published>2021-07-04T08:24:00Z</published>
  <updated>2021-07-04T08:24:00Z</updated>
  <content type="html">
   micro parser combinators for nim
  </content>
 </entry>
 <entry>
  <title>xueland: xue</title>
  <author>
   <name>xueland</name>
  </author>
  <link href="https://github.com/xueland/xue" />
  <id>urn:rprimus:github:xueland:xue</id>
  <published>2021-07-04T08:22:51Z</published>
  <updated>2021-07-04T08:22:51Z</updated>
  <content type="html">
   Just a language called XueLand, written in Nim.
  </content>
 </entry>
 <entry>
  <title>sivchari: nimockery</title>
  <author>
   <name>sivchari</name>
  </author>
  <link href="https://github.com/sivchari/nimockery" />
  <id>urn:rprimus:github:sivchari:nimockery</id>
  <published>2021-07-03T17:31:19Z</published>
  <updated>2021-07-03T17:31:19Z</updated>
  <content type="html">
   nimockery provides mock for all tests
  </content>
 </entry>
 <entry>
  <title>pyxgun: xtal</title>
  <author>
   <name>pyxgun</name>
  </author>
  <link href="https://github.com/pyxgun/xtal" />
  <id>urn:rprimus:github:pyxgun:xtal</id>
  <published>2021-07-03T14:14:52Z</published>
  <updated>2021-07-03T14:14:52Z</updated>
  <content type="html">
   Xtal is lightweight container runtime in Nim
  </content>
 </entry>
 <entry>
  <title>wiremoons: namt</title>
  <author>
   <name>wiremoons</name>
  </author>
  <link href="https://github.com/wiremoons/namt" />
  <id>urn:rprimus:github:wiremoons:namt</id>
  <published>2021-07-03T09:01:10Z</published>
  <updated>2021-07-03T09:01:10Z</updated>
  <content type="html">
   Nim Acronym Management Tool (NAMT) manages acronyms stored in a SQLite database.
  </content>
 </entry>
 <entry>
  <title>song10: nimutils</title>
  <author>
   <name>song10</name>
  </author>
  <link href="https://github.com/song10/nimutils" />
  <id>urn:rprimus:github:song10:nimutils</id>
  <published>2021-07-03T01:57:33Z</published>
  <updated>2021-07-03T01:57:33Z</updated>
  <content type="html">
   utility with nim
  </content>
 </entry>
 <entry>
  <title>bung87: lsp_client</title>
  <author>
   <name>bung87</name>
  </author>
  <link href="https://github.com/bung87/lsp_client" />
  <id>urn:rprimus:github:bung87:lsp_client</id>
  <published>2021-07-02T22:07:56Z</published>
  <updated>2021-07-02T22:07:56Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>mildred: nim-jmapmail</title>
  <author>
   <name>mildred</name>
  </author>
  <link href="https://github.com/mildred/nim-jmapmail" />
  <id>urn:rprimus:github:mildred:nim-jmapmail</id>
  <published>2021-07-02T20:09:43Z</published>
  <updated>2021-07-02T20:09:43Z</updated>
  <content type="html">
   JMAP e-mail client in Nim with Fidget
  </content>
 </entry>
 <entry>
  <title>parappayo: planarity-nim-sdl2</title>
  <author>
   <name>parappayo</name>
  </author>
  <link href="https://github.com/parappayo/planarity-nim-sdl2" />
  <id>urn:rprimus:github:parappayo:planarity-nim-sdl2</id>
  <published>2021-07-02T18:22:30Z</published>
  <updated>2021-07-02T18:22:30Z</updated>
  <content type="html">
   Planarity game implemented in nim with SDL2
  </content>
 </entry>
 <entry>
  <title>bung87: dllgen</title>
  <author>
   <name>bung87</name>
  </author>
  <link href="https://github.com/bung87/dllgen" />
  <id>urn:rprimus:github:bung87:dllgen</id>
  <published>2021-07-02T17:27:28Z</published>
  <updated>2021-07-02T17:27:28Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>Dot32IsCool: learning-nimgl</title>
  <author>
   <name>Dot32IsCool</name>
  </author>
  <link href="https://github.com/Dot32IsCool/learning-nimgl" />
  <id>urn:rprimus:github:Dot32IsCool:learning-nimgl</id>
  <published>2021-07-02T10:39:58Z</published>
  <updated>2021-07-02T10:39:58Z</updated>
  <content type="html">
   trying out NimGL, which is primarily a port of GLFW into Nim
  </content>
 </entry>
 <entry>
  <title>Glasses-Neo: nish</title>
  <author>
   <name>Glasses-Neo</name>
  </author>
  <link href="https://github.com/Glasses-Neo/nish" />
  <id>urn:rprimus:github:Glasses-Neo:nish</id>
  <published>2021-07-02T10:03:46Z</published>
  <updated>2021-07-02T10:03:46Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>schneiderfelipe: hyperscript</title>
  <author>
   <name>schneiderfelipe</name>
  </author>
  <link href="https://github.com/schneiderfelipe/hyperscript" />
  <id>urn:rprimus:github:schneiderfelipe:hyperscript</id>
  <published>2021-07-02T01:26:33Z</published>
  <updated>2021-07-02T01:26:33Z</updated>
  <content type="html">
   ð Create HyperText with Nim.
  </content>
 </entry>
</feed>
