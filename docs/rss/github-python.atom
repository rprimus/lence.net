<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<link rel="self" type="application/atom+xml" href="http://lence.net/github-python.atom"/>
<id>urn:rprimus:github:newpythonrepos</id>
<updated>2021-09-14T09:28:56Z</updated>
<title type='text'>New GitHub Python Repos</title>
 <entry>
  <title>firmalyzer: iotvas-rapid7</title>
  <author>
   <name>firmalyzer</name>
  </author>
  <link href="https://github.com/firmalyzer/iotvas-rapid7" />
  <id>urn:rprimus:github:firmalyzer:iotvas-rapid7</id>
  <published>2021-09-14T09:28:56Z</published>
  <updated>2021-09-14T09:28:56Z</updated>
  <content type="html">
   This is a sample application that demonstrates IoTVAS device discovery and security assessment API integration with the Rapid7 InsightVM.
  </content>
 </entry>
 <entry>
  <title>Fish4203: Dlinator</title>
  <author>
   <name>Fish4203</name>
  </author>
  <link href="https://github.com/Fish4203/Dlinator" />
  <id>urn:rprimus:github:Fish4203:Dlinator</id>
  <published>2021-09-14T09:08:19Z</published>
  <updated>2021-09-14T09:08:19Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>RuofengX: OAR_Aisle</title>
  <author>
   <name>RuofengX</name>
  </author>
  <link href="https://github.com/RuofengX/OAR_Aisle" />
  <id>urn:rprimus:github:RuofengX:OAR_Aisle</id>
  <published>2021-09-14T08:40:08Z</published>
  <updated>2021-09-14T08:40:08Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>Sourabhpdas: Info-insta</title>
  <author>
   <name>Sourabhpdas</name>
  </author>
  <link href="https://github.com/Sourabhpdas/Info-insta" />
  <id>urn:rprimus:github:Sourabhpdas:Info-insta</id>
  <published>2021-09-14T08:21:25Z</published>
  <updated>2021-09-14T08:21:25Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>EVAyo: ngapost2md</title>
  <author>
   <name>EVAyo</name>
  </author>
  <link href="https://github.com/EVAyo/ngapost2md" />
  <id>urn:rprimus:github:EVAyo:ngapost2md</id>
  <published>2021-09-14T08:20:46Z</published>
  <updated>2021-09-14T08:20:46Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>prathmeshghate: Crypto-value-telegram-bot</title>
  <author>
   <name>prathmeshghate</name>
  </author>
  <link href="https://github.com/prathmeshghate/Crypto-value-telegram-bot" />
  <id>urn:rprimus:github:prathmeshghate:Crypto-value-telegram-bot</id>
  <published>2021-09-14T08:01:53Z</published>
  <updated>2021-09-14T08:01:53Z</updated>
  <content type="html">
   This bot will work in telegram(Telegram Bot). It will provide you with various crypto currency value that can live or any specfic date.
  </content>
 </entry>
 <entry>
  <title>yash-saini: Icebreaker-Event</title>
  <author>
   <name>yash-saini</name>
  </author>
  <link href="https://github.com/yash-saini/Icebreaker-Event" />
  <id>urn:rprimus:github:yash-saini:Icebreaker-Event</id>
  <published>2021-09-14T07:52:43Z</published>
  <updated>2021-09-14T07:52:43Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>20gaurav2000: Cycle-GAN</title>
  <author>
   <name>20gaurav2000</name>
  </author>
  <link href="https://github.com/20gaurav2000/Cycle-GAN" />
  <id>urn:rprimus:github:20gaurav2000:Cycle-GAN</id>
  <published>2021-09-14T07:09:47Z</published>
  <updated>2021-09-14T07:09:47Z</updated>
  <content type="html">
   CycleGAN uses a cycle consistency loss to enable training without the need for paired data. In other words, it can translate from one domain to another without a one-to-one mapping between the source and target domain.  This opens up the possibility to do a lot of interesting tasks like photo-enhancement, image colorization, style transfer, etc. All you need is the source and the target dataset (which is simply a directory of images).
  </content>
 </entry>
 <entry>
  <title>Kinoko-Team: UpHtml</title>
  <author>
   <name>Kinoko-Team</name>
  </author>
  <link href="https://github.com/Kinoko-Team/UpHtml" />
  <id>urn:rprimus:github:Kinoko-Team:UpHtml</id>
  <published>2021-09-14T06:42:05Z</published>
  <updated>2021-09-14T06:42:05Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>YASHasvi-SHUkla: 30-Days-of-Code-HackerRank</title>
  <author>
   <name>YASHasvi-SHUkla</name>
  </author>
  <link href="https://github.com/YASHasvi-SHUkla/30-Days-of-Code-HackerRank" />
  <id>urn:rprimus:github:YASHasvi-SHUkla:30-Days-of-Code-HackerRank</id>
  <published>2021-09-14T06:37:04Z</published>
  <updated>2021-09-14T06:37:04Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>agnirudrasil: 12-practical</title>
  <author>
   <name>agnirudrasil</name>
  </author>
  <link href="https://github.com/agnirudrasil/12-practical" />
  <id>urn:rprimus:github:agnirudrasil:12-practical</id>
  <published>2021-09-14T06:36:00Z</published>
  <updated>2021-09-14T06:36:00Z</updated>
  <content type="html">
   This repository contains solutions to the programs for 12th computer practical
  </content>
 </entry>
 <entry>
  <title>Vadim-Losenkov: vktotgpid</title>
  <author>
   <name>Vadim-Losenkov</name>
  </author>
  <link href="https://github.com/Vadim-Losenkov/vktotgpid" />
  <id>urn:rprimus:github:Vadim-Losenkov:vktotgpid</id>
  <published>2021-09-14T06:22:01Z</published>
  <updated>2021-09-14T06:22:01Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>knfa28: fantasy-app-api</title>
  <author>
   <name>knfa28</name>
  </author>
  <link href="https://github.com/knfa28/fantasy-app-api" />
  <id>urn:rprimus:github:knfa28:fantasy-app-api</id>
  <published>2021-09-14T06:11:38Z</published>
  <updated>2021-09-14T06:11:38Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>Soumyadeep0732: YOLO_Object_Detector</title>
  <author>
   <name>Soumyadeep0732</name>
  </author>
  <link href="https://github.com/Soumyadeep0732/YOLO_Object_Detector" />
  <id>urn:rprimus:github:Soumyadeep0732:YOLO_Object_Detector</id>
  <published>2021-09-14T05:44:28Z</published>
  <updated>2021-09-14T05:44:28Z</updated>
  <content type="html">
   This model detect multiple objects and classify their class from one of the coco-names. Here  I have used pre trained weights and configuration of the yolo_v3_tiny by pjreddie.It runs on CPU and hence can be accessed by any normal computer without requiring any higher specifications.
  </content>
 </entry>
 <entry>
  <title>eric248550: WISE-PaaS-SDK-Dispenser</title>
  <author>
   <name>eric248550</name>
  </author>
  <link href="https://github.com/eric248550/WISE-PaaS-SDK-Dispenser" />
  <id>urn:rprimus:github:eric248550:WISE-PaaS-SDK-Dispenser</id>
  <published>2021-09-14T05:35:34Z</published>
  <updated>2021-09-14T05:35:34Z</updated>
  <content type="html">
   WISE-PaaS Teaching Meterial
  </content>
 </entry>
 <entry>
  <title>sacrobrent: Deface-Page-Generator</title>
  <author>
   <name>sacrobrent</name>
  </author>
  <link href="https://github.com/sacrobrent/Deface-Page-Generator" />
  <id>urn:rprimus:github:sacrobrent:Deface-Page-Generator</id>
  <published>2021-09-14T05:19:40Z</published>
  <updated>2021-09-14T05:19:40Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>mahorbhaskar: BlogSpot-Site</title>
  <author>
   <name>mahorbhaskar</name>
  </author>
  <link href="https://github.com/mahorbhaskar/BlogSpot-Site" />
  <id>urn:rprimus:github:mahorbhaskar:BlogSpot-Site</id>
  <published>2021-09-14T04:35:28Z</published>
  <updated>2021-09-14T04:35:28Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>rkrjritwikraj: cinegramanreco</title>
  <author>
   <name>rkrjritwikraj</name>
  </author>
  <link href="https://github.com/rkrjritwikraj/cinegramanreco" />
  <id>urn:rprimus:github:rkrjritwikraj:cinegramanreco</id>
  <published>2021-09-14T03:54:04Z</published>
  <updated>2021-09-14T03:54:04Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>SV-Ether: SV-Ether</title>
  <author>
   <name>SV-Ether</name>
  </author>
  <link href="https://github.com/SV-Ether/SV-Ether" />
  <id>urn:rprimus:github:SV-Ether:SV-Ether</id>
  <published>2021-09-14T03:28:40Z</published>
  <updated>2021-09-14T03:28:40Z</updated>
  <content type="html">
   Config files for my GitHub profile.
  </content>
 </entry>
 <entry>
  <title>Snaacky: Konata</title>
  <author>
   <name>Snaacky</name>
  </author>
  <link href="https://github.com/Snaacky/Konata" />
  <id>urn:rprimus:github:Snaacky:Konata</id>
  <published>2021-09-14T03:20:30Z</published>
  <updated>2021-09-14T03:20:30Z</updated>
  <content type="html">
   Konata is a music bot for Discord.
  </content>
 </entry>
 <entry>
  <title>Megha-Raj18: Data_Analysis_of_Car_Data</title>
  <author>
   <name>Megha-Raj18</name>
  </author>
  <link href="https://github.com/Megha-Raj18/Data_Analysis_of_Car_Data" />
  <id>urn:rprimus:github:Megha-Raj18:Data_Analysis_of_Car_Data</id>
  <published>2021-09-14T02:50:58Z</published>
  <updated>2021-09-14T02:50:58Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>emmanuelgiah: COVY</title>
  <author>
   <name>emmanuelgiah</name>
  </author>
  <link href="https://github.com/emmanuelgiah/COVY" />
  <id>urn:rprimus:github:emmanuelgiah:COVY</id>
  <published>2021-09-14T02:49:11Z</published>
  <updated>2021-09-14T02:49:11Z</updated>
  <content type="html">
   Python script that updates client on current covid cases
  </content>
 </entry>
 <entry>
  <title>SachinDabhade: Hack-the-wifi-Password-from-Other-computer</title>
  <author>
   <name>SachinDabhade</name>
  </author>
  <link href="https://github.com/SachinDabhade/Hack-the-wifi-Password-from-Other-computer" />
  <id>urn:rprimus:github:SachinDabhade:Hack-the-wifi-Password-from-Other-computer</id>
  <published>2021-09-14T02:40:48Z</published>
  <updated>2021-09-14T02:40:48Z</updated>
  <content type="html">
   Here, I write a code to extract the password which are presently connected or has connected in past. I have use the subprocess module to find these password. Note that it can only extract the wifi passwords which had connedted to the network at least one time.
  </content>
 </entry>
 <entry>
  <title>rhaps0day: nmscan</title>
  <author>
   <name>rhaps0day</name>
  </author>
  <link href="https://github.com/rhaps0day/nmscan" />
  <id>urn:rprimus:github:rhaps0day:nmscan</id>
  <published>2021-09-14T02:24:55Z</published>
  <updated>2021-09-14T02:24:55Z</updated>
  <content type="html">
   masscan+nmap
  </content>
 </entry>
 <entry>
  <title>xMinee: Deface-Index-Creator</title>
  <author>
   <name>xMinee</name>
  </author>
  <link href="https://github.com/xMinee/Deface-Index-Creator" />
  <id>urn:rprimus:github:xMinee:Deface-Index-Creator</id>
  <published>2021-09-14T02:13:03Z</published>
  <updated>2021-09-14T02:13:03Z</updated>
  <content type="html">
   Herramienta hecha en Python para crear Indexs de Deface
  </content>
 </entry>
 <entry>
  <title>tai-dang11: CvT-model</title>
  <author>
   <name>tai-dang11</name>
  </author>
  <link href="https://github.com/tai-dang11/CvT-model" />
  <id>urn:rprimus:github:tai-dang11:CvT-model</id>
  <published>2021-09-14T01:54:51Z</published>
  <updated>2021-09-14T01:54:51Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>dev-willcode: feelingtweets</title>
  <author>
   <name>dev-willcode</name>
  </author>
  <link href="https://github.com/dev-willcode/feelingtweets" />
  <id>urn:rprimus:github:dev-willcode:feelingtweets</id>
  <published>2021-09-14T01:53:55Z</published>
  <updated>2021-09-14T01:53:55Z</updated>
  <content type="html">
   A library to collect tweets, clean it (pre-processing), translate it, and create analytics with Textblob and VADER methods.
  </content>
 </entry>
 <entry>
  <title>xhw205: GlobalPointer_torch</title>
  <author>
   <name>xhw205</name>
  </author>
  <link href="https://github.com/xhw205/GlobalPointer_torch" />
  <id>urn:rprimus:github:xhw205:GlobalPointer_torch</id>
  <published>2021-09-14T01:51:51Z</published>
  <updated>2021-09-14T01:51:51Z</updated>
  <content type="html">
   CMeEE æ°æ®éå»å­¦å®ä½æ½å
  </content>
 </entry>
 <entry>
  <title>smallfish01: IT-Ops</title>
  <author>
   <name>smallfish01</name>
  </author>
  <link href="https://github.com/smallfish01/IT-Ops" />
  <id>urn:rprimus:github:smallfish01:IT-Ops</id>
  <published>2021-09-14T01:00:03Z</published>
  <updated>2021-09-14T01:00:03Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>Oshino29: ngaArchive</title>
  <author>
   <name>Oshino29</name>
  </author>
  <link href="https://github.com/Oshino29/ngaArchive" />
  <id>urn:rprimus:github:Oshino29:ngaArchive</id>
  <published>2021-09-14T00:04:10Z</published>
  <updated>2021-09-14T00:04:10Z</updated>
  <content type="html">
   ngaè®ºåå¸å­çå­æ¡£
  </content>
 </entry>
 <entry>
  <title>Lursy: Persux</title>
  <author>
   <name>Lursy</name>
  </author>
  <link href="https://github.com/Lursy/Persux" />
  <id>urn:rprimus:github:Lursy:Persux</id>
  <published>2021-09-13T21:31:20Z</published>
  <updated>2021-09-13T21:31:20Z</updated>
  <content type="html">
   Script para facilitar a personalizaÃ§Ã£o do termux
  </content>
 </entry>
 <entry>
  <title>danijar: crafter-baselines</title>
  <author>
   <name>danijar</name>
  </author>
  <link href="https://github.com/danijar/crafter-baselines" />
  <id>urn:rprimus:github:danijar:crafter-baselines</id>
  <published>2021-09-13T18:54:35Z</published>
  <updated>2021-09-13T18:54:35Z</updated>
  <content type="html">
   Docker containers of baseline agents for the Crafter environment
  </content>
 </entry>
 <entry>
  <title>abdulzain6: Free-Course-Hunter-and-Enroller</title>
  <author>
   <name>abdulzain6</name>
  </author>
  <link href="https://github.com/abdulzain6/Free-Course-Hunter-and-Enroller" />
  <id>urn:rprimus:github:abdulzain6:Free-Course-Hunter-and-Enroller</id>
  <published>2021-09-13T17:37:48Z</published>
  <updated>2021-09-13T17:37:48Z</updated>
  <content type="html">
   This is a very easy to use tool developed in python that will search for free courses from multiple sites including youtube and enroll in the ones in which it can.
  </content>
 </entry>
 <entry>
  <title>yuezih: King-of-Pigeon</title>
  <author>
   <name>yuezih</name>
  </author>
  <link href="https://github.com/yuezih/King-of-Pigeon" />
  <id>urn:rprimus:github:yuezih:King-of-Pigeon</id>
  <published>2021-09-13T16:16:42Z</published>
  <updated>2021-09-13T16:16:42Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>zurutech: anomaly-toolbox</title>
  <author>
   <name>zurutech</name>
  </author>
  <link href="https://github.com/zurutech/anomaly-toolbox" />
  <id>urn:rprimus:github:zurutech:anomaly-toolbox</id>
  <published>2021-09-13T14:30:11Z</published>
  <updated>2021-09-13T14:30:11Z</updated>
  <content type="html">
   Anomaly detection using GANs.
  </content>
 </entry>
 <entry>
  <title>ttttmr: checkproxy</title>
  <author>
   <name>ttttmr</name>
  </author>
  <link href="https://github.com/ttttmr/checkproxy" />
  <id>urn:rprimus:github:ttttmr:checkproxy</id>
  <published>2021-09-13T14:08:45Z</published>
  <updated>2021-09-13T14:08:45Z</updated>
  <content type="html">
   æ£æµæµè§å¨æ¯å¦å­å¨ä»£ç
  </content>
 </entry>
 <entry>
  <title>resistzzz: GNRRW</title>
  <author>
   <name>resistzzz</name>
  </author>
  <link href="https://github.com/resistzzz/GNRRW" />
  <id>urn:rprimus:github:resistzzz:GNRRW</id>
  <published>2021-09-13T12:26:16Z</published>
  <updated>2021-09-13T12:26:16Z</updated>
  <content type="html">
   Graph Neighborhood Routing and Random Walk for Session-based Recommendation (2021, ICDM)
  </content>
 </entry>
 <entry>
  <title>hey-booster: heybooster-toolkit</title>
  <author>
   <name>hey-booster</name>
  </author>
  <link href="https://github.com/hey-booster/heybooster-toolkit" />
  <id>urn:rprimus:github:hey-booster:heybooster-toolkit</id>
  <published>2021-09-13T11:23:34Z</published>
  <updated>2021-09-13T11:23:34Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>SachinDabhade: Read-and-Extract-Text-from-the-PDF-using-python-by-using-external-module-pyPDF2-</title>
  <author>
   <name>SachinDabhade</name>
  </author>
  <link href="https://github.com/SachinDabhade/Read-and-Extract-Text-from-the-PDF-using-python-by-using-external-module-pyPDF2-" />
  <id>urn:rprimus:github:SachinDabhade:Read-and-Extract-Text-from-the-PDF-using-python-by-using-external-module-pyPDF2-</id>
  <published>2021-09-13T11:07:37Z</published>
  <updated>2021-09-13T11:07:37Z</updated>
  <content type="html">
   Here, I am extracting and reading the text from the PDF. We not only reading and extracting but also we have plenty of options are available for the project but, due to less knowledge, I am not able to do this project completely so, I am inviting to all the open source contributor to contribute in this project and show case your skills and learning.
  </content>
 </entry>
 <entry>
  <title>SachinDabhade: Multiplication-of-two-matrices-from-scratch-without-using-library</title>
  <author>
   <name>SachinDabhade</name>
  </author>
  <link href="https://github.com/SachinDabhade/Multiplication-of-two-matrices-from-scratch-without-using-library" />
  <id>urn:rprimus:github:SachinDabhade:Multiplication-of-two-matrices-from-scratch-without-using-library</id>
  <published>2021-09-13T10:59:53Z</published>
  <updated>2021-09-13T10:59:53Z</updated>
  <content type="html">
   Here, I have multiply two matrices which is get from the user. I created this program from scratch as there is no built-in module or external module used in this program.
  </content>
 </entry>
 <entry>
  <title>SachinDabhade: Finding-HCF-i.e-Highest-Common-Factorial-using-python-from-scratch</title>
  <author>
   <name>SachinDabhade</name>
  </author>
  <link href="https://github.com/SachinDabhade/Finding-HCF-i.e-Highest-Common-Factorial-using-python-from-scratch" />
  <id>urn:rprimus:github:SachinDabhade:Finding-HCF-i.e-Highest-Common-Factorial-using-python-from-scratch</id>
  <published>2021-09-13T10:53:32Z</published>
  <updated>2021-09-13T10:53:32Z</updated>
  <content type="html">
   Here, I write the program to find the HCF - (Highest Common Factorial) by using python from scratch without using any library. So, Keep supporting my work.
  </content>
 </entry>
 <entry>
  <title>SachinDabhade: Finding-LCM-using-python-from-scratch</title>
  <author>
   <name>SachinDabhade</name>
  </author>
  <link href="https://github.com/SachinDabhade/Finding-LCM-using-python-from-scratch" />
  <id>urn:rprimus:github:SachinDabhade:Finding-LCM-using-python-from-scratch</id>
  <published>2021-09-13T10:48:21Z</published>
  <updated>2021-09-13T10:48:21Z</updated>
  <content type="html">
   Here, I write a practice program to find the LCM i.e Lowest Common Multiplication of two numbers using python without library.
  </content>
 </entry>
 <entry>
  <title>SachinDabhade: Adding-two-matrix-from-scratch-using-python.</title>
  <author>
   <name>SachinDabhade</name>
  </author>
  <link href="https://github.com/SachinDabhade/Adding-two-matrix-from-scratch-using-python." />
  <id>urn:rprimus:github:SachinDabhade:Adding-two-matrix-from-scratch-using-python.</id>
  <published>2021-09-13T10:43:41Z</published>
  <updated>2021-09-13T10:43:41Z</updated>
  <content type="html">
   Here, I have take two matrix from user and add it without using any library. I made this program from scratch.
  </content>
 </entry>
 <entry>
  <title>SachinDabhade: Flipping-Card-using-python</title>
  <author>
   <name>SachinDabhade</name>
  </author>
  <link href="https://github.com/SachinDabhade/Flipping-Card-using-python" />
  <id>urn:rprimus:github:SachinDabhade:Flipping-Card-using-python</id>
  <published>2021-09-13T10:28:53Z</published>
  <updated>2021-09-13T10:28:53Z</updated>
  <content type="html">
   I have see a question on youtube and I am very curious to solve it and finally I solve it very clearly. The question is &quot;20 random cards are placed in a row all faces down. A turn consists of taking two adjacent card where the left 1 is faced up and the right one can be faced up or faced down and flipping them both. Show that this process can be terminate.(With all the cards facing up)&quot;  and the solution for this is as follow.
  </content>
 </entry>
 <entry>
  <title>SachinDabhade: Fibonacci-Series-using-python</title>
  <author>
   <name>SachinDabhade</name>
  </author>
  <link href="https://github.com/SachinDabhade/Fibonacci-Series-using-python" />
  <id>urn:rprimus:github:SachinDabhade:Fibonacci-Series-using-python</id>
  <published>2021-09-13T09:58:47Z</published>
  <updated>2021-09-13T09:58:47Z</updated>
  <content type="html">
   Here, I find the Fibonacci Series using python
  </content>
 </entry>
 <entry>
  <title>SachinDabhade: Rest-API-using-Flask-in-live-server.</title>
  <author>
   <name>SachinDabhade</name>
  </author>
  <link href="https://github.com/SachinDabhade/Rest-API-using-Flask-in-live-server." />
  <id>urn:rprimus:github:SachinDabhade:Rest-API-using-Flask-in-live-server.</id>
  <published>2021-09-13T09:50:06Z</published>
  <updated>2021-09-13T09:50:06Z</updated>
  <content type="html">
   Here, I have created a rest API using python flask module and In this program, I use the JSON to share the data in the rest API of python. This flask App will only run on live server. We also can make live server from the cmd.
  </content>
 </entry>
 <entry>
  <title>SachinDabhade: Armstrong-Number-by-using-two-different-method</title>
  <author>
   <name>SachinDabhade</name>
  </author>
  <link href="https://github.com/SachinDabhade/Armstrong-Number-by-using-two-different-method" />
  <id>urn:rprimus:github:SachinDabhade:Armstrong-Number-by-using-two-different-method</id>
  <published>2021-09-13T09:36:01Z</published>
  <updated>2021-09-13T09:36:01Z</updated>
  <content type="html">
   Here, I am finding the armstrong number using two different method in python. I have use for loop for the first method and while loop for second one. But the major difference is the logic behind working behind the scene.
  </content>
 </entry>
 <entry>
  <title>SachinDabhade: Strong-password-Generator-from-existing-password-using-python</title>
  <author>
   <name>SachinDabhade</name>
  </author>
  <link href="https://github.com/SachinDabhade/Strong-password-Generator-from-existing-password-using-python" />
  <id>urn:rprimus:github:SachinDabhade:Strong-password-Generator-from-existing-password-using-python</id>
  <published>2021-09-13T09:20:28Z</published>
  <updated>2021-09-13T09:20:28Z</updated>
  <content type="html">
   In this program, I generate the strong password from existing password without class using python. The special thing in this program is that is generate very strong password from our existing password. It replaces some elements from password and put another elements in it.
  </content>
 </entry>
 <entry>
  <title>tfwcodes: Online-Meet</title>
  <author>
   <name>tfwcodes</name>
  </author>
  <link href="https://github.com/tfwcodes/Online-Meet" />
  <id>urn:rprimus:github:tfwcodes:Online-Meet</id>
  <published>2021-09-13T08:54:12Z</published>
  <updated>2021-09-13T08:54:12Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>FlyEgle: ResNet50vd-pytorch</title>
  <author>
   <name>FlyEgle</name>
  </author>
  <link href="https://github.com/FlyEgle/ResNet50vd-pytorch" />
  <id>urn:rprimus:github:FlyEgle:ResNet50vd-pytorch</id>
  <published>2021-09-13T07:57:26Z</published>
  <updated>2021-09-13T07:57:26Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>carlmas02: Simpson-Drawing</title>
  <author>
   <name>carlmas02</name>
  </author>
  <link href="https://github.com/carlmas02/Simpson-Drawing" />
  <id>urn:rprimus:github:carlmas02:Simpson-Drawing</id>
  <published>2021-09-13T07:13:22Z</published>
  <updated>2021-09-13T07:13:22Z</updated>
  <content type="html">
   Simple Simpson Cartoon created graphically using Tkinter Graphics 
  </content>
 </entry>
 <entry>
  <title>SachinDabhade: Auto-SMS-and-Email-sending-to-Birthday-Boy-Girl</title>
  <author>
   <name>SachinDabhade</name>
  </author>
  <link href="https://github.com/SachinDabhade/Auto-SMS-and-Email-sending-to-Birthday-Boy-Girl" />
  <id>urn:rprimus:github:SachinDabhade:Auto-SMS-and-Email-sending-to-Birthday-Boy-Girl</id>
  <published>2021-09-13T05:48:06Z</published>
  <updated>2021-09-13T05:48:06Z</updated>
  <content type="html">
   In this program, I am writing the code for automatic birthday wishing to my friends and family members through the SMS and Email. I wish I will further develop it in future.
  </content>
 </entry>
 <entry>
  <title>SachinDabhade: Random-Password-Generator-using-Python</title>
  <author>
   <name>SachinDabhade</name>
  </author>
  <link href="https://github.com/SachinDabhade/Random-Password-Generator-using-Python" />
  <id>urn:rprimus:github:SachinDabhade:Random-Password-Generator-using-Python</id>
  <published>2021-09-13T05:16:14Z</published>
  <updated>2021-09-13T05:16:14Z</updated>
  <content type="html">
   In this program, we generate random password for our social media handle. We use the random module, pickle module and string module. I personally use this computer program to generate random password. It also secure our password by converting it into binary form. And the same program is able to unhide or decode it to our normal form. So, keep enjoy this program
  </content>
 </entry>
 <entry>
  <title>SachinDabhade: Continuous-Zeros-using-pyhon</title>
  <author>
   <name>SachinDabhade</name>
  </author>
  <link href="https://github.com/SachinDabhade/Continuous-Zeros-using-pyhon" />
  <id>urn:rprimus:github:SachinDabhade:Continuous-Zeros-using-pyhon</id>
  <published>2021-09-13T03:00:35Z</published>
  <updated>2021-09-13T03:00:35Z</updated>
  <content type="html">
   In this program, I am finding trailing zeros that is the maximum continuous zeros occured in the factorial of a positive integer. I use the last factorial program to find this trailing zeros. This program is 100% python using function without classes.
  </content>
 </entry>
 <entry>
  <title>SachinDabhade: Factoral-Methods-using-two-different-method</title>
  <author>
   <name>SachinDabhade</name>
  </author>
  <link href="https://github.com/SachinDabhade/Factoral-Methods-using-two-different-method" />
  <id>urn:rprimus:github:SachinDabhade:Factoral-Methods-using-two-different-method</id>
  <published>2021-09-13T02:20:40Z</published>
  <updated>2021-09-13T02:20:40Z</updated>
  <content type="html">
   Here, I am finding the factorial of a number by using two different method. The first method is by using for loop and the second method is recursion method. Here recursion method is something tricky. It automatically use the computational power of computer but, its not the efficient method of finding factorial of number.
  </content>
 </entry>
 <entry>
  <title>Tingwep: Fund-crawler</title>
  <author>
   <name>Tingwep</name>
  </author>
  <link href="https://github.com/Tingwep/Fund-crawler" />
  <id>urn:rprimus:github:Tingwep:Fund-crawler</id>
  <published>2021-09-13T02:15:42Z</published>
  <updated>2021-09-13T02:15:42Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>SachinDabhade: Grocery-Bill-Generating-System</title>
  <author>
   <name>SachinDabhade</name>
  </author>
  <link href="https://github.com/SachinDabhade/Grocery-Bill-Generating-System" />
  <id>urn:rprimus:github:SachinDabhade:Grocery-Bill-Generating-System</id>
  <published>2021-09-13T02:05:56Z</published>
  <updated>2021-09-13T02:05:56Z</updated>
  <content type="html">
   This program generates bill automatically. When the user buy something it store the item which buy and the price or item and finally generate the electronic bill from this bill generating system. I don&#039;t use class here, this is 100% base on python.
  </content>
 </entry>
 <entry>
  <title>AsmInstrutor: py-mp3</title>
  <author>
   <name>AsmInstrutor</name>
  </author>
  <link href="https://github.com/AsmInstrutor/py-mp3" />
  <id>urn:rprimus:github:AsmInstrutor:py-mp3</id>
  <published>2021-09-13T01:58:04Z</published>
  <updated>2021-09-13T01:58:04Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>SachinDabhade: Fraud-Multiplication-Table-Detection-in-python</title>
  <author>
   <name>SachinDabhade</name>
  </author>
  <link href="https://github.com/SachinDabhade/Fraud-Multiplication-Table-Detection-in-python" />
  <id>urn:rprimus:github:SachinDabhade:Fraud-Multiplication-Table-Detection-in-python</id>
  <published>2021-09-13T01:23:23Z</published>
  <updated>2021-09-13T01:23:23Z</updated>
  <content type="html">
   In this program,  I have detected fraud multiplication table using python without class. Here, I have compare the original table with the fraud or wrong table and find the nth term that is wrong
  </content>
 </entry>
 <entry>
  <title>ItanuRomero: NewsletterReader</title>
  <author>
   <name>ItanuRomero</name>
  </author>
  <link href="https://github.com/ItanuRomero/NewsletterReader" />
  <id>urn:rprimus:github:ItanuRomero:NewsletterReader</id>
  <published>2021-09-13T00:34:57Z</published>
  <updated>2021-09-13T00:34:57Z</updated>
  <content type="html">
   You really do NOT have time for read a newsletter? Now you can listen to it
  </content>
 </entry>
 <entry>
  <title>EdenQwQ: QtileConfig</title>
  <author>
   <name>EdenQwQ</name>
  </author>
  <link href="https://github.com/EdenQwQ/QtileConfig" />
  <id>urn:rprimus:github:EdenQwQ:QtileConfig</id>
  <published>2021-09-12T23:58:36Z</published>
  <updated>2021-09-12T23:58:36Z</updated>
  <content type="html">
   My qtile config with a fresh-looking bar and pywal support
  </content>
 </entry>
 <entry>
  <title>jonathandata1: io</title>
  <author>
   <name>jonathandata1</name>
  </author>
  <link href="https://github.com/jonathandata1/io" />
  <id>urn:rprimus:github:jonathandata1:io</id>
  <published>2021-09-12T23:38:48Z</published>
  <updated>2021-09-12T23:38:48Z</updated>
  <content type="html">
   Monitor Live USB Plug In &amp; Plug Out Events
  </content>
 </entry>
 <entry>
  <title>AlexFlipnote: discord_events</title>
  <author>
   <name>AlexFlipnote</name>
  </author>
  <link href="https://github.com/AlexFlipnote/discord_events" />
  <id>urn:rprimus:github:AlexFlipnote:discord_events</id>
  <published>2021-09-12T20:19:23Z</published>
  <updated>2021-09-12T20:19:23Z</updated>
  <content type="html">
   Custom bot I&#039;ve made to host events on my personal Discord server.
  </content>
 </entry>
 <entry>
  <title>davidusb-geek: emhass</title>
  <author>
   <name>davidusb-geek</name>
  </author>
  <link href="https://github.com/davidusb-geek/emhass" />
  <id>urn:rprimus:github:davidusb-geek:emhass</id>
  <published>2021-09-12T19:49:39Z</published>
  <updated>2021-09-12T19:49:39Z</updated>
  <content type="html">
   emhass: Energy Management for Home Assistant
  </content>
 </entry>
 <entry>
  <title>asweigart: pwinput</title>
  <author>
   <name>asweigart</name>
  </author>
  <link href="https://github.com/asweigart/pwinput" />
  <id>urn:rprimus:github:asweigart:pwinput</id>
  <published>2021-09-12T18:56:15Z</published>
  <updated>2021-09-12T18:56:15Z</updated>
  <content type="html">
   A cross-platform Python module that displays **** for password input. Works on Windows, unlike getpass. Formerly called stdiomask.
  </content>
 </entry>
 <entry>
  <title>patriciogonzalezvivo: HeNerator</title>
  <author>
   <name>patriciogonzalezvivo</name>
  </author>
  <link href="https://github.com/patriciogonzalezvivo/HeNerator" />
  <id>urn:rprimus:github:patriciogonzalezvivo:HeNerator</id>
  <published>2021-09-12T18:16:52Z</published>
  <updated>2021-09-12T18:16:52Z</updated>
  <content type="html">
   script to generate HeN ipfs app exports  of GLSL shaders 
  </content>
 </entry>
 <entry>
  <title>aslitsecurity: CVE-2021-40444_builders</title>
  <author>
   <name>aslitsecurity</name>
  </author>
  <link href="https://github.com/aslitsecurity/CVE-2021-40444_builders" />
  <id>urn:rprimus:github:aslitsecurity:CVE-2021-40444_builders</id>
  <published>2021-09-12T18:05:53Z</published>
  <updated>2021-09-12T18:05:53Z</updated>
  <content type="html">
   This repo contain builders of cab file, html file, and docx file for CVE-2021-40444 exploit
  </content>
 </entry>
 <entry>
  <title>SachinDabhade: Palindrome-List-in-python</title>
  <author>
   <name>SachinDabhade</name>
  </author>
  <link href="https://github.com/SachinDabhade/Palindrome-List-in-python" />
  <id>urn:rprimus:github:SachinDabhade:Palindrome-List-in-python</id>
  <published>2021-09-12T18:04:59Z</published>
  <updated>2021-09-12T18:04:59Z</updated>
  <content type="html">
   Here, I use the list of number to check the palindrome number or not.
  </content>
 </entry>
 <entry>
  <title>benkehoe: permissions-boundary-test</title>
  <author>
   <name>benkehoe</name>
  </author>
  <link href="https://github.com/benkehoe/permissions-boundary-test" />
  <id>urn:rprimus:github:benkehoe:permissions-boundary-test</id>
  <published>2021-09-12T17:51:26Z</published>
  <updated>2021-09-12T17:51:26Z</updated>
  <content type="html">
   Demonstration that AWS IAM policy evaluation docs are incorrect
  </content>
 </entry>
 <entry>
  <title>SachinDabhade: Palindrome-number-in-python</title>
  <author>
   <name>SachinDabhade</name>
  </author>
  <link href="https://github.com/SachinDabhade/Palindrome-number-in-python" />
  <id>urn:rprimus:github:SachinDabhade:Palindrome-number-in-python</id>
  <published>2021-09-12T17:51:03Z</published>
  <updated>2021-09-12T17:51:03Z</updated>
  <content type="html">
   Here, I will find the palindrome number using python without class
  </content>
 </entry>
 <entry>
  <title>SachinDabhade: Three-different-method-for-list-reversion</title>
  <author>
   <name>SachinDabhade</name>
  </author>
  <link href="https://github.com/SachinDabhade/Three-different-method-for-list-reversion" />
  <id>urn:rprimus:github:SachinDabhade:Three-different-method-for-list-reversion</id>
  <published>2021-09-12T17:44:24Z</published>
  <updated>2021-09-12T17:44:24Z</updated>
  <content type="html">
   Here, I have discuss the three methods of list reversion. The three methods are built-in method, slicing method and position changing method.
  </content>
 </entry>
 <entry>
  <title>iawoken: telegram-bot</title>
  <author>
   <name>iawoken</name>
  </author>
  <link href="https://github.com/iawoken/telegram-bot" />
  <id>urn:rprimus:github:iawoken:telegram-bot</id>
  <published>2021-09-12T15:59:55Z</published>
  <updated>2021-09-12T15:59:55Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>asaotomo: SearchMap</title>
  <author>
   <name>asaotomo</name>
  </author>
  <link href="https://github.com/asaotomo/SearchMap" />
  <id>urn:rprimus:github:asaotomo:SearchMap</id>
  <published>2021-09-12T15:04:13Z</published>
  <updated>2021-09-12T15:04:13Z</updated>
  <content type="html">
   SearchMapæ¯ä¸æ¬¾éååè§£æãWHOISæ¥è¯¢ãCDNæ£æµãç«¯å£æ«æãç®å½æ«æãå­ååææä¸ºä¸ä½çåæ¸éæµè¯ç»¼åä¿¡æ¯æ¶éå·¥å·ã
  </content>
 </entry>
 <entry>
  <title>tgb20: SpigotExporter</title>
  <author>
   <name>tgb20</name>
  </author>
  <link href="https://github.com/tgb20/SpigotExporter" />
  <id>urn:rprimus:github:tgb20:SpigotExporter</id>
  <published>2021-09-12T15:00:26Z</published>
  <updated>2021-09-12T15:00:26Z</updated>
  <content type="html">
   Prometheus exporter for Spigot accounts
  </content>
 </entry>
 <entry>
  <title>danielplohmann: picblocks</title>
  <author>
   <name>danielplohmann</name>
  </author>
  <link href="https://github.com/danielplohmann/picblocks" />
  <id>urn:rprimus:github:danielplohmann:picblocks</id>
  <published>2021-09-12T14:41:57Z</published>
  <updated>2021-09-12T14:41:57Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>kohlrabi: mc3g</title>
  <author>
   <name>kohlrabi</name>
  </author>
  <link href="https://github.com/kohlrabi/mc3g" />
  <id>urn:rprimus:github:kohlrabi:mc3g</id>
  <published>2021-09-12T14:24:54Z</published>
  <updated>2021-09-12T14:24:54Z</updated>
  <content type="html">
   Monte Carlo simulation of 3G rules
  </content>
 </entry>
 <entry>
  <title>BlackIQ: OnTime</title>
  <author>
   <name>BlackIQ</name>
  </author>
  <link href="https://github.com/BlackIQ/OnTime" />
  <id>urn:rprimus:github:BlackIQ:OnTime</id>
  <published>2021-09-12T11:14:37Z</published>
  <updated>2021-09-12T11:14:37Z</updated>
  <content type="html">
   Always be OnTime!
  </content>
 </entry>
 <entry>
  <title>FayasNoushad: EddieHub</title>
  <author>
   <name>FayasNoushad</name>
  </author>
  <link href="https://github.com/FayasNoushad/EddieHub" />
  <id>urn:rprimus:github:FayasNoushad:EddieHub</id>
  <published>2021-09-12T11:08:49Z</published>
  <updated>2021-09-12T11:08:49Z</updated>
  <content type="html">
   A EddieHub API python package.
  </content>
 </entry>
 <entry>
  <title>SachinDabhade: Email-extraction-using-Regular-Expression-Patterns</title>
  <author>
   <name>SachinDabhade</name>
  </author>
  <link href="https://github.com/SachinDabhade/Email-extraction-using-Regular-Expression-Patterns" />
  <id>urn:rprimus:github:SachinDabhade:Email-extraction-using-Regular-Expression-Patterns</id>
  <published>2021-09-12T10:57:11Z</published>
  <updated>2021-09-12T10:57:11Z</updated>
  <content type="html">
   In this program, I have use the regular expression built-in library for the extraction of email from the vast data. This program is useful when we are unable to find something from particular data. We use the Regular expression when we detect any pattern in the string that we have to search.
  </content>
 </entry>
 <entry>
  <title>SachinDabhade: Hiding-and-Unhiding-Data-in-python</title>
  <author>
   <name>SachinDabhade</name>
  </author>
  <link href="https://github.com/SachinDabhade/Hiding-and-Unhiding-Data-in-python" />
  <id>urn:rprimus:github:SachinDabhade:Hiding-and-Unhiding-Data-in-python</id>
  <published>2021-09-12T10:17:25Z</published>
  <updated>2021-09-12T10:17:25Z</updated>
  <content type="html">
   Here, I have created a program that will hide the data. It can be use for the private data and the sensitive data hiding. We can also unhide it by using same program.  We can hide any type of data using this method. The main features of this program is its easy to use.
  </content>
 </entry>
 <entry>
  <title>bbelderbos: carbon-selenium</title>
  <author>
   <name>bbelderbos</name>
  </author>
  <link href="https://github.com/bbelderbos/carbon-selenium" />
  <id>urn:rprimus:github:bbelderbos:carbon-selenium</id>
  <published>2021-09-12T09:02:12Z</published>
  <updated>2021-09-12T09:02:12Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>OPEN-AIR-SUN: PQ-Transformer</title>
  <author>
   <name>OPEN-AIR-SUN</name>
  </author>
  <link href="https://github.com/OPEN-AIR-SUN/PQ-Transformer" />
  <id>urn:rprimus:github:OPEN-AIR-SUN:PQ-Transformer</id>
  <published>2021-09-12T08:11:06Z</published>
  <updated>2021-09-12T08:11:06Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>SachinDabhade: Month-Guessing-Game-in-python</title>
  <author>
   <name>SachinDabhade</name>
  </author>
  <link href="https://github.com/SachinDabhade/Month-Guessing-Game-in-python" />
  <id>urn:rprimus:github:SachinDabhade:Month-Guessing-Game-in-python</id>
  <published>2021-09-12T08:03:32Z</published>
  <updated>2021-09-12T08:03:32Z</updated>
  <content type="html">
   In this program, we have to guess the month on year for which the blank spaces are printed. If we guess correct answer, then the program will give win result to user.
  </content>
 </entry>
 <entry>
  <title>Jorricks: python-degiro</title>
  <author>
   <name>Jorricks</name>
  </author>
  <link href="https://github.com/Jorricks/python-degiro" />
  <id>urn:rprimus:github:Jorricks:python-degiro</id>
  <published>2021-09-12T08:03:30Z</published>
  <updated>2021-09-12T08:03:30Z</updated>
  <content type="html">
   An unofficial python API for trading on the DeGiro platform, with the ability to get real time data and historical data.
  </content>
 </entry>
 <entry>
  <title>LingDong-: tk-fangsong-font</title>
  <author>
   <name>LingDong-</name>
  </author>
  <link href="https://github.com/LingDong-/tk-fangsong-font" />
  <id>urn:rprimus:github:LingDong-:tk-fangsong-font</id>
  <published>2021-09-12T06:15:46Z</published>
  <updated>2021-09-12T06:15:46Z</updated>
  <content type="html">
   åéª¨ä»¿å®: Experimental Fang Song style Chinese font
  </content>
 </entry>
 <entry>
  <title>zahranorozzadeh: miniprojeh4</title>
  <author>
   <name>zahranorozzadeh</name>
  </author>
  <link href="https://github.com/zahranorozzadeh/miniprojeh4" />
  <id>urn:rprimus:github:zahranorozzadeh:miniprojeh4</id>
  <published>2021-09-12T05:34:28Z</published>
  <updated>2021-09-12T05:34:28Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>VegetaxD: VideoStreamBot</title>
  <author>
   <name>VegetaxD</name>
  </author>
  <link href="https://github.com/VegetaxD/VideoStreamBot" />
  <id>urn:rprimus:github:VegetaxD:VideoStreamBot</id>
  <published>2021-09-12T05:06:41Z</published>
  <updated>2021-09-12T05:06:41Z</updated>
  <content type="html">
   A Video Streaming Telegram Bot with queues written in Python with Pyrogram and PyTgcalls
  </content>
 </entry>
 <entry>
  <title>jordaneremieff: django-sphinx-view-example</title>
  <author>
   <name>jordaneremieff</name>
  </author>
  <link href="https://github.com/jordaneremieff/django-sphinx-view-example" />
  <id>urn:rprimus:github:jordaneremieff:django-sphinx-view-example</id>
  <published>2021-09-12T04:57:36Z</published>
  <updated>2021-09-12T04:57:36Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>yumeng5: RoSTER</title>
  <author>
   <name>yumeng5</name>
  </author>
  <link href="https://github.com/yumeng5/RoSTER" />
  <id>urn:rprimus:github:yumeng5:RoSTER</id>
  <published>2021-09-12T03:36:26Z</published>
  <updated>2021-09-12T03:36:26Z</updated>
  <content type="html">
   [EMNLP 2021] Distantly-Supervised Named Entity Recognition with Noise-Robust Learning and Language Model Augmented Self-Training
  </content>
 </entry>
 <entry>
  <title>dchoruzy: hltv-data</title>
  <author>
   <name>dchoruzy</name>
  </author>
  <link href="https://github.com/dchoruzy/hltv-data" />
  <id>urn:rprimus:github:dchoruzy:hltv-data</id>
  <published>2021-09-12T01:38:15Z</published>
  <updated>2021-09-12T01:38:15Z</updated>
  <content type="html">
   Data from popular CS:GO website hltv.org
  </content>
 </entry>
</feed>
