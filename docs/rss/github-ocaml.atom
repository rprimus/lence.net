<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<link rel="self" type="application/atom+xml" href="http://lence.net/github-ocaml.atom"/>
<id>urn:rprimus:github:newocamlrepos</id>
<updated>2024-05-08T04:12:06Z</updated>
<title type='text'>New GitHub Ocaml Repos</title>
 <entry>
  <title>33Arsenic75: ProCaml</title>
  <author>
   <name>33Arsenic75</name>
  </author>
  <link href="https://github.com/33Arsenic75/ProCaml" />
  <id>urn:rprimus:github:33Arsenic75:ProCaml</id>
  <published>2024-05-08T04:12:06Z</published>
  <updated>2024-05-08T04:12:06Z</updated>
  <content type="html">
   Prolog Interpreter in OCaml
  </content>
 </entry>
 <entry>
  <title>GrumpyBumbleBee: CSCI2041</title>
  <author>
   <name>GrumpyBumbleBee</name>
  </author>
  <link href="https://github.com/GrumpyBumbleBee/CSCI2041" />
  <id>urn:rprimus:github:GrumpyBumbleBee:CSCI2041</id>
  <published>2024-05-07T22:50:04Z</published>
  <updated>2024-05-07T22:50:04Z</updated>
  <content type="html">
   CSCI2041 [assignments, labs, homework] 
  </content>
 </entry>
 <entry>
  <title>drewwilen: CS3110FinalProject</title>
  <author>
   <name>drewwilen</name>
  </author>
  <link href="https://github.com/drewwilen/CS3110FinalProject" />
  <id>urn:rprimus:github:drewwilen:CS3110FinalProject</id>
  <published>2024-05-07T20:49:34Z</published>
  <updated>2024-05-07T20:49:34Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>isnotJack: M.Sc._University</title>
  <author>
   <name>isnotJack</name>
  </author>
  <link href="https://github.com/isnotJack/M.Sc._University" />
  <id>urn:rprimus:github:isnotJack:M.Sc._University</id>
  <published>2024-05-07T17:46:09Z</published>
  <updated>2024-05-07T17:46:09Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>oyumusak: h42n42rework</title>
  <author>
   <name>oyumusak</name>
  </author>
  <link href="https://github.com/oyumusak/h42n42rework" />
  <id>urn:rprimus:github:oyumusak:h42n42rework</id>
  <published>2024-05-07T15:00:46Z</published>
  <updated>2024-05-07T15:00:46Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>esohel30: Ocaml-Experience</title>
  <author>
   <name>esohel30</name>
  </author>
  <link href="https://github.com/esohel30/Ocaml-Experience" />
  <id>urn:rprimus:github:esohel30:Ocaml-Experience</id>
  <published>2024-05-07T00:06:48Z</published>
  <updated>2024-05-07T00:06:48Z</updated>
  <content type="html">
   This is all my relevant experience with OCaml. 
  </content>
 </entry>
 <entry>
  <title>jassarnu: Compiler</title>
  <author>
   <name>jassarnu</name>
  </author>
  <link href="https://github.com/jassarnu/Compiler" />
  <id>urn:rprimus:github:jassarnu:Compiler</id>
  <published>2024-05-06T19:12:28Z</published>
  <updated>2024-05-06T19:12:28Z</updated>
  <content type="html">
   Compiler in Ocaml, Compiles from Scheme to Assembly x86
  </content>
 </entry>
 <entry>
  <title>mtoohey31: ppx_cmd</title>
  <author>
   <name>mtoohey31</name>
  </author>
  <link href="https://github.com/mtoohey31/ppx_cmd" />
  <id>urn:rprimus:github:mtoohey31:ppx_cmd</id>
  <published>2024-05-06T18:42:47Z</published>
  <updated>2024-05-06T18:42:47Z</updated>
  <content type="html">
   Declarative command line parsing for OCaml with `@@deriving`.
  </content>
 </entry>
 <entry>
  <title>Every2: lisp-interpreter</title>
  <author>
   <name>Every2</name>
  </author>
  <link href="https://github.com/Every2/lisp-interpreter" />
  <id>urn:rprimus:github:Every2:lisp-interpreter</id>
  <published>2024-05-06T17:53:12Z</published>
  <updated>2024-05-06T17:53:12Z</updated>
  <content type="html">
   A simple Lisp interpreter in ocaml
  </content>
 </entry>
 <entry>
  <title>alexblanche: ocaml_multi-mode_build</title>
  <author>
   <name>alexblanche</name>
  </author>
  <link href="https://github.com/alexblanche/ocaml_multi-mode_build" />
  <id>urn:rprimus:github:alexblanche:ocaml_multi-mode_build</id>
  <published>2024-05-06T17:44:45Z</published>
  <updated>2024-05-06T17:44:45Z</updated>
  <content type="html">
   Experimental build tool that aims at allowing the same OCaml code to be used in interactive mode (REPL) and compiled with the native-code compiler ocamlopt
  </content>
 </entry>
 <entry>
  <title>nilayg99: Calculator_Ocaml</title>
  <author>
   <name>nilayg99</name>
  </author>
  <link href="https://github.com/nilayg99/Calculator_Ocaml" />
  <id>urn:rprimus:github:nilayg99:Calculator_Ocaml</id>
  <published>2024-05-06T16:04:10Z</published>
  <updated>2024-05-06T16:04:10Z</updated>
  <content type="html">
   Simple OCaml Calculator : This repository contains a simple calculator implemented in OCaml. The calculator allows users to perform basic arithmetic operations such as addition, subtraction, multiplication, and division. It features a command-line interface where users can select their desired operation and input numbers for calculation.
  </content>
 </entry>
 <entry>
  <title>oyumusak: h42n42</title>
  <author>
   <name>oyumusak</name>
  </author>
  <link href="https://github.com/oyumusak/h42n42" />
  <id>urn:rprimus:github:oyumusak:h42n42</id>
  <published>2024-05-06T16:02:37Z</published>
  <updated>2024-05-06T16:02:37Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>tjdevries: m-lua</title>
  <author>
   <name>tjdevries</name>
  </author>
  <link href="https://github.com/tjdevries/m-lua" />
  <id>urn:rprimus:github:tjdevries:m-lua</id>
  <published>2024-05-06T15:46:33Z</published>
  <updated>2024-05-06T15:46:33Z</updated>
  <content type="html">
   o lua m&#039;lua
  </content>
 </entry>
 <entry>
  <title>Marken-Foo: ghostcaml</title>
  <author>
   <name>Marken-Foo</name>
  </author>
  <link href="https://github.com/Marken-Foo/ghostcaml" />
  <id>urn:rprimus:github:Marken-Foo:ghostcaml</id>
  <published>2024-05-06T15:19:54Z</published>
  <updated>2024-05-06T15:19:54Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>amalik03: LC-Interpreter</title>
  <author>
   <name>amalik03</name>
  </author>
  <link href="https://github.com/amalik03/LC-Interpreter" />
  <id>urn:rprimus:github:amalik03:LC-Interpreter</id>
  <published>2024-05-06T14:23:59Z</published>
  <updated>2024-05-06T14:23:59Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>hasshe: Graph-Handler-Ocaml</title>
  <author>
   <name>hasshe</name>
  </author>
  <link href="https://github.com/hasshe/Graph-Handler-Ocaml" />
  <id>urn:rprimus:github:hasshe:Graph-Handler-Ocaml</id>
  <published>2024-05-06T13:11:38Z</published>
  <updated>2024-05-06T13:11:38Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>33Arsenic75: COL226_Resources_2302</title>
  <author>
   <name>33Arsenic75</name>
  </author>
  <link href="https://github.com/33Arsenic75/COL226_Resources_2302" />
  <id>urn:rprimus:github:33Arsenic75:COL226_Resources_2302</id>
  <published>2024-05-06T12:55:00Z</published>
  <updated>2024-05-06T12:55:00Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>2lambda123: mirage-mirage</title>
  <author>
   <name>2lambda123</name>
  </author>
  <link href="https://github.com/2lambda123/mirage-mirage" />
  <id>urn:rprimus:github:2lambda123:mirage-mirage</id>
  <published>2024-05-06T12:38:08Z</published>
  <updated>2024-05-06T12:38:08Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>MagaliCASA: File_language</title>
  <author>
   <name>MagaliCASA</name>
  </author>
  <link href="https://github.com/MagaliCASA/File_language" />
  <id>urn:rprimus:github:MagaliCASA:File_language</id>
  <published>2024-05-06T10:01:35Z</published>
  <updated>2024-05-06T10:01:35Z</updated>
  <content type="html">
   New language for the manipulation of files and repositories.
  </content>
 </entry>
 <entry>
  <title>Asrat77: hello_ocam</title>
  <author>
   <name>Asrat77</name>
  </author>
  <link href="https://github.com/Asrat77/hello_ocam" />
  <id>urn:rprimus:github:Asrat77:hello_ocam</id>
  <published>2024-05-06T09:31:52Z</published>
  <updated>2024-05-06T09:31:52Z</updated>
  <content type="html">
   First OCaml Project. Might get interesting...
  </content>
 </entry>
 <entry>
  <title>Neptunium931: ocamlLearn</title>
  <author>
   <name>Neptunium931</name>
  </author>
  <link href="https://github.com/Neptunium931/ocamlLearn" />
  <id>urn:rprimus:github:Neptunium931:ocamlLearn</id>
  <published>2024-05-06T08:58:45Z</published>
  <updated>2024-05-06T08:58:45Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>ahrefs: ppx_deriving_variant_string</title>
  <author>
   <name>ahrefs</name>
  </author>
  <link href="https://github.com/ahrefs/ppx_deriving_variant_string" />
  <id>urn:rprimus:github:ahrefs:ppx_deriving_variant_string</id>
  <published>2024-05-06T06:37:58Z</published>
  <updated>2024-05-06T06:37:58Z</updated>
  <content type="html">
   OCaml PPX deriver that generates converters between regular or polymorphic variants and strings
  </content>
 </entry>
 <entry>
  <title>dannyvelas: jqaml</title>
  <author>
   <name>dannyvelas</name>
  </author>
  <link href="https://github.com/dannyvelas/jqaml" />
  <id>urn:rprimus:github:dannyvelas:jqaml</id>
  <published>2024-05-06T02:56:56Z</published>
  <updated>2024-05-06T02:56:56Z</updated>
  <content type="html">
   jq implementation in ocaml
  </content>
 </entry>
</feed>
