<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<link rel="self" type="application/atom+xml" href="http://lence.net/github-ocaml.atom"/>
<id>urn:rprimus:github:newocamlrepos</id>
<updated>2021-03-02T04:58:20Z</updated>
<title type='text'>New GitHub Ocaml Repos</title>
 <entry>
  <title>jschneiderhan15: CS_496</title>
  <author>
   <name>jschneiderhan15</name>
  </author>
  <link href="https://github.com/jschneiderhan15/CS_496" />
  <id>urn:rprimus:github:jschneiderhan15:CS_496</id>
  <published>2021-03-02T04:58:20Z</published>
  <updated>2021-03-02T04:58:20Z</updated>
  <content type="html">
   Coding assignments from the class CS 496 - Programming Languages. Spring 2021
  </content>
 </entry>
 <entry>
  <title>zakharovmike: maxflow-ford-fulkerson</title>
  <author>
   <name>zakharovmike</name>
  </author>
  <link href="https://github.com/zakharovmike/maxflow-ford-fulkerson" />
  <id>urn:rprimus:github:zakharovmike:maxflow-ford-fulkerson</id>
  <published>2021-03-01T23:04:26Z</published>
  <updated>2021-03-01T23:04:26Z</updated>
  <content type="html">
   Maximum flow problem solver written in OCaml.
  </content>
 </entry>
 <entry>
  <title>TonyZhangND: Performal2</title>
  <author>
   <name>TonyZhangND</name>
  </author>
  <link href="https://github.com/TonyZhangND/Performal2" />
  <id>urn:rprimus:github:TonyZhangND:Performal2</id>
  <published>2021-03-01T19:56:04Z</published>
  <updated>2021-03-01T19:56:04Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>art-w: deque</title>
  <author>
   <name>art-w</name>
  </author>
  <link href="https://github.com/art-w/deque" />
  <id>urn:rprimus:github:art-w:deque</id>
  <published>2021-03-01T19:14:55Z</published>
  <updated>2021-03-01T19:14:55Z</updated>
  <content type="html">
   Purely Functional, Real-Time Deques with Catenation
  </content>
 </entry>
 <entry>
  <title>smaczliwka: WPF</title>
  <author>
   <name>smaczliwka</name>
  </author>
  <link href="https://github.com/smaczliwka/WPF" />
  <id>urn:rprimus:github:smaczliwka:WPF</id>
  <published>2021-03-01T18:51:03Z</published>
  <updated>2021-03-01T18:51:03Z</updated>
  <content type="html">
   Introduction to programming (functional approach), University of Warsaw
  </content>
 </entry>
 <entry>
  <title>vsiles: dune_opt_copy</title>
  <author>
   <name>vsiles</name>
  </author>
  <link href="https://github.com/vsiles/dune_opt_copy" />
  <id>urn:rprimus:github:vsiles:dune_opt_copy</id>
  <published>2021-03-01T10:12:19Z</published>
  <updated>2021-03-01T10:12:19Z</updated>
  <content type="html">
   sandbox to test dune optional copy 
  </content>
 </entry>
 <entry>
  <title>simalaia: tseitin</title>
  <author>
   <name>simalaia</name>
  </author>
  <link href="https://github.com/simalaia/tseitin" />
  <id>urn:rprimus:github:simalaia:tseitin</id>
  <published>2021-03-01T09:19:25Z</published>
  <updated>2021-03-01T09:19:25Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>spd75: a1</title>
  <author>
   <name>spd75</name>
  </author>
  <link href="https://github.com/spd75/a1" />
  <id>urn:rprimus:github:spd75:a1</id>
  <published>2021-03-01T09:08:35Z</published>
  <updated>2021-03-01T09:08:35Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>simalaia: ansi</title>
  <author>
   <name>simalaia</name>
  </author>
  <link href="https://github.com/simalaia/ansi" />
  <id>urn:rprimus:github:simalaia:ansi</id>
  <published>2021-03-01T08:47:22Z</published>
  <updated>2021-03-01T08:47:22Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>simalaia: dimacsparser</title>
  <author>
   <name>simalaia</name>
  </author>
  <link href="https://github.com/simalaia/dimacsparser" />
  <id>urn:rprimus:github:simalaia:dimacsparser</id>
  <published>2021-03-01T08:43:47Z</published>
  <updated>2021-03-01T08:43:47Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>den-taku: interpreter-ocaml</title>
  <author>
   <name>den-taku</name>
  </author>
  <link href="https://github.com/den-taku/interpreter-ocaml" />
  <id>urn:rprimus:github:den-taku:interpreter-ocaml</id>
  <published>2021-03-01T05:13:41Z</published>
  <updated>2021-03-01T05:13:41Z</updated>
  <content type="html">
   Learn about language processor with https://kuis-isle3sw.github.io/IoPLMaterials/
  </content>
 </entry>
 <entry>
  <title>headdnclouds: 99problemsInOcaml</title>
  <author>
   <name>headdnclouds</name>
  </author>
  <link href="https://github.com/headdnclouds/99problemsInOcaml" />
  <id>urn:rprimus:github:headdnclouds:99problemsInOcaml</id>
  <published>2021-02-28T20:12:02Z</published>
  <updated>2021-02-28T20:12:02Z</updated>
  <content type="html">
   https://ocaml.org/learn/tutorials/99problems.html
  </content>
 </entry>
 <entry>
  <title>Ssouh: Compiler_miniML</title>
  <author>
   <name>Ssouh</name>
  </author>
  <link href="https://github.com/Ssouh/Compiler_miniML" />
  <id>urn:rprimus:github:Ssouh:Compiler_miniML</id>
  <published>2021-02-28T18:18:54Z</published>
  <updated>2021-02-28T18:18:54Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>eladsolomon: Compiler</title>
  <author>
   <name>eladsolomon</name>
  </author>
  <link href="https://github.com/eladsolomon/Compiler" />
  <id>urn:rprimus:github:eladsolomon:Compiler</id>
  <published>2021-02-28T13:21:24Z</published>
  <updated>2021-02-28T13:21:24Z</updated>
  <content type="html">
   Compiler written at Ocaml from Scheme to Assembly
  </content>
 </entry>
 <entry>
  <title>coralshemesh: compiler---comp211</title>
  <author>
   <name>coralshemesh</name>
  </author>
  <link href="https://github.com/coralshemesh/compiler---comp211" />
  <id>urn:rprimus:github:coralshemesh:compiler---comp211</id>
  <published>2021-02-28T13:01:59Z</published>
  <updated>2021-02-28T13:01:59Z</updated>
  <content type="html">
   a compiler from Scheme to Assembly x86
  </content>
 </entry>
 <entry>
  <title>mjp217: l1_compiler</title>
  <author>
   <name>mjp217</name>
  </author>
  <link href="https://github.com/mjp217/l1_compiler" />
  <id>urn:rprimus:github:mjp217:l1_compiler</id>
  <published>2021-02-28T12:57:42Z</published>
  <updated>2021-02-28T12:57:42Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>Beal8: Tipe</title>
  <author>
   <name>Beal8</name>
  </author>
  <link href="https://github.com/Beal8/Tipe" />
  <id>urn:rprimus:github:Beal8:Tipe</id>
  <published>2021-02-28T11:02:11Z</published>
  <updated>2021-02-28T11:02:11Z</updated>
  <content type="html">
   Implementation of a small proof assistant in ocaml
  </content>
 </entry>
 <entry>
  <title>kirango2303: paint-app</title>
  <author>
   <name>kirango2303</name>
  </author>
  <link href="https://github.com/kirango2303/paint-app" />
  <id>urn:rprimus:github:kirango2303:paint-app</id>
  <published>2021-02-28T07:22:49Z</published>
  <updated>2021-02-28T07:22:49Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>space-miner: 99-problems</title>
  <author>
   <name>space-miner</name>
  </author>
  <link href="https://github.com/space-miner/99-problems" />
  <id>urn:rprimus:github:space-miner:99-problems</id>
  <published>2021-02-28T05:43:33Z</published>
  <updated>2021-02-28T05:43:33Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>ELLIOTTCABLE: bs-slash-create</title>
  <author>
   <name>ELLIOTTCABLE</name>
  </author>
  <link href="https://github.com/ELLIOTTCABLE/bs-slash-create" />
  <id>urn:rprimus:github:ELLIOTTCABLE:bs-slash-create</id>
  <published>2021-02-28T03:21:15Z</published>
  <updated>2021-02-28T03:21:15Z</updated>
  <content type="html">
   ReScript / BuckleScript bindings to the slash-create library for Discord commands
  </content>
 </entry>
</feed>
