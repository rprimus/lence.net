<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<link rel="self" type="application/atom+xml" href="http://lence.net/github-ocaml.atom"/>
<id>urn:rprimus:github:newocamlrepos</id>
<updated>2021-06-17T08:39:03Z</updated>
<title type='text'>New GitHub Ocaml Repos</title>
 <entry>
  <title>gcluzel: Fouine</title>
  <author>
   <name>gcluzel</name>
  </author>
  <link href="https://github.com/gcluzel/Fouine" />
  <id>urn:rprimus:github:gcluzel:Fouine</id>
  <published>2021-06-17T08:39:03Z</published>
  <updated>2021-06-17T08:39:03Z</updated>
  <content type="html">
   A basic ML interpreter and compiler
  </content>
 </entry>
 <entry>
  <title>gcluzel: SAT_solver</title>
  <author>
   <name>gcluzel</name>
  </author>
  <link href="https://github.com/gcluzel/SAT_solver" />
  <id>urn:rprimus:github:gcluzel:SAT_solver</id>
  <published>2021-06-17T08:33:11Z</published>
  <updated>2021-06-17T08:33:11Z</updated>
  <content type="html">
   Mini sat solver written in OCaml
  </content>
 </entry>
 <entry>
  <title>gcluzel: MiniSQL</title>
  <author>
   <name>gcluzel</name>
  </author>
  <link href="https://github.com/gcluzel/MiniSQL" />
  <id>urn:rprimus:github:gcluzel:MiniSQL</id>
  <published>2021-06-17T08:29:01Z</published>
  <updated>2021-06-17T08:29:01Z</updated>
  <content type="html">
   An OCaml implementation of a minimalistic SQL for CSV files
  </content>
 </entry>
 <entry>
  <title>tianrui98: Cleaning-Bot-Game</title>
  <author>
   <name>tianrui98</name>
  </author>
  <link href="https://github.com/tianrui98/Cleaning-Bot-Game" />
  <id>urn:rprimus:github:tianrui98:Cleaning-Bot-Game</id>
  <published>2021-06-17T06:45:07Z</published>
  <updated>2021-06-17T06:45:07Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>Preeti2105: assignment</title>
  <author>
   <name>Preeti2105</name>
  </author>
  <link href="https://github.com/Preeti2105/assignment" />
  <id>urn:rprimus:github:Preeti2105:assignment</id>
  <published>2021-06-17T03:43:57Z</published>
  <updated>2021-06-17T03:43:57Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>profixac: acer-10-digit-password-generator</title>
  <author>
   <name>profixac</name>
  </author>
  <link href="https://github.com/profixac/acer-10-digit-password-generator" />
  <id>urn:rprimus:github:profixac:acer-10-digit-password-generator</id>
  <published>2021-06-16T23:34:33Z</published>
  <updated>2021-06-16T23:34:33Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>d4hines: learning-ocaml</title>
  <author>
   <name>d4hines</name>
  </author>
  <link href="https://github.com/d4hines/learning-ocaml" />
  <id>urn:rprimus:github:d4hines:learning-ocaml</id>
  <published>2021-06-16T14:14:37Z</published>
  <updated>2021-06-16T14:14:37Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>takumi4162: tokyo_metro</title>
  <author>
   <name>takumi4162</name>
  </author>
  <link href="https://github.com/takumi4162/tokyo_metro" />
  <id>urn:rprimus:github:takumi4162:tokyo_metro</id>
  <published>2021-06-16T12:15:21Z</published>
  <updated>2021-06-16T12:15:21Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>steshaw: learning-ocaml</title>
  <author>
   <name>steshaw</name>
  </author>
  <link href="https://github.com/steshaw/learning-ocaml" />
  <id>urn:rprimus:github:steshaw:learning-ocaml</id>
  <published>2021-06-16T11:44:38Z</published>
  <updated>2021-06-16T11:44:38Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>cfcs: nvlist</title>
  <author>
   <name>cfcs</name>
  </author>
  <link href="https://github.com/cfcs/nvlist" />
  <id>urn:rprimus:github:cfcs:nvlist</id>
  <published>2021-06-15T20:26:43Z</published>
  <updated>2021-06-15T20:26:43Z</updated>
  <content type="html">
   Sun/Solaris serialization format library
  </content>
 </entry>
 <entry>
  <title>harmonySD: grammaire_et_analyse</title>
  <author>
   <name>harmonySD</name>
  </author>
  <link href="https://github.com/harmonySD/grammaire_et_analyse" />
  <id>urn:rprimus:github:harmonySD:grammaire_et_analyse</id>
  <published>2021-06-15T14:27:34Z</published>
  <updated>2021-06-15T14:27:34Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>harmonySD: pf5</title>
  <author>
   <name>harmonySD</name>
  </author>
  <link href="https://github.com/harmonySD/pf5" />
  <id>urn:rprimus:github:harmonySD:pf5</id>
  <published>2021-06-15T14:22:01Z</published>
  <updated>2021-06-15T14:22:01Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>chris-misa: pcap-ocaml</title>
  <author>
   <name>chris-misa</name>
  </author>
  <link href="https://github.com/chris-misa/pcap-ocaml" />
  <id>urn:rprimus:github:chris-misa:pcap-ocaml</id>
  <published>2021-06-15T06:44:09Z</published>
  <updated>2021-06-15T06:44:09Z</updated>
  <content type="html">
   Fast and simple pcap processing code.
  </content>
 </entry>
 <entry>
  <title>v0idpwn: memory-game</title>
  <author>
   <name>v0idpwn</name>
  </author>
  <link href="https://github.com/v0idpwn/memory-game" />
  <id>urn:rprimus:github:v0idpwn:memory-game</id>
  <published>2021-06-15T06:10:22Z</published>
  <updated>2021-06-15T06:10:22Z</updated>
  <content type="html">
   Memory game implemented with Bonsai
  </content>
 </entry>
 <entry>
  <title>jawline: Parrot2</title>
  <author>
   <name>jawline</name>
  </author>
  <link href="https://github.com/jawline/Parrot2" />
  <id>urn:rprimus:github:jawline:Parrot2</id>
  <published>2021-06-15T05:13:57Z</published>
  <updated>2021-06-15T05:13:57Z</updated>
  <content type="html">
   A static website generator written in Ocaml
  </content>
 </entry>
 <entry>
  <title>MitchellGray100: Uno</title>
  <author>
   <name>MitchellGray100</name>
  </author>
  <link href="https://github.com/MitchellGray100/Uno" />
  <id>urn:rprimus:github:MitchellGray100:Uno</id>
  <published>2021-06-15T04:28:59Z</published>
  <updated>2021-06-15T04:28:59Z</updated>
  <content type="html">
    In a group project, we implemented a terminal-based Uno game in OCaml. We made a solo player Uno-Solitaire game and a multiplayer original Uno game. Uno could be played against other players or against AIs on 3 different difficulties. The state of any game could be saved and loaded to and from a file through commands.
  </content>
 </entry>
</feed>
