<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<link rel="self" type="application/atom+xml" href="http://lence.net/github-ocaml.atom"/>
<id>urn:rprimus:github:newocamlrepos</id>
<updated>2021-09-01T04:10:49Z</updated>
<title type='text'>New GitHub Ocaml Repos</title>
 <entry>
  <title>susienite: monopoly-board</title>
  <author>
   <name>susienite</name>
  </author>
  <link href="https://github.com/susienite/monopoly-board" />
  <id>urn:rprimus:github:susienite:monopoly-board</id>
  <published>2021-09-01T04:10:49Z</published>
  <updated>2021-09-01T04:10:49Z</updated>
  <content type="html">
   A textile visual monopoly board built using OCaml. A team collaboration for CS 3110 Functioning Programming and Data Structure. 
  </content>
 </entry>
 <entry>
  <title>susienite: textile-adv-game</title>
  <author>
   <name>susienite</name>
  </author>
  <link href="https://github.com/susienite/textile-adv-game" />
  <id>urn:rprimus:github:susienite:textile-adv-game</id>
  <published>2021-09-01T03:59:59Z</published>
  <updated>2021-09-01T03:59:59Z</updated>
  <content type="html">
   A textile adventure game built using OCaml. A team collaboration in CS 3110 Functional Programming and Data Structures. Grade 99.7/100
  </content>
 </entry>
 <entry>
  <title>jfm325: Investing-Simulator</title>
  <author>
   <name>jfm325</name>
  </author>
  <link href="https://github.com/jfm325/Investing-Simulator" />
  <id>urn:rprimus:github:jfm325:Investing-Simulator</id>
  <published>2021-09-01T03:29:09Z</published>
  <updated>2021-09-01T03:29:09Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>Karfroth: ocaml-denostubs</title>
  <author>
   <name>Karfroth</name>
  </author>
  <link href="https://github.com/Karfroth/ocaml-denostubs" />
  <id>urn:rprimus:github:Karfroth:ocaml-denostubs</id>
  <published>2021-09-01T02:13:44Z</published>
  <updated>2021-09-01T02:13:44Z</updated>
  <content type="html">
   Deno-ffi stubs generator
  </content>
 </entry>
 <entry>
  <title>Mingxi-Huang: CS3110-Final-Project</title>
  <author>
   <name>Mingxi-Huang</name>
  </author>
  <link href="https://github.com/Mingxi-Huang/CS3110-Final-Project" />
  <id>urn:rprimus:github:Mingxi-Huang:CS3110-Final-Project</id>
  <published>2021-09-01T01:06:28Z</published>
  <updated>2021-09-01T01:06:28Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>benrose258: OCaml</title>
  <author>
   <name>benrose258</name>
  </author>
  <link href="https://github.com/benrose258/OCaml" />
  <id>urn:rprimus:github:benrose258:OCaml</id>
  <published>2021-08-31T23:20:49Z</published>
  <updated>2021-08-31T23:20:49Z</updated>
  <content type="html">
   My files from building programming languages using OCaml
  </content>
 </entry>
 <entry>
  <title>rodolfo-fiorini: OCaml-Lexical-Dynamic-Semantics-Implementation</title>
  <author>
   <name>rodolfo-fiorini</name>
  </author>
  <link href="https://github.com/rodolfo-fiorini/OCaml-Lexical-Dynamic-Semantics-Implementation" />
  <id>urn:rprimus:github:rodolfo-fiorini:OCaml-Lexical-Dynamic-Semantics-Implementation</id>
  <published>2021-08-31T22:46:06Z</published>
  <updated>2021-08-31T22:46:06Z</updated>
  <content type="html">
   Completed a program implementing a lexical and a dynamic semantic implementation in OCaml for a course learning some programming theory basics
  </content>
 </entry>
 <entry>
  <title>wiktorkuchta: representing-monads</title>
  <author>
   <name>wiktorkuchta</name>
  </author>
  <link href="https://github.com/wiktorkuchta/representing-monads" />
  <id>urn:rprimus:github:wiktorkuchta:representing-monads</id>
  <published>2021-08-31T19:31:47Z</published>
  <updated>2021-08-31T19:31:47Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>sarachour: arco-compiler</title>
  <author>
   <name>sarachour</name>
  </author>
  <link href="https://github.com/sarachour/arco-compiler" />
  <id>urn:rprimus:github:sarachour:arco-compiler</id>
  <published>2021-08-31T18:24:54Z</published>
  <updated>2021-08-31T18:24:54Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>callistonianembrace: tezos</title>
  <author>
   <name>callistonianembrace</name>
  </author>
  <link href="https://github.com/callistonianembrace/tezos" />
  <id>urn:rprimus:github:callistonianembrace:tezos</id>
  <published>2021-08-31T15:48:09Z</published>
  <updated>2021-08-31T15:48:09Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>Thibaut-Gudin: ocaml-weakmap</title>
  <author>
   <name>Thibaut-Gudin</name>
  </author>
  <link href="https://github.com/Thibaut-Gudin/ocaml-weakmap" />
  <id>urn:rprimus:github:Thibaut-Gudin:ocaml-weakmap</id>
  <published>2021-08-31T15:07:16Z</published>
  <updated>2021-08-31T15:07:16Z</updated>
  <content type="html">
   Binding to the `WeakMap` API using gen_js_api
  </content>
 </entry>
 <entry>
  <title>Gopiandcode: ego</title>
  <author>
   <name>Gopiandcode</name>
  </author>
  <link href="https://github.com/Gopiandcode/ego" />
  <id>urn:rprimus:github:Gopiandcode:ego</id>
  <published>2021-08-31T03:42:22Z</published>
  <updated>2021-08-31T03:42:22Z</updated>
  <content type="html">
   EGraphs in OCaml
  </content>
 </entry>
 <entry>
  <title>ascandone: ocaml-lisp-interpreter</title>
  <author>
   <name>ascandone</name>
  </author>
  <link href="https://github.com/ascandone/ocaml-lisp-interpreter" />
  <id>urn:rprimus:github:ascandone:ocaml-lisp-interpreter</id>
  <published>2021-08-31T01:40:27Z</published>
  <updated>2021-08-31T01:40:27Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>thierry-martinez: pyast</title>
  <author>
   <name>thierry-martinez</name>
  </author>
  <link href="https://github.com/thierry-martinez/pyast" />
  <id>urn:rprimus:github:thierry-martinez:pyast</id>
  <published>2021-08-30T21:45:47Z</published>
  <updated>2021-08-30T21:45:47Z</updated>
  <content type="html">
   Python versioned abstract syntax trees and interface to the Python parser
  </content>
 </entry>
 <entry>
  <title>idkjs: bs-biniou</title>
  <author>
   <name>idkjs</name>
  </author>
  <link href="https://github.com/idkjs/bs-biniou" />
  <id>urn:rprimus:github:idkjs:bs-biniou</id>
  <published>2021-08-30T19:00:04Z</published>
  <updated>2021-08-30T19:00:04Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>eleanorgoh: ocaml-monopoly</title>
  <author>
   <name>eleanorgoh</name>
  </author>
  <link href="https://github.com/eleanorgoh/ocaml-monopoly" />
  <id>urn:rprimus:github:eleanorgoh:ocaml-monopoly</id>
  <published>2021-08-30T18:21:52Z</published>
  <updated>2021-08-30T18:21:52Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>besport: ocaml-google-analytics-tags</title>
  <author>
   <name>besport</name>
  </author>
  <link href="https://github.com/besport/ocaml-google-analytics-tags" />
  <id>urn:rprimus:github:besport:ocaml-google-analytics-tags</id>
  <published>2021-08-30T14:35:36Z</published>
  <updated>2021-08-30T14:35:36Z</updated>
  <content type="html">
   Binding to the `analytics.js` library (also know as &#039;Google Analytics tags&#039;) using gen_js_api
  </content>
 </entry>
</feed>
