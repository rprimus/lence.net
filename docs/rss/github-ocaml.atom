<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<link rel="self" type="application/atom+xml" href="http://lence.net/github-ocaml.atom"/>
<id>urn:rprimus:github:newocamlrepos</id>
<updated>2023-05-14T05:47:37Z</updated>
<title type='text'>New GitHub Ocaml Repos</title>
 <entry>
  <title>mooreryan: pyml_bindgen_stickytape_example</title>
  <author>
   <name>mooreryan</name>
  </author>
  <link href="https://github.com/mooreryan/pyml_bindgen_stickytape_example" />
  <id>urn:rprimus:github:mooreryan:pyml_bindgen_stickytape_example</id>
  <published>2023-05-14T05:47:37Z</published>
  <updated>2023-05-14T05:47:37Z</updated>
  <content type="html">
   Stickytape + pyml_bindgen
  </content>
 </entry>
 <entry>
  <title>gaganchandan: olox</title>
  <author>
   <name>gaganchandan</name>
  </author>
  <link href="https://github.com/gaganchandan/olox" />
  <id>urn:rprimus:github:gaganchandan:olox</id>
  <published>2023-05-14T04:36:13Z</published>
  <updated>2023-05-14T04:36:13Z</updated>
  <content type="html">
   An interpreter for the Lox language in OCaml
  </content>
 </entry>
 <entry>
  <title>thuypham03: flow-free</title>
  <author>
   <name>thuypham03</name>
  </author>
  <link href="https://github.com/thuypham03/flow-free" />
  <id>urn:rprimus:github:thuypham03:flow-free</id>
  <published>2023-05-14T00:47:48Z</published>
  <updated>2023-05-14T00:47:48Z</updated>
  <content type="html">
   Cloning Flow-free (pipe connecting game where the goal is to connect together dots with same color). Numberlink is used to generate the board with solution (NP hard problem)
  </content>
 </entry>
 <entry>
  <title>noghartt: sake</title>
  <author>
   <name>noghartt</name>
  </author>
  <link href="https://github.com/noghartt/sake" />
  <id>urn:rprimus:github:noghartt:sake</id>
  <published>2023-05-13T20:18:54Z</published>
  <updated>2023-05-13T20:18:54Z</updated>
  <content type="html">
   An attempt of writing a simple Lisp interpreter with OCaml
  </content>
 </entry>
 <entry>
  <title>sakasakasa: RISC_V-Compiler</title>
  <author>
   <name>sakasakasa</name>
  </author>
  <link href="https://github.com/sakasakasa/RISC_V-Compiler" />
  <id>urn:rprimus:github:sakasakasa:RISC_V-Compiler</id>
  <published>2023-05-13T14:23:52Z</published>
  <updated>2023-05-13T14:23:52Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>Mylloon: pusk</title>
  <author>
   <name>Mylloon</name>
  </author>
  <link href="https://github.com/Mylloon/pusk" />
  <id>urn:rprimus:github:Mylloon:pusk</id>
  <published>2023-05-13T14:08:15Z</published>
  <updated>2023-05-13T14:08:15Z</updated>
  <content type="html">
   Mirror
  </content>
 </entry>
 <entry>
  <title>JumpMasterJJ: interp_ocaml</title>
  <author>
   <name>JumpMasterJJ</name>
  </author>
  <link href="https://github.com/JumpMasterJJ/interp_ocaml" />
  <id>urn:rprimus:github:JumpMasterJJ:interp_ocaml</id>
  <published>2023-05-13T13:38:26Z</published>
  <updated>2023-05-13T13:38:26Z</updated>
  <content type="html">
   The interpreter with OCaml
  </content>
 </entry>
 <entry>
  <title>cfzimmerman: miniml</title>
  <author>
   <name>cfzimmerman</name>
  </author>
  <link href="https://github.com/cfzimmerman/miniml" />
  <id>urn:rprimus:github:cfzimmerman:miniml</id>
  <published>2023-05-13T09:53:04Z</published>
  <updated>2023-05-13T09:53:04Z</updated>
  <content type="html">
   A small ML-style interpreted language and REPL constructed and evaluated in OCaml.
  </content>
 </entry>
 <entry>
  <title>MingLLuo: RSA-by-OCaml</title>
  <author>
   <name>MingLLuo</name>
  </author>
  <link href="https://github.com/MingLLuo/RSA-by-OCaml" />
  <id>urn:rprimus:github:MingLLuo:RSA-by-OCaml</id>
  <published>2023-05-13T09:04:14Z</published>
  <updated>2023-05-13T09:04:14Z</updated>
  <content type="html">
   A simple implementation of RSA by OCaml
  </content>
 </entry>
 <entry>
  <title>edlwang: FPSE-Fa22</title>
  <author>
   <name>edlwang</name>
  </author>
  <link href="https://github.com/edlwang/FPSE-Fa22" />
  <id>urn:rprimus:github:edlwang:FPSE-Fa22</id>
  <published>2023-05-13T05:03:25Z</published>
  <updated>2023-05-13T05:03:25Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>ibx34: shinehorn</title>
  <author>
   <name>ibx34</name>
  </author>
  <link href="https://github.com/ibx34/shinehorn" />
  <id>urn:rprimus:github:ibx34:shinehorn</id>
  <published>2023-05-13T03:11:26Z</published>
  <updated>2023-05-13T03:11:26Z</updated>
  <content type="html">
   A strongly typed lisp language intended for use in configuration
  </content>
 </entry>
 <entry>
  <title>malloc-nbytes: ocaml-xtralib</title>
  <author>
   <name>malloc-nbytes</name>
  </author>
  <link href="https://github.com/malloc-nbytes/ocaml-xtralib" />
  <id>urn:rprimus:github:malloc-nbytes:ocaml-xtralib</id>
  <published>2023-05-13T01:21:24Z</published>
  <updated>2023-05-13T01:21:24Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>patricoferris: eiojsoo</title>
  <author>
   <name>patricoferris</name>
  </author>
  <link href="https://github.com/patricoferris/eiojsoo" />
  <id>urn:rprimus:github:patricoferris:eiojsoo</id>
  <published>2023-05-12T22:57:42Z</published>
  <updated>2023-05-12T22:57:42Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>gabrielmariebrisson: projet_compilation</title>
  <author>
   <name>gabrielmariebrisson</name>
  </author>
  <link href="https://github.com/gabrielmariebrisson/projet_compilation" />
  <id>urn:rprimus:github:gabrielmariebrisson:projet_compilation</id>
  <published>2023-05-12T17:05:07Z</published>
  <updated>2023-05-12T17:05:07Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>mishina-haruto: MSNL-in-ocaml</title>
  <author>
   <name>mishina-haruto</name>
  </author>
  <link href="https://github.com/mishina-haruto/MSNL-in-ocaml" />
  <id>urn:rprimus:github:mishina-haruto:MSNL-in-ocaml</id>
  <published>2023-05-12T07:25:41Z</published>
  <updated>2023-05-12T07:25:41Z</updated>
  <content type="html">
   
  </content>
 </entry>
</feed>
