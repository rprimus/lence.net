<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<link rel="self" type="application/atom+xml" href="http://lence.net/github-ocaml.atom"/>
<id>urn:rprimus:github:newocamlrepos</id>
<updated>2023-01-13T10:14:12Z</updated>
<title type='text'>New GitHub Ocaml Repos</title>
 <entry>
  <title>DiaZixX: TP_Info</title>
  <author>
   <name>DiaZixX</name>
  </author>
  <link href="https://github.com/DiaZixX/TP_Info" />
  <id>urn:rprimus:github:DiaZixX:TP_Info</id>
  <published>2023-01-13T10:14:12Z</published>
  <updated>2023-01-13T10:14:12Z</updated>
  <content type="html">
   Code des TPs d&#039;info
  </content>
 </entry>
 <entry>
  <title>marekpinto: OCamlInterpreter</title>
  <author>
   <name>marekpinto</name>
  </author>
  <link href="https://github.com/marekpinto/OCamlInterpreter" />
  <id>urn:rprimus:github:marekpinto:OCamlInterpreter</id>
  <published>2023-01-13T08:15:51Z</published>
  <updated>2023-01-13T08:15:51Z</updated>
  <content type="html">
   Interpreter for a simple stack-based programming language written from scratch in OCaml
  </content>
 </entry>
 <entry>
  <title>noisypillow: tp8</title>
  <author>
   <name>noisypillow</name>
  </author>
  <link href="https://github.com/noisypillow/tp8" />
  <id>urn:rprimus:github:noisypillow:tp8</id>
  <published>2023-01-13T08:09:45Z</published>
  <updated>2023-01-13T08:09:45Z</updated>
  <content type="html">
   TP8
  </content>
 </entry>
 <entry>
  <title>ns597: terminal-chess</title>
  <author>
   <name>ns597</name>
  </author>
  <link href="https://github.com/ns597/terminal-chess" />
  <id>urn:rprimus:github:ns597:terminal-chess</id>
  <published>2023-01-12T23:54:36Z</published>
  <updated>2023-01-12T23:54:36Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>TabetSalwa: 2.40-BYOPPL</title>
  <author>
   <name>TabetSalwa</name>
  </author>
  <link href="https://github.com/TabetSalwa/2.40-BYOPPL" />
  <id>urn:rprimus:github:TabetSalwa:2.40-BYOPPL</id>
  <published>2023-01-12T19:03:28Z</published>
  <updated>2023-01-12T19:03:28Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>Darryll1: Solveur-Bol-en</title>
  <author>
   <name>Darryll1</name>
  </author>
  <link href="https://github.com/Darryll1/Solveur-Bol-en" />
  <id>urn:rprimus:github:Darryll1:Solveur-Bol-en</id>
  <published>2023-01-12T17:59:17Z</published>
  <updated>2023-01-12T17:59:17Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>polytypic: domains</title>
  <author>
   <name>polytypic</name>
  </author>
  <link href="https://github.com/polytypic/domains" />
  <id>urn:rprimus:github:polytypic:domains</id>
  <published>2023-01-12T15:42:55Z</published>
  <updated>2023-01-12T15:42:55Z</updated>
  <content type="html">
   Co-operative scheduling over Domains for multicore OCaml
  </content>
 </entry>
 <entry>
  <title>Porggg: TP-MPI</title>
  <author>
   <name>Porggg</name>
  </author>
  <link href="https://github.com/Porggg/TP-MPI" />
  <id>urn:rprimus:github:Porggg:TP-MPI</id>
  <published>2023-01-12T14:28:54Z</published>
  <updated>2023-01-12T14:28:54Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>acorrenson: Maybe</title>
  <author>
   <name>acorrenson</name>
  </author>
  <link href="https://github.com/acorrenson/Maybe" />
  <id>urn:rprimus:github:acorrenson:Maybe</id>
  <published>2023-01-12T14:01:33Z</published>
  <updated>2023-01-12T14:01:33Z</updated>
  <content type="html">
   A tiny probabilist functional language
  </content>
 </entry>
 <entry>
  <title>MrArobazz: 234_Trees_And_RB_Trees</title>
  <author>
   <name>MrArobazz</name>
  </author>
  <link href="https://github.com/MrArobazz/234_Trees_And_RB_Trees" />
  <id>urn:rprimus:github:MrArobazz:234_Trees_And_RB_Trees</id>
  <published>2023-01-12T13:02:34Z</published>
  <updated>2023-01-12T13:02:34Z</updated>
  <content type="html">
   Implementation of 2-3-4 trees and red-black trees in OCamL using sum types made in pairs in the teaching unit of AP3 at the University of Poitiers.
  </content>
 </entry>
 <entry>
  <title>aleksrutins: wanbs</title>
  <author>
   <name>aleksrutins</name>
  </author>
  <link href="https://github.com/aleksrutins/wanbs" />
  <id>urn:rprimus:github:aleksrutins:wanbs</id>
  <published>2023-01-12T12:04:42Z</published>
  <updated>2023-01-12T12:04:42Z</updated>
  <content type="html">
   The WebAssembly Native Build System
  </content>
 </entry>
 <entry>
  <title>saipmukku: OCaml-Interpreter</title>
  <author>
   <name>saipmukku</name>
  </author>
  <link href="https://github.com/saipmukku/OCaml-Interpreter" />
  <id>urn:rprimus:github:saipmukku:OCaml-Interpreter</id>
  <published>2023-01-12T05:25:30Z</published>
  <updated>2023-01-12T05:25:30Z</updated>
  <content type="html">
   This project acts as an interpreter that interprets expressions in OCaml.
  </content>
 </entry>
 <entry>
  <title>saipmukku: MicroCaml-Lexer-and-Parser</title>
  <author>
   <name>saipmukku</name>
  </author>
  <link href="https://github.com/saipmukku/MicroCaml-Lexer-and-Parser" />
  <id>urn:rprimus:github:saipmukku:MicroCaml-Lexer-and-Parser</id>
  <published>2023-01-12T05:21:27Z</published>
  <updated>2023-01-12T05:21:27Z</updated>
  <content type="html">
   This project emulates an OCaml lexer and parser using OCaml data types. A lexer creates tokens based on input, and a parser takes these tokens and contextualizes them into whatever code is trying to be written by a user.
  </content>
 </entry>
 <entry>
  <title>saipmukku: Regular-Expression-Generator</title>
  <author>
   <name>saipmukku</name>
  </author>
  <link href="https://github.com/saipmukku/Regular-Expression-Generator" />
  <id>urn:rprimus:github:saipmukku:Regular-Expression-Generator</id>
  <published>2023-01-12T05:16:54Z</published>
  <updated>2023-01-12T05:16:54Z</updated>
  <content type="html">
   This project uses non-deterministic finite automata and relevant subset construction to create a regular expression generator in OCaml.
  </content>
 </entry>
 <entry>
  <title>saipmukku: Higher-Order-Functions-and-Data-in-OCaml</title>
  <author>
   <name>saipmukku</name>
  </author>
  <link href="https://github.com/saipmukku/Higher-Order-Functions-and-Data-in-OCaml" />
  <id>urn:rprimus:github:saipmukku:Higher-Order-Functions-and-Data-in-OCaml</id>
  <published>2023-01-12T05:07:10Z</published>
  <updated>2023-01-12T05:07:10Z</updated>
  <content type="html">
   This project uses higher order functions, a three-way search tree, a three-way search tree-based map, and functions to look up variables in an abstract data table.
  </content>
 </entry>
 <entry>
  <title>saipmukku: OCaml-Basics</title>
  <author>
   <name>saipmukku</name>
  </author>
  <link href="https://github.com/saipmukku/OCaml-Basics" />
  <id>urn:rprimus:github:saipmukku:OCaml-Basics</id>
  <published>2023-01-12T04:59:11Z</published>
  <updated>2023-01-12T04:59:11Z</updated>
  <content type="html">
   This project looks at the basics of OCaml, such as basic function declarations, recursion, and the integrated list feature.
  </content>
 </entry>
 <entry>
  <title>timmyjose-study: lang-impl-ocaml</title>
  <author>
   <name>timmyjose-study</name>
  </author>
  <link href="https://github.com/timmyjose-study/lang-impl-ocaml" />
  <id>urn:rprimus:github:timmyjose-study:lang-impl-ocaml</id>
  <published>2023-01-12T03:42:53Z</published>
  <updated>2023-01-12T03:42:53Z</updated>
  <content type="html">
   Learning programming language implementation using OCaml.
  </content>
 </entry>
 <entry>
  <title>gridbugs: why3</title>
  <author>
   <name>gridbugs</name>
  </author>
  <link href="https://github.com/gridbugs/why3" />
  <id>urn:rprimus:github:gridbugs:why3</id>
  <published>2023-01-12T02:55:43Z</published>
  <updated>2023-01-12T02:55:43Z</updated>
  <content type="html">
   copy of https://gitlab.inria.fr/why3
  </content>
 </entry>
 <entry>
  <title>formal-land: coq-of-LLBC</title>
  <author>
   <name>formal-land</name>
  </author>
  <link href="https://github.com/formal-land/coq-of-LLBC" />
  <id>urn:rprimus:github:formal-land:coq-of-LLBC</id>
  <published>2023-01-11T23:21:13Z</published>
  <updated>2023-01-11T23:21:13Z</updated>
  <content type="html">
   Translate Rust ð¦ LLBC code (generated by https://github.com/AeneasVerif/charon) to Coq ð
  </content>
 </entry>
 <entry>
  <title>AnasSeghrouchni: TL</title>
  <author>
   <name>AnasSeghrouchni</name>
  </author>
  <link href="https://github.com/AnasSeghrouchni/TL" />
  <id>urn:rprimus:github:AnasSeghrouchni:TL</id>
  <published>2023-01-11T23:13:09Z</published>
  <updated>2023-01-11T23:13:09Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>ArulselvanMadhavan: composter</title>
  <author>
   <name>ArulselvanMadhavan</name>
  </author>
  <link href="https://github.com/ArulselvanMadhavan/composter" />
  <id>urn:rprimus:github:ArulselvanMadhavan:composter</id>
  <published>2023-01-11T21:55:26Z</published>
  <updated>2023-01-11T21:55:26Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>Gustavo-Piccoli: TF_Semantica</title>
  <author>
   <name>Gustavo-Piccoli</name>
  </author>
  <link href="https://github.com/Gustavo-Piccoli/TF_Semantica" />
  <id>urn:rprimus:github:Gustavo-Piccoli:TF_Semantica</id>
  <published>2023-01-11T19:13:56Z</published>
  <updated>2023-01-11T19:13:56Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>jwyjohn: bfinml</title>
  <author>
   <name>jwyjohn</name>
  </author>
  <link href="https://github.com/jwyjohn/bfinml" />
  <id>urn:rprimus:github:jwyjohn:bfinml</id>
  <published>2023-01-11T16:48:33Z</published>
  <updated>2023-01-11T16:48:33Z</updated>
  <content type="html">
   A Brainf*ck interpreter in OCaml. For practice purpose only.
  </content>
 </entry>
 <entry>
  <title>RemyCiterin: Spacer</title>
  <author>
   <name>RemyCiterin</name>
  </author>
  <link href="https://github.com/RemyCiterin/Spacer" />
  <id>urn:rprimus:github:RemyCiterin:Spacer</id>
  <published>2023-01-11T11:38:51Z</published>
  <updated>2023-01-11T11:38:51Z</updated>
  <content type="html">
   reimplementation of a part of the Spacer model checker using Z3 and OCaml
  </content>
 </entry>
 <entry>
  <title>Gopiandcode: petrol</title>
  <author>
   <name>Gopiandcode</name>
  </author>
  <link href="https://github.com/Gopiandcode/petrol" />
  <id>urn:rprimus:github:Gopiandcode:petrol</id>
  <published>2023-01-11T10:52:10Z</published>
  <updated>2023-01-11T10:52:10Z</updated>
  <content type="html">
   Petrol&#039;s an OCaml SQL API made to go FAST.
  </content>
 </entry>
 <entry>
  <title>mronconis: amqstreams-perf-tests</title>
  <author>
   <name>mronconis</name>
  </author>
  <link href="https://github.com/mronconis/amqstreams-perf-tests" />
  <id>urn:rprimus:github:mronconis:amqstreams-perf-tests</id>
  <published>2023-01-11T09:06:09Z</published>
  <updated>2023-01-11T09:06:09Z</updated>
  <content type="html">
   Red Hat AMQ Streams perf tests
  </content>
 </entry>
 <entry>
  <title>andrewmackin: contact-bridge</title>
  <author>
   <name>andrewmackin</name>
  </author>
  <link href="https://github.com/andrewmackin/contact-bridge" />
  <id>urn:rprimus:github:andrewmackin:contact-bridge</id>
  <published>2023-01-11T04:30:17Z</published>
  <updated>2023-01-11T04:30:17Z</updated>
  <content type="html">
   
  </content>
 </entry>
</feed>
