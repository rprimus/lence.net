<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<link rel="self" type="application/atom+xml" href="http://lence.net/github-ocaml.atom"/>
<id>urn:rprimus:github:newocamlrepos</id>
<updated>2022-07-16T04:18:00Z</updated>
<title type='text'>New GitHub Ocaml Repos</title>
 <entry>
  <title>ecooler: CS-320-OCaml-Lab</title>
  <author>
   <name>ecooler</name>
  </author>
  <link href="https://github.com/ecooler/CS-320-OCaml-Lab" />
  <id>urn:rprimus:github:ecooler:CS-320-OCaml-Lab</id>
  <published>2022-07-16T04:18:00Z</published>
  <updated>2022-07-16T04:18:00Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>Qi-Zhan: Interpreter-TLC</title>
  <author>
   <name>Qi-Zhan</name>
  </author>
  <link href="https://github.com/Qi-Zhan/Interpreter-TLC" />
  <id>urn:rprimus:github:Qi-Zhan:Interpreter-TLC</id>
  <published>2022-07-16T03:28:15Z</published>
  <updated>2022-07-16T03:28:15Z</updated>
  <content type="html">
    An interpreter for the typed lambda calculus including every feature discussed in class so far, such as algebraic data types, recursive types, polymorphic types, and existential types.
  </content>
 </entry>
 <entry>
  <title>zhezhouzz: ocaml_parser</title>
  <author>
   <name>zhezhouzz</name>
  </author>
  <link href="https://github.com/zhezhouzz/ocaml_parser" />
  <id>urn:rprimus:github:zhezhouzz:ocaml_parser</id>
  <published>2022-07-15T17:27:18Z</published>
  <updated>2022-07-15T17:27:18Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>zhezhouzz: underapproximation_type</title>
  <author>
   <name>zhezhouzz</name>
  </author>
  <link href="https://github.com/zhezhouzz/underapproximation_type" />
  <id>urn:rprimus:github:zhezhouzz:underapproximation_type</id>
  <published>2022-07-15T17:22:17Z</published>
  <updated>2022-07-15T17:22:17Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>zhezhouzz: zzdatatype</title>
  <author>
   <name>zhezhouzz</name>
  </author>
  <link href="https://github.com/zhezhouzz/zzdatatype" />
  <id>urn:rprimus:github:zhezhouzz:zzdatatype</id>
  <published>2022-07-15T16:54:23Z</published>
  <updated>2022-07-15T16:54:23Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>DalYoon: ocaml-file-watcher</title>
  <author>
   <name>DalYoon</name>
  </author>
  <link href="https://github.com/DalYoon/ocaml-file-watcher" />
  <id>urn:rprimus:github:DalYoon:ocaml-file-watcher</id>
  <published>2022-07-15T09:10:17Z</published>
  <updated>2022-07-15T09:10:17Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>dhilst: unify2-</title>
  <author>
   <name>dhilst</name>
  </author>
  <link href="https://github.com/dhilst/unify2-" />
  <id>urn:rprimus:github:dhilst:unify2-</id>
  <published>2022-07-15T00:10:48Z</published>
  <updated>2022-07-15T00:10:48Z</updated>
  <content type="html">
   first order unification in ocaml (study)
  </content>
 </entry>
 <entry>
  <title>jasper-rutherford: Tautology-Checker-csci-2041</title>
  <author>
   <name>jasper-rutherford</name>
  </author>
  <link href="https://github.com/jasper-rutherford/Tautology-Checker-csci-2041" />
  <id>urn:rprimus:github:jasper-rutherford:Tautology-Checker-csci-2041</id>
  <published>2022-07-14T20:06:06Z</published>
  <updated>2022-07-14T20:06:06Z</updated>
  <content type="html">
   Checks if a provided expression is a Tautology. Written in OCaml
  </content>
 </entry>
 <entry>
  <title>DaiF1: Oditor</title>
  <author>
   <name>DaiF1</name>
  </author>
  <link href="https://github.com/DaiF1/Oditor" />
  <id>urn:rprimus:github:DaiF1:Oditor</id>
  <published>2022-07-14T19:04:31Z</published>
  <updated>2022-07-14T19:04:31Z</updated>
  <content type="html">
   Oditor is a simple text editor written in OCaml
  </content>
 </entry>
 <entry>
  <title>jacopol: imitator</title>
  <author>
   <name>jacopol</name>
  </author>
  <link href="https://github.com/jacopol/imitator" />
  <id>urn:rprimus:github:jacopol:imitator</id>
  <published>2022-07-14T11:58:40Z</published>
  <updated>2022-07-14T11:58:40Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>tom4649: func_jikken</title>
  <author>
   <name>tom4649</name>
  </author>
  <link href="https://github.com/tom4649/func_jikken" />
  <id>urn:rprimus:github:tom4649:func_jikken</id>
  <published>2022-07-14T10:02:01Z</published>
  <updated>2022-07-14T10:02:01Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>dsiu: rescript-ocamlgraph</title>
  <author>
   <name>dsiu</name>
  </author>
  <link href="https://github.com/dsiu/rescript-ocamlgraph" />
  <id>urn:rprimus:github:dsiu:rescript-ocamlgraph</id>
  <published>2022-07-14T07:58:53Z</published>
  <updated>2022-07-14T07:58:53Z</updated>
  <content type="html">
   port of ocamlgraph to rescript
  </content>
 </entry>
 <entry>
  <title>asujan205: Learn_Ocaml</title>
  <author>
   <name>asujan205</name>
  </author>
  <link href="https://github.com/asujan205/Learn_Ocaml" />
  <id>urn:rprimus:github:asujan205:Learn_Ocaml</id>
  <published>2022-07-14T05:09:42Z</published>
  <updated>2022-07-14T05:09:42Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>jamestjw: tiger</title>
  <author>
   <name>jamestjw</name>
  </author>
  <link href="https://github.com/jamestjw/tiger" />
  <id>urn:rprimus:github:jamestjw:tiger</id>
  <published>2022-07-14T04:44:46Z</published>
  <updated>2022-07-14T04:44:46Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>hyosari-kim: ocaml-cli</title>
  <author>
   <name>hyosari-kim</name>
  </author>
  <link href="https://github.com/hyosari-kim/ocaml-cli" />
  <id>urn:rprimus:github:hyosari-kim:ocaml-cli</id>
  <published>2022-07-14T01:22:18Z</published>
  <updated>2022-07-14T01:22:18Z</updated>
  <content type="html">
   
  </content>
 </entry>
</feed>
