<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<link rel="self" type="application/atom+xml" href="http://lence.net/github-ocaml.atom"/>
<id>urn:rprimus:github:newocamlrepos</id>
<updated>2024-02-24T10:33:48Z</updated>
<title type='text'>New GitHub Ocaml Repos</title>
 <entry>
  <title>Dylan-sci: ProgLang-Assignments</title>
  <author>
   <name>Dylan-sci</name>
  </author>
  <link href="https://github.com/Dylan-sci/ProgLang-Assignments" />
  <id>urn:rprimus:github:Dylan-sci:ProgLang-Assignments</id>
  <published>2024-02-24T10:33:48Z</published>
  <updated>2024-02-24T10:33:48Z</updated>
  <content type="html">
   Assignments from a Programming Languages course
  </content>
 </entry>
 <entry>
  <title>JosephPrichard: Lisp.ml</title>
  <author>
   <name>JosephPrichard</name>
  </author>
  <link href="https://github.com/JosephPrichard/Lisp.ml" />
  <id>urn:rprimus:github:JosephPrichard:Lisp.ml</id>
  <published>2024-02-24T08:51:51Z</published>
  <updated>2024-02-24T08:51:51Z</updated>
  <content type="html">
   Lisp interpreter written in OCaml
  </content>
 </entry>
 <entry>
  <title>kenranunderscore: ocaml_lua_segfault_reproducer</title>
  <author>
   <name>kenranunderscore</name>
  </author>
  <link href="https://github.com/kenranunderscore/ocaml_lua_segfault_reproducer" />
  <id>urn:rprimus:github:kenranunderscore:ocaml_lua_segfault_reproducer</id>
  <published>2024-02-24T08:03:04Z</published>
  <updated>2024-02-24T08:03:04Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>NotNotLuka: turing-machine</title>
  <author>
   <name>NotNotLuka</name>
  </author>
  <link href="https://github.com/NotNotLuka/turing-machine" />
  <id>urn:rprimus:github:NotNotLuka:turing-machine</id>
  <published>2024-02-23T22:54:39Z</published>
  <updated>2024-02-23T22:54:39Z</updated>
  <content type="html">
   Turing machine made in ocaml for subject &quot;Programming 1&quot;
  </content>
 </entry>
 <entry>
  <title>h2ocine: L3-Invariant-System-SMT-LIB</title>
  <author>
   <name>h2ocine</name>
  </author>
  <link href="https://github.com/h2ocine/L3-Invariant-System-SMT-LIB" />
  <id>urn:rprimus:github:h2ocine:L3-Invariant-System-SMT-LIB</id>
  <published>2024-02-23T20:30:16Z</published>
  <updated>2024-02-23T20:30:16Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>Camak2441: asterisks</title>
  <author>
   <name>Camak2441</name>
  </author>
  <link href="https://github.com/Camak2441/asterisks" />
  <id>urn:rprimus:github:Camak2441:asterisks</id>
  <published>2024-02-23T19:26:51Z</published>
  <updated>2024-02-23T19:26:51Z</updated>
  <content type="html">
   Linking OCaml with C
  </content>
 </entry>
 <entry>
  <title>jhan1: Compiler-Construction</title>
  <author>
   <name>jhan1</name>
  </author>
  <link href="https://github.com/jhan1/Compiler-Construction" />
  <id>urn:rprimus:github:jhan1:Compiler-Construction</id>
  <published>2024-02-23T18:56:12Z</published>
  <updated>2024-02-23T18:56:12Z</updated>
  <content type="html">
   Compiler construction using OCaml. Implemented: Higher-Order Functions/Bindings/Scope/Arithmetic Ops./Alloc./Value Tagging/C Calling Conventions/Runtime+Compile-time Errors/Heap+Register Alloc./System Calls/First-Class Func./Closures/Marking/Compacting/Manual Memory Mgmt./Garbage Collection/Tail Call Opt./LL+LR Parsing/Left Recursion/Type Systems
  </content>
 </entry>
 <entry>
  <title>MatthewAraujo: unusualLanguages</title>
  <author>
   <name>MatthewAraujo</name>
  </author>
  <link href="https://github.com/MatthewAraujo/unusualLanguages" />
  <id>urn:rprimus:github:MatthewAraujo:unusualLanguages</id>
  <published>2024-02-23T16:08:13Z</published>
  <updated>2024-02-23T16:08:13Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>coolka1234: Ocaml-Excercise</title>
  <author>
   <name>coolka1234</name>
  </author>
  <link href="https://github.com/coolka1234/Ocaml-Excercise" />
  <id>urn:rprimus:github:coolka1234:Ocaml-Excercise</id>
  <published>2024-02-23T15:48:16Z</published>
  <updated>2024-02-23T15:48:16Z</updated>
  <content type="html">
   A set of diffrent Ocaml exercisen, written using functional paradigm.
  </content>
 </entry>
 <entry>
  <title>sagnikc395: functional-programming</title>
  <author>
   <name>sagnikc395</name>
  </author>
  <link href="https://github.com/sagnikc395/functional-programming" />
  <id>urn:rprimus:github:sagnikc395:functional-programming</id>
  <published>2024-02-23T14:26:00Z</published>
  <updated>2024-02-23T14:26:00Z</updated>
  <content type="html">
   Exploring the Depths of Functional Programming in OCaml.
  </content>
 </entry>
 <entry>
  <title>Arevalinchy: Lexer</title>
  <author>
   <name>Arevalinchy</name>
  </author>
  <link href="https://github.com/Arevalinchy/Lexer" />
  <id>urn:rprimus:github:Arevalinchy:Lexer</id>
  <published>2024-02-23T11:00:41Z</published>
  <updated>2024-02-23T11:00:41Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>mynameismon: compiler-shenanigans</title>
  <author>
   <name>mynameismon</name>
  </author>
  <link href="https://github.com/mynameismon/compiler-shenanigans" />
  <id>urn:rprimus:github:mynameismon:compiler-shenanigans</id>
  <published>2024-02-23T09:50:35Z</published>
  <updated>2024-02-23T09:50:35Z</updated>
  <content type="html">
   an (honest) attempt at making a compiler. lets see how far we get
  </content>
 </entry>
 <entry>
  <title>v3nkat3shk: hello_ocaml</title>
  <author>
   <name>v3nkat3shk</name>
  </author>
  <link href="https://github.com/v3nkat3shk/hello_ocaml" />
  <id>urn:rprimus:github:v3nkat3shk:hello_ocaml</id>
  <published>2024-02-23T05:46:15Z</published>
  <updated>2024-02-23T05:46:15Z</updated>
  <content type="html">
   Tryping out ocaml
  </content>
 </entry>
 <entry>
  <title>syedtaz: euler</title>
  <author>
   <name>syedtaz</name>
  </author>
  <link href="https://github.com/syedtaz/euler" />
  <id>urn:rprimus:github:syedtaz:euler</id>
  <published>2024-02-23T03:44:28Z</published>
  <updated>2024-02-23T03:44:28Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>rctcwyvrn: compwiwer</title>
  <author>
   <name>rctcwyvrn</name>
  </author>
  <link href="https://github.com/rctcwyvrn/compwiwer" />
  <id>urn:rprimus:github:rctcwyvrn:compwiwer</id>
  <published>2024-02-23T02:19:23Z</published>
  <updated>2024-02-23T02:19:23Z</updated>
  <content type="html">
   A dumb little compiler project
  </content>
 </entry>
 <entry>
  <title>akli-melissa: Solitaire-Solution-Search</title>
  <author>
   <name>akli-melissa</name>
  </author>
  <link href="https://github.com/akli-melissa/Solitaire-Solution-Search" />
  <id>urn:rprimus:github:akli-melissa:Solitaire-Solution-Search</id>
  <published>2024-02-23T01:16:45Z</published>
  <updated>2024-02-23T01:16:45Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>MichelBartels: scratch_compiler</title>
  <author>
   <name>MichelBartels</name>
  </author>
  <link href="https://github.com/MichelBartels/scratch_compiler" />
  <id>urn:rprimus:github:MichelBartels:scratch_compiler</id>
  <published>2024-02-22T23:00:51Z</published>
  <updated>2024-02-22T23:00:51Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>halima-ks: projet_compilateur</title>
  <author>
   <name>halima-ks</name>
  </author>
  <link href="https://github.com/halima-ks/projet_compilateur" />
  <id>urn:rprimus:github:halima-ks:projet_compilateur</id>
  <published>2024-02-22T20:43:16Z</published>
  <updated>2024-02-22T20:43:16Z</updated>
  <content type="html">
   compilateur ocaml
  </content>
 </entry>
 <entry>
  <title>MarcosAndradeV: 99-ocaml-problems</title>
  <author>
   <name>MarcosAndradeV</name>
  </author>
  <link href="https://github.com/MarcosAndradeV/99-ocaml-problems" />
  <id>urn:rprimus:github:MarcosAndradeV:99-ocaml-problems</id>
  <published>2024-02-22T16:59:31Z</published>
  <updated>2024-02-22T16:59:31Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>CharlzKlug: ocaml-learn</title>
  <author>
   <name>CharlzKlug</name>
  </author>
  <link href="https://github.com/CharlzKlug/ocaml-learn" />
  <id>urn:rprimus:github:CharlzKlug:ocaml-learn</id>
  <published>2024-02-22T12:59:40Z</published>
  <updated>2024-02-22T12:59:40Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>k-nrd: cornell-cs3110</title>
  <author>
   <name>k-nrd</name>
  </author>
  <link href="https://github.com/k-nrd/cornell-cs3110" />
  <id>urn:rprimus:github:k-nrd:cornell-cs3110</id>
  <published>2024-02-22T11:41:10Z</published>
  <updated>2024-02-22T11:41:10Z</updated>
  <content type="html">
   learning ocaml
  </content>
 </entry>
 <entry>
  <title>Yoanouille: Polish</title>
  <author>
   <name>Yoanouille</name>
  </author>
  <link href="https://github.com/Yoanouille/Polish" />
  <id>urn:rprimus:github:Yoanouille:Polish</id>
  <published>2024-02-22T10:18:54Z</published>
  <updated>2024-02-22T10:18:54Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>mbarbin: vcs</title>
  <author>
   <name>mbarbin</name>
  </author>
  <link href="https://github.com/mbarbin/vcs" />
  <id>urn:rprimus:github:mbarbin:vcs</id>
  <published>2024-02-22T09:09:10Z</published>
  <updated>2024-02-22T09:09:10Z</updated>
  <content type="html">
   A versatile OCaml library for Git interaction
  </content>
 </entry>
 <entry>
  <title>GuilhemRep: Quines</title>
  <author>
   <name>GuilhemRep</name>
  </author>
  <link href="https://github.com/GuilhemRep/Quines" />
  <id>urn:rprimus:github:GuilhemRep:Quines</id>
  <published>2024-02-22T08:02:00Z</published>
  <updated>2024-02-22T08:02:00Z</updated>
  <content type="html">
   Programs that rewrite themselves or use their own code as an input
  </content>
 </entry>
 <entry>
  <title>bagnalla: micrograd</title>
  <author>
   <name>bagnalla</name>
  </author>
  <link href="https://github.com/bagnalla/micrograd" />
  <id>urn:rprimus:github:bagnalla:micrograd</id>
  <published>2024-02-22T05:21:32Z</published>
  <updated>2024-02-22T05:21:32Z</updated>
  <content type="html">
   micrograd in OCaml
  </content>
 </entry>
 <entry>
  <title>UnixJunkie: vdW_grid_bench</title>
  <author>
   <name>UnixJunkie</name>
  </author>
  <link href="https://github.com/UnixJunkie/vdW_grid_bench" />
  <id>urn:rprimus:github:UnixJunkie:vdW_grid_bench</id>
  <published>2024-02-22T00:34:55Z</published>
  <updated>2024-02-22T00:34:55Z</updated>
  <content type="html">
   Van der Waals 3D grid initialization benchmark
  </content>
 </entry>
 <entry>
  <title>strIcat: result</title>
  <author>
   <name>strIcat</name>
  </author>
  <link href="https://github.com/strIcat/result" />
  <id>urn:rprimus:github:strIcat:result</id>
  <published>2024-02-22T00:28:01Z</published>
  <updated>2024-02-22T00:28:01Z</updated>
  <content type="html">
   My implementation of a OCaml Result&lt;T, E&gt; type inspired by Rust
  </content>
 </entry>
</feed>
