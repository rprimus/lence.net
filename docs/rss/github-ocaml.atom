<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<link rel="self" type="application/atom+xml" href="http://lence.net/github-ocaml.atom"/>
<id>urn:rprimus:github:newocamlrepos</id>
<updated>2021-07-06T23:46:54Z</updated>
<title type='text'>New GitHub Ocaml Repos</title>
 <entry>
  <title>thadysam: ePortfolioProject</title>
  <author>
   <name>thadysam</name>
  </author>
  <link href="https://github.com/thadysam/ePortfolioProject" />
  <id>urn:rprimus:github:thadysam:ePortfolioProject</id>
  <published>2021-07-06T23:46:54Z</published>
  <updated>2021-07-06T23:46:54Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>epmor: lysa</title>
  <author>
   <name>epmor</name>
  </author>
  <link href="https://github.com/epmor/lysa" />
  <id>urn:rprimus:github:epmor:lysa</id>
  <published>2021-07-06T20:48:40Z</published>
  <updated>2021-07-06T20:48:40Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>cjd100: 99ProblemsInOcaml</title>
  <author>
   <name>cjd100</name>
  </author>
  <link href="https://github.com/cjd100/99ProblemsInOcaml" />
  <id>urn:rprimus:github:cjd100:99ProblemsInOcaml</id>
  <published>2021-07-06T19:13:47Z</published>
  <updated>2021-07-06T19:13:47Z</updated>
  <content type="html">
   Repo to hold my solutions for the 99 Problems in OCaml: https://ocaml.org/learn/tutorials/99problems.html
  </content>
 </entry>
 <entry>
  <title>billduff: pl_fridays</title>
  <author>
   <name>billduff</name>
  </author>
  <link href="https://github.com/billduff/pl_fridays" />
  <id>urn:rprimus:github:billduff:pl_fridays</id>
  <published>2021-07-06T17:46:11Z</published>
  <updated>2021-07-06T17:46:11Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>IlFrenk: graphs_path_finder</title>
  <author>
   <name>IlFrenk</name>
  </author>
  <link href="https://github.com/IlFrenk/graphs_path_finder" />
  <id>urn:rprimus:github:IlFrenk:graphs_path_finder</id>
  <published>2021-07-06T15:51:11Z</published>
  <updated>2021-07-06T15:51:11Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>johnyob: ocaml-non-empty-list</title>
  <author>
   <name>johnyob</name>
  </author>
  <link href="https://github.com/johnyob/ocaml-non-empty-list" />
  <id>urn:rprimus:github:johnyob:ocaml-non-empty-list</id>
  <published>2021-07-06T12:15:55Z</published>
  <updated>2021-07-06T12:15:55Z</updated>
  <content type="html">
   A non empty list library for OCaml
  </content>
 </entry>
 <entry>
  <title>CraigFe: tests_stanza_repro</title>
  <author>
   <name>CraigFe</name>
  </author>
  <link href="https://github.com/CraigFe/tests_stanza_repro" />
  <id>urn:rprimus:github:CraigFe:tests_stanza_repro</id>
  <published>2021-07-06T11:11:55Z</published>
  <updated>2021-07-06T11:11:55Z</updated>
  <content type="html">
   Nothing to see here.
  </content>
 </entry>
 <entry>
  <title>rom1trt: Arithmetic</title>
  <author>
   <name>rom1trt</name>
  </author>
  <link href="https://github.com/rom1trt/Arithmetic" />
  <id>urn:rprimus:github:rom1trt:Arithmetic</id>
  <published>2021-07-06T08:44:53Z</published>
  <updated>2021-07-06T08:44:53Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>prozacchiwawa: ochialisp</title>
  <author>
   <name>prozacchiwawa</name>
  </author>
  <link href="https://github.com/prozacchiwawa/ochialisp" />
  <id>urn:rprimus:github:prozacchiwawa:ochialisp</id>
  <published>2021-07-06T01:32:56Z</published>
  <updated>2021-07-06T01:32:56Z</updated>
  <content type="html">
   A somewhat authentic implementation of chialisp from the ground up using a different approach
  </content>
 </entry>
 <entry>
  <title>bradcampbel1: OCamlCompiler</title>
  <author>
   <name>bradcampbel1</name>
  </author>
  <link href="https://github.com/bradcampbel1/OCamlCompiler" />
  <id>urn:rprimus:github:bradcampbel1:OCamlCompiler</id>
  <published>2021-07-05T23:38:21Z</published>
  <updated>2021-07-05T23:38:21Z</updated>
  <content type="html">
   OCaml compiler project written, oddly enough, in OCaml. This was meant as an exploration of parsing input strings and creating real system output that is parallel to compiler output.
  </content>
 </entry>
 <entry>
  <title>ygaitonde: ocaml-notes</title>
  <author>
   <name>ygaitonde</name>
  </author>
  <link href="https://github.com/ygaitonde/ocaml-notes" />
  <id>urn:rprimus:github:ygaitonde:ocaml-notes</id>
  <published>2021-07-05T23:13:06Z</published>
  <updated>2021-07-05T23:13:06Z</updated>
  <content type="html">
   OCaml exercizes from Cornell CS3110
  </content>
 </entry>
 <entry>
  <title>thangngoc89: ocaml-slug</title>
  <author>
   <name>thangngoc89</name>
  </author>
  <link href="https://github.com/thangngoc89/ocaml-slug" />
  <id>urn:rprimus:github:thangngoc89:ocaml-slug</id>
  <published>2021-07-05T20:06:10Z</published>
  <updated>2021-07-05T20:06:10Z</updated>
  <content type="html">
   Url safe slug generator for OCaml
  </content>
 </entry>
 <entry>
  <title>MikeSkoe: ocaml_graphs</title>
  <author>
   <name>MikeSkoe</name>
  </author>
  <link href="https://github.com/MikeSkoe/ocaml_graphs" />
  <id>urn:rprimus:github:MikeSkoe:ocaml_graphs</id>
  <published>2021-07-05T17:32:54Z</published>
  <updated>2021-07-05T17:32:54Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>solanav: ezreq</title>
  <author>
   <name>solanav</name>
  </author>
  <link href="https://github.com/solanav/ezreq" />
  <id>urn:rprimus:github:solanav:ezreq</id>
  <published>2021-07-05T16:49:05Z</published>
  <updated>2021-07-05T16:49:05Z</updated>
  <content type="html">
   External DSL to learn about OCaml and compilers
  </content>
 </entry>
 <entry>
  <title>NathanReb: opttopfind</title>
  <author>
   <name>NathanReb</name>
  </author>
  <link href="https://github.com/NathanReb/opttopfind" />
  <id>urn:rprimus:github:NathanReb:opttopfind</id>
  <published>2021-07-05T16:48:48Z</published>
  <updated>2021-07-05T16:48:48Z</updated>
  <content type="html">
   Topfind port to native toplevel
  </content>
 </entry>
 <entry>
  <title>pkel: cpr</title>
  <author>
   <name>pkel</name>
  </author>
  <link href="https://github.com/pkel/cpr" />
  <id>urn:rprimus:github:pkel:cpr</id>
  <published>2021-07-05T16:00:54Z</published>
  <updated>2021-07-05T16:00:54Z</updated>
  <content type="html">
   consensus protocol research
  </content>
 </entry>
 <entry>
  <title>tars0x9752: 99-problems-in-ocaml</title>
  <author>
   <name>tars0x9752</name>
  </author>
  <link href="https://github.com/tars0x9752/99-problems-in-ocaml" />
  <id>urn:rprimus:github:tars0x9752:99-problems-in-ocaml</id>
  <published>2021-07-05T15:41:53Z</published>
  <updated>2021-07-05T15:41:53Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>GuilhermeTeixeira13: ExchangedChangesProblem</title>
  <author>
   <name>GuilhermeTeixeira13</name>
  </author>
  <link href="https://github.com/GuilhermeTeixeira13/ExchangedChangesProblem" />
  <id>urn:rprimus:github:GuilhermeTeixeira13:ExchangedChangesProblem</id>
  <published>2021-07-05T12:10:39Z</published>
  <updated>2021-07-05T12:10:39Z</updated>
  <content type="html">
   In this Ocaml exercise, we will exemplify the differences between dynamic programming and greedy algorithms.
  </content>
 </entry>
</feed>
