<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<link rel="self" type="application/atom+xml" href="http://lence.net/github-ocaml.atom"/>
<id>urn:rprimus:github:newocamlrepos</id>
<updated>2021-08-01T09:10:01Z</updated>
<title type='text'>New GitHub Ocaml Repos</title>
 <entry>
  <title>B-Lo0: F28PL</title>
  <author>
   <name>B-Lo0</name>
  </author>
  <link href="https://github.com/B-Lo0/F28PL" />
  <id>urn:rprimus:github:B-Lo0:F28PL</id>
  <published>2021-08-01T09:10:01Z</published>
  <updated>2021-08-01T09:10:01Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>keigoi: ppx_concat</title>
  <author>
   <name>keigoi</name>
  </author>
  <link href="https://github.com/keigoi/ppx_concat" />
  <id>urn:rprimus:github:keigoi:ppx_concat</id>
  <published>2021-08-01T07:32:04Z</published>
  <updated>2021-08-01T07:32:04Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>keigoi: ppx_ty_test</title>
  <author>
   <name>keigoi</name>
  </author>
  <link href="https://github.com/keigoi/ppx_ty_test" />
  <id>urn:rprimus:github:keigoi:ppx_ty_test</id>
  <published>2021-07-31T23:22:03Z</published>
  <updated>2021-07-31T23:22:03Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>patricoferris: jsoo-reload-example</title>
  <author>
   <name>patricoferris</name>
  </author>
  <link href="https://github.com/patricoferris/jsoo-reload-example" />
  <id>urn:rprimus:github:patricoferris:jsoo-reload-example</id>
  <published>2021-07-31T22:10:28Z</published>
  <updated>2021-07-31T22:10:28Z</updated>
  <content type="html">
   A simple jsoo reloading example
  </content>
 </entry>
 <entry>
  <title>Vertmo: ocamltokotlin</title>
  <author>
   <name>Vertmo</name>
  </author>
  <link href="https://github.com/Vertmo/ocamltokotlin" />
  <id>urn:rprimus:github:Vertmo:ocamltokotlin</id>
  <published>2021-07-31T18:33:49Z</published>
  <updated>2021-07-31T18:33:49Z</updated>
  <content type="html">
   Compiling OCaml to Kotlin (to eventually make some android apps)
  </content>
 </entry>
 <entry>
  <title>Sparrrow2020: Anti-Trojan-like-Ransomware-response-patch</title>
  <author>
   <name>Sparrrow2020</name>
  </author>
  <link href="https://github.com/Sparrrow2020/Anti-Trojan-like-Ransomware-response-patch" />
  <id>urn:rprimus:github:Sparrrow2020:Anti-Trojan-like-Ransomware-response-patch</id>
  <published>2021-07-31T14:43:21Z</published>
  <updated>2021-07-31T14:43:21Z</updated>
  <content type="html">
   This Trojan Ransomware was dropped on my phone last night, I made this, the other solution will not need to be patched unless you have some serious people after you, I am on social media so I deal with hackers everywhere, not by choice. This is for Ransomware and trojans. The code someone used was IO so I had to use machine language to match all the data. The code that infected me was Japanese. Hacking is stupid
  </content>
 </entry>
 <entry>
  <title>outkine: dream-mail</title>
  <author>
   <name>outkine</name>
  </author>
  <link href="https://github.com/outkine/dream-mail" />
  <id>urn:rprimus:github:outkine:dream-mail</id>
  <published>2021-07-31T04:23:51Z</published>
  <updated>2021-07-31T04:23:51Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>zhiruchen: ocamlcode</title>
  <author>
   <name>zhiruchen</name>
  </author>
  <link href="https://github.com/zhiruchen/ocamlcode" />
  <id>urn:rprimus:github:zhiruchen:ocamlcode</id>
  <published>2021-07-31T00:55:52Z</published>
  <updated>2021-07-31T00:55:52Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>Jaymun723: ocaml-experiment</title>
  <author>
   <name>Jaymun723</name>
  </author>
  <link href="https://github.com/Jaymun723/ocaml-experiment" />
  <id>urn:rprimus:github:Jaymun723:ocaml-experiment</id>
  <published>2021-07-30T21:15:31Z</published>
  <updated>2021-07-30T21:15:31Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>Kakadu: matrix-on-the-wall</title>
  <author>
   <name>Kakadu</name>
  </author>
  <link href="https://github.com/Kakadu/matrix-on-the-wall" />
  <id>urn:rprimus:github:Kakadu:matrix-on-the-wall</id>
  <published>2021-07-30T17:28:07Z</published>
  <updated>2021-07-30T17:28:07Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>janestreet: sexp_grammar</title>
  <author>
   <name>janestreet</name>
  </author>
  <link href="https://github.com/janestreet/sexp_grammar" />
  <id>urn:rprimus:github:janestreet:sexp_grammar</id>
  <published>2021-07-30T16:26:51Z</published>
  <updated>2021-07-30T16:26:51Z</updated>
  <content type="html">
   Helpers for manipulating [Sexplib.Sexp_grammar] values.
  </content>
 </entry>
 <entry>
  <title>janestreet: ppx_ignore_instrumentation</title>
  <author>
   <name>janestreet</name>
  </author>
  <link href="https://github.com/janestreet/ppx_ignore_instrumentation" />
  <id>urn:rprimus:github:janestreet:ppx_ignore_instrumentation</id>
  <published>2021-07-30T16:26:50Z</published>
  <updated>2021-07-30T16:26:50Z</updated>
  <content type="html">
   Ignore Jane Street specific instrumentation extensions.
  </content>
 </entry>
 <entry>
  <title>Thibaut-Gudin: ocaml-gtag</title>
  <author>
   <name>Thibaut-Gudin</name>
  </author>
  <link href="https://github.com/Thibaut-Gudin/ocaml-gtag" />
  <id>urn:rprimus:github:Thibaut-Gudin:ocaml-gtag</id>
  <published>2021-07-30T15:20:44Z</published>
  <updated>2021-07-30T15:20:44Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>Cpargy: b</title>
  <author>
   <name>Cpargy</name>
  </author>
  <link href="https://github.com/Cpargy/b" />
  <id>urn:rprimus:github:Cpargy:b</id>
  <published>2021-07-30T13:30:34Z</published>
  <updated>2021-07-30T13:30:34Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>mirage: cactus</title>
  <author>
   <name>mirage</name>
  </author>
  <link href="https://github.com/mirage/cactus" />
  <id>urn:rprimus:github:mirage:cactus</id>
  <published>2021-07-30T13:07:11Z</published>
  <updated>2021-07-30T13:07:11Z</updated>
  <content type="html">
   A Btree library in OCaml
  </content>
 </entry>
 <entry>
  <title>Thibaut-Gudin: ocaml-branch-cordova-sdk</title>
  <author>
   <name>Thibaut-Gudin</name>
  </author>
  <link href="https://github.com/Thibaut-Gudin/ocaml-branch-cordova-sdk" />
  <id>urn:rprimus:github:Thibaut-Gudin:ocaml-branch-cordova-sdk</id>
  <published>2021-07-30T10:21:48Z</published>
  <updated>2021-07-30T10:21:48Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>Sparrrow2020: Inraeli-Remote-Access-Program-Resposne</title>
  <author>
   <name>Sparrrow2020</name>
  </author>
  <link href="https://github.com/Sparrrow2020/Inraeli-Remote-Access-Program-Resposne" />
  <id>urn:rprimus:github:Sparrrow2020:Inraeli-Remote-Access-Program-Resposne</id>
  <published>2021-07-30T09:59:15Z</published>
  <updated>2021-07-30T09:59:15Z</updated>
  <content type="html">
   Someone put some Israeli remote access on my Laptop. I have a gangstalking situation and people want to see. This will remove the affects and slowly make the software inert by adding on cripple enabling add ons to the software(Update)
  </content>
 </entry>
 <entry>
  <title>Sparrrow2020: Machine-Learning-Device-Security-Suite</title>
  <author>
   <name>Sparrrow2020</name>
  </author>
  <link href="https://github.com/Sparrrow2020/Machine-Learning-Device-Security-Suite" />
  <id>urn:rprimus:github:Sparrrow2020:Machine-Learning-Device-Security-Suite</id>
  <published>2021-07-30T08:12:55Z</published>
  <updated>2021-07-30T08:12:55Z</updated>
  <content type="html">
   Three Machine Learning code Applications that form a Layered Security Function. Not Stand Alone Antivirus. The design intent is to prevent remote access and remove and negate malicious actions from rogue software once compromised, there is a removal tool Up to a class 6 out of 10 rated malware(Beta). Uses machine learning and updates.
  </content>
 </entry>
 <entry>
  <title>mro: form2xhtml</title>
  <author>
   <name>mro</name>
  </author>
  <link href="https://github.com/mro/form2xhtml" />
  <id>urn:rprimus:github:mro:form2xhtml</id>
  <published>2021-07-30T07:18:11Z</published>
  <updated>2021-07-30T07:18:11Z</updated>
  <content type="html">
   âï¸ Mirror of https://code.mro.name/mro/form2xml | ð« âï¸ convert RFC2388 multipart/form-data dumps to a minimal xhtml form containing the same data as the form before submission. Comes with a CGI to catch such dumps and an xslt trafo to Atom RFC4287.
  </content>
 </entry>
 <entry>
  <title>anushka-mukherjee: Stock-Simulation-</title>
  <author>
   <name>anushka-mukherjee</name>
  </author>
  <link href="https://github.com/anushka-mukherjee/Stock-Simulation-" />
  <id>urn:rprimus:github:anushka-mukherjee:Stock-Simulation-</id>
  <published>2021-07-30T01:09:59Z</published>
  <updated>2021-07-30T01:09:59Z</updated>
  <content type="html">
   Worked with two other people for our final project in CS3110 @Cornell
  </content>
 </entry>
</feed>
