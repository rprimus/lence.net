<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<link rel="self" type="application/atom+xml" href="http://lence.net/github-ocaml.atom"/>
<id>urn:rprimus:github:newocamlrepos</id>
<updated>2021-12-17T10:16:54Z</updated>
<title type='text'>New GitHub Ocaml Repos</title>
 <entry>
  <title>xiongxin: mciiml</title>
  <author>
   <name>xiongxin</name>
  </author>
  <link href="https://github.com/xiongxin/mciiml" />
  <id>urn:rprimus:github:xiongxin:mciiml</id>
  <published>2021-12-17T10:16:54Z</published>
  <updated>2021-12-17T10:16:54Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>jli0211: OCaml-Interpreter</title>
  <author>
   <name>jli0211</name>
  </author>
  <link href="https://github.com/jli0211/OCaml-Interpreter" />
  <id>urn:rprimus:github:jli0211:OCaml-Interpreter</id>
  <published>2021-12-17T01:36:08Z</published>
  <updated>2021-12-17T01:36:08Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>eduardolamaro: TP-Compiladores-Analise-Sintatica</title>
  <author>
   <name>eduardolamaro</name>
  </author>
  <link href="https://github.com/eduardolamaro/TP-Compiladores-Analise-Sintatica" />
  <id>urn:rprimus:github:eduardolamaro:TP-Compiladores-Analise-Sintatica</id>
  <published>2021-12-16T19:51:24Z</published>
  <updated>2021-12-16T19:51:24Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>eduardolamaro: TP-Compiladores-Analise-Lexica</title>
  <author>
   <name>eduardolamaro</name>
  </author>
  <link href="https://github.com/eduardolamaro/TP-Compiladores-Analise-Lexica" />
  <id>urn:rprimus:github:eduardolamaro:TP-Compiladores-Analise-Lexica</id>
  <published>2021-12-16T19:45:05Z</published>
  <updated>2021-12-16T19:45:05Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>gbdrt: byo-ppl</title>
  <author>
   <name>gbdrt</name>
  </author>
  <link href="https://github.com/gbdrt/byo-ppl" />
  <id>urn:rprimus:github:gbdrt:byo-ppl</id>
  <published>2021-12-16T15:25:05Z</published>
  <updated>2021-12-16T15:25:05Z</updated>
  <content type="html">
   A lightweight library for probabilistic programming in OCaml
  </content>
 </entry>
 <entry>
  <title>cosynus-lix: gmod</title>
  <author>
   <name>cosynus-lix</name>
  </author>
  <link href="https://github.com/cosynus-lix/gmod" />
  <id>urn:rprimus:github:cosynus-lix:gmod</id>
  <published>2021-12-16T14:35:10Z</published>
  <updated>2021-12-16T14:35:10Z</updated>
  <content type="html">
   Geometric models.
  </content>
 </entry>
 <entry>
  <title>most21: mlb-hof-predictions-demo</title>
  <author>
   <name>most21</name>
  </author>
  <link href="https://github.com/most21/mlb-hof-predictions-demo" />
  <id>urn:rprimus:github:most21:mlb-hof-predictions-demo</id>
  <published>2021-12-16T13:16:44Z</published>
  <updated>2021-12-16T13:16:44Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>siabard: ocaml_sdl_tutorial</title>
  <author>
   <name>siabard</name>
  </author>
  <link href="https://github.com/siabard/ocaml_sdl_tutorial" />
  <id>urn:rprimus:github:siabard:ocaml_sdl_tutorial</id>
  <published>2021-12-16T12:52:56Z</published>
  <updated>2021-12-16T12:52:56Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>aaron-jack-manning: ocaml-standard-library</title>
  <author>
   <name>aaron-jack-manning</name>
  </author>
  <link href="https://github.com/aaron-jack-manning/ocaml-standard-library" />
  <id>urn:rprimus:github:aaron-jack-manning:ocaml-standard-library</id>
  <published>2021-12-16T10:00:24Z</published>
  <updated>2021-12-16T10:00:24Z</updated>
  <content type="html">
   This repository contains my custom OCaml standard library and build system.
  </content>
 </entry>
 <entry>
  <title>pereb4ik: osh</title>
  <author>
   <name>pereb4ik</name>
  </author>
  <link href="https://github.com/pereb4ik/osh" />
  <id>urn:rprimus:github:pereb4ik:osh</id>
  <published>2021-12-16T09:45:34Z</published>
  <updated>2021-12-16T09:45:34Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>bcc32: advent-of-code</title>
  <author>
   <name>bcc32</name>
  </author>
  <link href="https://github.com/bcc32/advent-of-code" />
  <id>urn:rprimus:github:bcc32:advent-of-code</id>
  <published>2021-12-16T05:44:35Z</published>
  <updated>2021-12-16T05:44:35Z</updated>
  <content type="html">
   My solutions to Advent of Code problems
  </content>
 </entry>
 <entry>
  <title>deepali2806: code-snippets</title>
  <author>
   <name>deepali2806</name>
  </author>
  <link href="https://github.com/deepali2806/code-snippets" />
  <id>urn:rprimus:github:deepali2806:code-snippets</id>
  <published>2021-12-16T05:22:08Z</published>
  <updated>2021-12-16T05:22:08Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>mirca: advent-of-code</title>
  <author>
   <name>mirca</name>
  </author>
  <link href="https://github.com/mirca/advent-of-code" />
  <id>urn:rprimus:github:mirca:advent-of-code</id>
  <published>2021-12-16T04:20:06Z</published>
  <updated>2021-12-16T04:20:06Z</updated>
  <content type="html">
   my solutions to aoc in ocaml
  </content>
 </entry>
 <entry>
  <title>RemedyTwo: Projet-Logique-2</title>
  <author>
   <name>RemedyTwo</name>
  </author>
  <link href="https://github.com/RemedyTwo/Projet-Logique-2" />
  <id>urn:rprimus:github:RemedyTwo:Projet-Logique-2</id>
  <published>2021-12-16T00:21:02Z</published>
  <updated>2021-12-16T00:21:02Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>mariajdavis: SimulatedAnnealingSolution</title>
  <author>
   <name>mariajdavis</name>
  </author>
  <link href="https://github.com/mariajdavis/SimulatedAnnealingSolution" />
  <id>urn:rprimus:github:mariajdavis:SimulatedAnnealingSolution</id>
  <published>2021-12-15T21:45:59Z</published>
  <updated>2021-12-15T21:45:59Z</updated>
  <content type="html">
   Approximate TSP solution for large data sets
  </content>
 </entry>
 <entry>
  <title>wyasul: Connect-X</title>
  <author>
   <name>wyasul</name>
  </author>
  <link href="https://github.com/wyasul/Connect-X" />
  <id>urn:rprimus:github:wyasul:Connect-X</id>
  <published>2021-12-15T21:02:19Z</published>
  <updated>2021-12-15T21:02:19Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>let-def: cmon</title>
  <author>
   <name>let-def</name>
  </author>
  <link href="https://github.com/let-def/cmon" />
  <id>urn:rprimus:github:let-def:cmon</id>
  <published>2021-12-15T20:40:23Z</published>
  <updated>2021-12-15T20:40:23Z</updated>
  <content type="html">
   A library for printing OCaml values with sharing 
  </content>
 </entry>
 <entry>
  <title>cephas: ocaml-misc</title>
  <author>
   <name>cephas</name>
  </author>
  <link href="https://github.com/cephas/ocaml-misc" />
  <id>urn:rprimus:github:cephas:ocaml-misc</id>
  <published>2021-12-15T19:41:56Z</published>
  <updated>2021-12-15T19:41:56Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>casgari: MiniML</title>
  <author>
   <name>casgari</name>
  </author>
  <link href="https://github.com/casgari/MiniML" />
  <id>urn:rprimus:github:casgari:MiniML</id>
  <published>2021-12-15T17:54:44Z</published>
  <updated>2021-12-15T17:54:44Z</updated>
  <content type="html">
   Turing-complete language interpreter that can utilize a substition model, as well as lexically and dynamically scoped environments
  </content>
 </entry>
 <entry>
  <title>renatoalencar: angela</title>
  <author>
   <name>renatoalencar</name>
  </author>
  <link href="https://github.com/renatoalencar/angela" />
  <id>urn:rprimus:github:renatoalencar:angela</id>
  <published>2021-12-15T17:25:41Z</published>
  <updated>2021-12-15T17:25:41Z</updated>
  <content type="html">
   A Merkle tree library in OCaml
  </content>
 </entry>
 <entry>
  <title>mitre: cppl</title>
  <author>
   <name>mitre</name>
  </author>
  <link href="https://github.com/mitre/cppl" />
  <id>urn:rprimus:github:mitre:cppl</id>
  <published>2021-12-15T16:03:12Z</published>
  <updated>2021-12-15T16:03:12Z</updated>
  <content type="html">
   A Cryptographic Protocol Programming Language Compiler and Runtime
  </content>
 </entry>
 <entry>
  <title>roburio: ocaml-solo5-elftool</title>
  <author>
   <name>roburio</name>
  </author>
  <link href="https://github.com/roburio/ocaml-solo5-elftool" />
  <id>urn:rprimus:github:roburio:ocaml-solo5-elftool</id>
  <published>2021-12-15T14:42:24Z</published>
  <updated>2021-12-15T14:42:24Z</updated>
  <content type="html">
   Mirror of https://git.robur.io/robur/ocaml-solo5-elftool/
  </content>
 </entry>
 <entry>
  <title>vmoeykens: cs225-homework5</title>
  <author>
   <name>vmoeykens</name>
  </author>
  <link href="https://github.com/vmoeykens/cs225-homework5" />
  <id>urn:rprimus:github:vmoeykens:cs225-homework5</id>
  <published>2021-12-15T14:25:37Z</published>
  <updated>2021-12-15T14:25:37Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>mariojppereira: Verified-Programs</title>
  <author>
   <name>mariojppereira</name>
  </author>
  <link href="https://github.com/mariojppereira/Verified-Programs" />
  <id>urn:rprimus:github:mariojppereira:Verified-Programs</id>
  <published>2021-12-15T13:35:10Z</published>
  <updated>2021-12-15T13:35:10Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>PureFunctor: algorithm-w</title>
  <author>
   <name>PureFunctor</name>
  </author>
  <link href="https://github.com/PureFunctor/algorithm-w" />
  <id>urn:rprimus:github:PureFunctor:algorithm-w</id>
  <published>2021-12-15T12:30:09Z</published>
  <updated>2021-12-15T12:30:09Z</updated>
  <content type="html">
   An implementation of a Hindley-Milner type system with Algorithm W for inference in OCaml.
  </content>
 </entry>
 <entry>
  <title>Benzi-Junior: MerkelTree</title>
  <author>
   <name>Benzi-Junior</name>
  </author>
  <link href="https://github.com/Benzi-Junior/MerkelTree" />
  <id>urn:rprimus:github:Benzi-Junior:MerkelTree</id>
  <published>2021-12-15T09:41:23Z</published>
  <updated>2021-12-15T09:41:23Z</updated>
  <content type="html">
   A basic MerkelTree implementation in OCaml
  </content>
 </entry>
 <entry>
  <title>JinbeanPark: Programming-Languages</title>
  <author>
   <name>JinbeanPark</name>
  </author>
  <link href="https://github.com/JinbeanPark/Programming-Languages" />
  <id>urn:rprimus:github:JinbeanPark:Programming-Languages</id>
  <published>2021-12-15T04:18:32Z</published>
  <updated>2021-12-15T04:18:32Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>connorjchen: game-of-life</title>
  <author>
   <name>connorjchen</name>
  </author>
  <link href="https://github.com/connorjchen/game-of-life" />
  <id>urn:rprimus:github:connorjchen:game-of-life</id>
  <published>2021-12-15T02:45:00Z</published>
  <updated>2021-12-15T02:45:00Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>antonioimola: listmismash</title>
  <author>
   <name>antonioimola</name>
  </author>
  <link href="https://github.com/antonioimola/listmismash" />
  <id>urn:rprimus:github:antonioimola:listmismash</id>
  <published>2021-12-15T01:06:29Z</published>
  <updated>2021-12-15T01:06:29Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>hyhvivianxy: Monopoly</title>
  <author>
   <name>hyhvivianxy</name>
  </author>
  <link href="https://github.com/hyhvivianxy/Monopoly" />
  <id>urn:rprimus:github:hyhvivianxy:Monopoly</id>
  <published>2021-12-15T00:57:30Z</published>
  <updated>2021-12-15T00:57:30Z</updated>
  <content type="html">
   
  </content>
 </entry>
</feed>
