<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<link rel="self" type="application/atom+xml" href="http://lence.net/github-ocaml.atom"/>
<id>urn:rprimus:github:newocamlrepos</id>
<updated>2021-03-15T02:15:53Z</updated>
<title type='text'>New GitHub Ocaml Repos</title>
 <entry>
  <title>Mabedin00: ocaml_hw1</title>
  <author>
   <name>Mabedin00</name>
  </author>
  <link href="https://github.com/Mabedin00/ocaml_hw1" />
  <id>urn:rprimus:github:Mabedin00:ocaml_hw1</id>
  <published>2021-03-15T02:15:53Z</published>
  <updated>2021-03-15T02:15:53Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>lialittis: Compilation</title>
  <author>
   <name>lialittis</name>
  </author>
  <link href="https://github.com/lialittis/Compilation" />
  <id>urn:rprimus:github:lialittis:Compilation</id>
  <published>2021-03-15T00:11:39Z</published>
  <updated>2021-03-15T00:11:39Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>ZibingZhang: unification</title>
  <author>
   <name>ZibingZhang</name>
  </author>
  <link href="https://github.com/ZibingZhang/unification" />
  <id>urn:rprimus:github:ZibingZhang:unification</id>
  <published>2021-03-14T23:15:56Z</published>
  <updated>2021-03-14T23:15:56Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>chetmurthy: bs4j</title>
  <author>
   <name>chetmurthy</name>
  </author>
  <link href="https://github.com/chetmurthy/bs4j" />
  <id>urn:rprimus:github:chetmurthy:bs4j</id>
  <published>2021-03-14T20:51:20Z</published>
  <updated>2021-03-14T20:51:20Z</updated>
  <content type="html">
   Block Style for JSON
  </content>
 </entry>
 <entry>
  <title>frogstair: ocaml-99</title>
  <author>
   <name>frogstair</name>
  </author>
  <link href="https://github.com/frogstair/ocaml-99" />
  <id>urn:rprimus:github:frogstair:ocaml-99</id>
  <published>2021-03-14T18:17:28Z</published>
  <updated>2021-03-14T18:17:28Z</updated>
  <content type="html">
   99 OCaml problems solved by me!
  </content>
 </entry>
 <entry>
  <title>cry: ocaml-ddns</title>
  <author>
   <name>cry</name>
  </author>
  <link href="https://github.com/cry/ocaml-ddns" />
  <id>urn:rprimus:github:cry:ocaml-ddns</id>
  <published>2021-03-14T17:20:39Z</published>
  <updated>2021-03-14T17:20:39Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>ArtifactCabinet: OCaml-workbench</title>
  <author>
   <name>ArtifactCabinet</name>
  </author>
  <link href="https://github.com/ArtifactCabinet/OCaml-workbench" />
  <id>urn:rprimus:github:ArtifactCabinet:OCaml-workbench</id>
  <published>2021-03-14T16:27:43Z</published>
  <updated>2021-03-14T16:27:43Z</updated>
  <content type="html">
   What if we use pattern-matching for everything?
  </content>
 </entry>
 <entry>
  <title>404Monkey: projet_PF</title>
  <author>
   <name>404Monkey</name>
  </author>
  <link href="https://github.com/404Monkey/projet_PF" />
  <id>urn:rprimus:github:404Monkey:projet_PF</id>
  <published>2021-03-14T10:18:39Z</published>
  <updated>2021-03-14T10:18:39Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>tars0x9752: ocaml-practice</title>
  <author>
   <name>tars0x9752</name>
  </author>
  <link href="https://github.com/tars0x9752/ocaml-practice" />
  <id>urn:rprimus:github:tars0x9752:ocaml-practice</id>
  <published>2021-03-14T10:16:37Z</published>
  <updated>2021-03-14T10:16:37Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>gz101: CS51-Exam-Templates</title>
  <author>
   <name>gz101</name>
  </author>
  <link href="https://github.com/gz101/CS51-Exam-Templates" />
  <id>urn:rprimus:github:gz101:CS51-Exam-Templates</id>
  <published>2021-03-14T08:48:58Z</published>
  <updated>2021-03-14T08:48:58Z</updated>
  <content type="html">
   My exam template for Harvard&#039;s CS51 - for quick coding and testing in OCaml.
  </content>
 </entry>
 <entry>
  <title>Edsoncortes40: phonebook</title>
  <author>
   <name>Edsoncortes40</name>
  </author>
  <link href="https://github.com/Edsoncortes40/phonebook" />
  <id>urn:rprimus:github:Edsoncortes40:phonebook</id>
  <published>2021-03-13T18:47:36Z</published>
  <updated>2021-03-13T18:47:36Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>chrisnevers: chungus-parser-combinator</title>
  <author>
   <name>chrisnevers</name>
  </author>
  <link href="https://github.com/chrisnevers/chungus-parser-combinator" />
  <id>urn:rprimus:github:chrisnevers:chungus-parser-combinator</id>
  <published>2021-03-13T04:43:08Z</published>
  <updated>2021-03-13T04:43:08Z</updated>
  <content type="html">
   Monadic parser combinator with position information
  </content>
 </entry>
 <entry>
  <title>EliKor: c_compiler</title>
  <author>
   <name>EliKor</name>
  </author>
  <link href="https://github.com/EliKor/c_compiler" />
  <id>urn:rprimus:github:EliKor:c_compiler</id>
  <published>2021-03-13T03:17:12Z</published>
  <updated>2021-03-13T03:17:12Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>benmandrew: DPLLSAT</title>
  <author>
   <name>benmandrew</name>
  </author>
  <link href="https://github.com/benmandrew/DPLLSAT" />
  <id>urn:rprimus:github:benmandrew:DPLLSAT</id>
  <published>2021-03-13T01:09:48Z</published>
  <updated>2021-03-13T01:09:48Z</updated>
  <content type="html">
   Simple DPLL SAT solver written in OCaml, for proving unsatisfiability of propositional formulae in CNF clause form.
  </content>
 </entry>
</feed>
