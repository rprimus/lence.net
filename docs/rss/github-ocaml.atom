<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<link rel="self" type="application/atom+xml" href="http://lence.net/github-ocaml.atom"/>
<id>urn:rprimus:github:newocamlrepos</id>
<updated>2023-05-22T08:06:03Z</updated>
<title type='text'>New GitHub Ocaml Repos</title>
 <entry>
  <title>aeghost: naive-bench</title>
  <author>
   <name>aeghost</name>
  </author>
  <link href="https://github.com/aeghost/naive-bench" />
  <id>urn:rprimus:github:aeghost:naive-bench</id>
  <published>2023-05-22T08:06:03Z</published>
  <updated>2023-05-22T08:06:03Z</updated>
  <content type="html">
   A naive benchmark of Clients/Servers in OCaml; Made to test Push/Pull ipc perf of ZMQ bindings for OCaml.
  </content>
 </entry>
 <entry>
  <title>outerform: DPPL-project</title>
  <author>
   <name>outerform</name>
  </author>
  <link href="https://github.com/outerform/DPPL-project" />
  <id>urn:rprimus:github:outerform:DPPL-project</id>
  <published>2023-05-22T02:43:13Z</published>
  <updated>2023-05-22T02:43:13Z</updated>
  <content type="html">
   Final project of PKU-DPPL class
  </content>
 </entry>
 <entry>
  <title>alpaylan: checkedExtract</title>
  <author>
   <name>alpaylan</name>
  </author>
  <link href="https://github.com/alpaylan/checkedExtract" />
  <id>urn:rprimus:github:alpaylan:checkedExtract</id>
  <published>2023-05-21T22:24:04Z</published>
  <updated>2023-05-21T22:24:04Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>dbuenzli: typegist</title>
  <author>
   <name>dbuenzli</name>
  </author>
  <link href="https://github.com/dbuenzli/typegist" />
  <id>urn:rprimus:github:dbuenzli:typegist</id>
  <published>2023-05-21T22:09:04Z</published>
  <updated>2023-05-21T22:09:04Z</updated>
  <content type="html">
   Reflect the essence of OCaml types as values
  </content>
 </entry>
 <entry>
  <title>art-w: prettree</title>
  <author>
   <name>art-w</name>
  </author>
  <link href="https://github.com/art-w/prettree" />
  <id>urn:rprimus:github:art-w:prettree</id>
  <published>2023-05-21T19:43:08Z</published>
  <updated>2023-05-21T19:43:08Z</updated>
  <content type="html">
   Pretty tree layout with an applicative functor
  </content>
 </entry>
 <entry>
  <title>Halbaroth: luthor</title>
  <author>
   <name>Halbaroth</name>
  </author>
  <link href="https://github.com/Halbaroth/luthor" />
  <id>urn:rprimus:github:Halbaroth:luthor</id>
  <published>2023-05-21T17:41:12Z</published>
  <updated>2023-05-21T17:41:12Z</updated>
  <content type="html">
   A naive regexp library
  </content>
 </entry>
 <entry>
  <title>owen-taylor: Mancala</title>
  <author>
   <name>owen-taylor</name>
  </author>
  <link href="https://github.com/owen-taylor/Mancala" />
  <id>urn:rprimus:github:owen-taylor:Mancala</id>
  <published>2023-05-21T15:36:29Z</published>
  <updated>2023-05-21T15:36:29Z</updated>
  <content type="html">
   This is the game Mancala coded in OCaml
  </content>
 </entry>
 <entry>
  <title>9concepts: property_test_demo</title>
  <author>
   <name>9concepts</name>
  </author>
  <link href="https://github.com/9concepts/property_test_demo" />
  <id>urn:rprimus:github:9concepts:property_test_demo</id>
  <published>2023-05-21T11:44:31Z</published>
  <updated>2023-05-21T11:44:31Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>d-plaindoux: alda</title>
  <author>
   <name>d-plaindoux</name>
  </author>
  <link href="https://github.com/d-plaindoux/alda" />
  <id>urn:rprimus:github:d-plaindoux:alda</id>
  <published>2023-05-21T07:45:27Z</published>
  <updated>2023-05-21T07:45:27Z</updated>
  <content type="html">
   Intuitive and simple to use OCaml parsec 
  </content>
 </entry>
 <entry>
  <title>nickgabriadze: ocaml-6-subtasks</title>
  <author>
   <name>nickgabriadze</name>
  </author>
  <link href="https://github.com/nickgabriadze/ocaml-6-subtasks" />
  <id>urn:rprimus:github:nickgabriadze:ocaml-6-subtasks</id>
  <published>2023-05-21T04:19:00Z</published>
  <updated>2023-05-21T04:19:00Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>Brandonnl: OScrabble</title>
  <author>
   <name>Brandonnl</name>
  </author>
  <link href="https://github.com/Brandonnl/OScrabble" />
  <id>urn:rprimus:github:Brandonnl:OScrabble</id>
  <published>2023-05-20T23:47:50Z</published>
  <updated>2023-05-20T23:47:50Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>yacyam: 3D-Perlin-Noise</title>
  <author>
   <name>yacyam</name>
  </author>
  <link href="https://github.com/yacyam/3D-Perlin-Noise" />
  <id>urn:rprimus:github:yacyam:3D-Perlin-Noise</id>
  <published>2023-05-20T21:24:59Z</published>
  <updated>2023-05-20T21:24:59Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>mrochk: advent-of-ocaml</title>
  <author>
   <name>mrochk</name>
  </author>
  <link href="https://github.com/mrochk/advent-of-ocaml" />
  <id>urn:rprimus:github:mrochk:advent-of-ocaml</id>
  <published>2023-05-20T17:48:16Z</published>
  <updated>2023-05-20T17:48:16Z</updated>
  <content type="html">
   My attempt to AoC 2022 using OCaml.
  </content>
 </entry>
 <entry>
  <title>jerrychen04: brokerage-simulation</title>
  <author>
   <name>jerrychen04</name>
  </author>
  <link href="https://github.com/jerrychen04/brokerage-simulation" />
  <id>urn:rprimus:github:jerrychen04:brokerage-simulation</id>
  <published>2023-05-20T17:22:37Z</published>
  <updated>2023-05-20T17:22:37Z</updated>
  <content type="html">
   CS 3110 Final Project: Brokerage simulation programmed using OCaml and requests to the polygon.io API.
  </content>
 </entry>
 <entry>
  <title>carlobonandriniunimi: Ocaml</title>
  <author>
   <name>carlobonandriniunimi</name>
  </author>
  <link href="https://github.com/carlobonandriniunimi/Ocaml" />
  <id>urn:rprimus:github:carlobonandriniunimi:Ocaml</id>
  <published>2023-05-20T15:38:00Z</published>
  <updated>2023-05-20T15:38:00Z</updated>
  <content type="html">
   Ocaml
  </content>
 </entry>
 <entry>
  <title>Traumatism: ocaml-exercises</title>
  <author>
   <name>Traumatism</name>
  </author>
  <link href="https://github.com/Traumatism/ocaml-exercises" />
  <id>urn:rprimus:github:Traumatism:ocaml-exercises</id>
  <published>2023-05-20T08:10:31Z</published>
  <updated>2023-05-20T08:10:31Z</updated>
  <content type="html">
   on my way to learn OCaml
  </content>
 </entry>
 <entry>
  <title>vinayakdsci: 99-problems-ocaml</title>
  <author>
   <name>vinayakdsci</name>
  </author>
  <link href="https://github.com/vinayakdsci/99-problems-ocaml" />
  <id>urn:rprimus:github:vinayakdsci:99-problems-ocaml</id>
  <published>2023-05-20T07:40:41Z</published>
  <updated>2023-05-20T07:40:41Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>Perinze: tiger</title>
  <author>
   <name>Perinze</name>
  </author>
  <link href="https://github.com/Perinze/tiger" />
  <id>urn:rprimus:github:Perinze:tiger</id>
  <published>2023-05-20T05:15:31Z</published>
  <updated>2023-05-20T05:15:31Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>TheodoroADS: derivative-machine</title>
  <author>
   <name>TheodoroADS</name>
  </author>
  <link href="https://github.com/TheodoroADS/derivative-machine" />
  <id>urn:rprimus:github:TheodoroADS:derivative-machine</id>
  <published>2023-05-20T00:33:24Z</published>
  <updated>2023-05-20T00:33:24Z</updated>
  <content type="html">
   A simple program that computes the derivative (or the value) of an expression. I did this project mostly to experiment with implementing recursive descent parsing in Ocaml.
  </content>
 </entry>
</feed>
