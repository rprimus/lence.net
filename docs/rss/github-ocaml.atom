<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<link rel="self" type="application/atom+xml" href="http://lence.net/github-ocaml.atom"/>
<id>urn:rprimus:github:newocamlrepos</id>
<updated>2022-03-20T21:03:29Z</updated>
<title type='text'>New GitHub Ocaml Repos</title>
 <entry>
  <title>TIberiu99p: OCAMLtibz</title>
  <author>
   <name>TIberiu99p</name>
  </author>
  <link href="https://github.com/TIberiu99p/OCAMLtibz" />
  <id>urn:rprimus:github:TIberiu99p:OCAMLtibz</id>
  <published>2022-03-20T21:03:29Z</published>
  <updated>2022-03-20T21:03:29Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>KaiDavidF: TicTacToe-AI</title>
  <author>
   <name>KaiDavidF</name>
  </author>
  <link href="https://github.com/KaiDavidF/TicTacToe-AI" />
  <id>urn:rprimus:github:KaiDavidF:TicTacToe-AI</id>
  <published>2022-03-20T19:11:27Z</published>
  <updated>2022-03-20T19:11:27Z</updated>
  <content type="html">
   Wrote a logic-based AI, that will never lose in the game TicTacToe. Just for fun.
  </content>
 </entry>
 <entry>
  <title>eliw-aiz: mpaths-nldb-supplement</title>
  <author>
   <name>eliw-aiz</name>
  </author>
  <link href="https://github.com/eliw-aiz/mpaths-nldb-supplement" />
  <id>urn:rprimus:github:eliw-aiz:mpaths-nldb-supplement</id>
  <published>2022-03-20T19:04:15Z</published>
  <updated>2022-03-20T19:04:15Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>marthattack: DM-option-info</title>
  <author>
   <name>marthattack</name>
  </author>
  <link href="https://github.com/marthattack/DM-option-info" />
  <id>urn:rprimus:github:marthattack:DM-option-info</id>
  <published>2022-03-20T12:26:31Z</published>
  <updated>2022-03-20T12:26:31Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>cri-24: Ocaml-simple-project</title>
  <author>
   <name>cri-24</name>
  </author>
  <link href="https://github.com/cri-24/Ocaml-simple-project" />
  <id>urn:rprimus:github:cri-24:Ocaml-simple-project</id>
  <published>2022-03-20T08:43:24Z</published>
  <updated>2022-03-20T08:43:24Z</updated>
  <content type="html">
   The project aims to provide the interpreter of a functional teaching language with the new Dictionary type. The new type &quot;Dictionary&quot; is a set of pairs (key, value) and ApplyOver, Get,Set,Remove,Clear represent the operations that can be performed on a dictionary. If the parameter they must operate on is not a dictionary (DictVal) they will fail their evaluation.
  </content>
 </entry>
 <entry>
  <title>ZYJ-33: hw</title>
  <author>
   <name>ZYJ-33</name>
  </author>
  <link href="https://github.com/ZYJ-33/hw" />
  <id>urn:rprimus:github:ZYJ-33:hw</id>
  <published>2022-03-20T07:49:58Z</published>
  <updated>2022-03-20T07:49:58Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>andreyyao: Brilliant</title>
  <author>
   <name>andreyyao</name>
  </author>
  <link href="https://github.com/andreyyao/Brilliant" />
  <id>urn:rprimus:github:andreyyao:Brilliant</id>
  <published>2022-03-20T03:11:39Z</published>
  <updated>2022-03-20T03:11:39Z</updated>
  <content type="html">
   Compiler for the BRIL language at CS 6120, Cornell
  </content>
 </entry>
 <entry>
  <title>c-cube: ocaml-atomic</title>
  <author>
   <name>c-cube</name>
  </author>
  <link href="https://github.com/c-cube/ocaml-atomic" />
  <id>urn:rprimus:github:c-cube:ocaml-atomic</id>
  <published>2022-03-20T02:25:54Z</published>
  <updated>2022-03-20T02:25:54Z</updated>
  <content type="html">
   Compatibility package for the Atomic module
  </content>
 </entry>
 <entry>
  <title>CygnusBorjigi: omoto-ml</title>
  <author>
   <name>CygnusBorjigi</name>
  </author>
  <link href="https://github.com/CygnusBorjigi/omoto-ml" />
  <id>urn:rprimus:github:CygnusBorjigi:omoto-ml</id>
  <published>2022-03-20T02:22:05Z</published>
  <updated>2022-03-20T02:22:05Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>haesbaert: ocaml-mpsc</title>
  <author>
   <name>haesbaert</name>
  </author>
  <link href="https://github.com/haesbaert/ocaml-mpsc" />
  <id>urn:rprimus:github:haesbaert:ocaml-mpsc</id>
  <published>2022-03-20T02:16:31Z</published>
  <updated>2022-03-20T02:16:31Z</updated>
  <content type="html">
   Lockless Multiple Producer Single Consumer Queue for ocaml-multicore
  </content>
 </entry>
 <entry>
  <title>ssood123: PLT_Course_Project</title>
  <author>
   <name>ssood123</name>
  </author>
  <link href="https://github.com/ssood123/PLT_Course_Project" />
  <id>urn:rprimus:github:ssood123:PLT_Course_Project</id>
  <published>2022-03-20T01:03:00Z</published>
  <updated>2022-03-20T01:03:00Z</updated>
  <content type="html">
   
  </content>
 </entry>
</feed>
