<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<link rel="self" type="application/atom+xml" href="http://lence.net/github-ocaml.atom"/>
<id>urn:rprimus:github:newocamlrepos</id>
<updated>2024-02-04T09:12:11Z</updated>
<title type='text'>New GitHub Ocaml Repos</title>
 <entry>
  <title>dermesser: ocaml-transducers</title>
  <author>
   <name>dermesser</name>
  </author>
  <link href="https://github.com/dermesser/ocaml-transducers" />
  <id>urn:rprimus:github:dermesser:ocaml-transducers</id>
  <published>2024-02-04T09:12:11Z</published>
  <updated>2024-02-04T09:12:11Z</updated>
  <content type="html">
   Experimental: transducers in OCaml. Not ready for wider use, but contributions/feedback are welcome.
  </content>
 </entry>
 <entry>
  <title>TheoBessel: MLServ</title>
  <author>
   <name>TheoBessel</name>
  </author>
  <link href="https://github.com/TheoBessel/MLServ" />
  <id>urn:rprimus:github:TheoBessel:MLServ</id>
  <published>2024-02-04T08:00:37Z</published>
  <updated>2024-02-04T08:00:37Z</updated>
  <content type="html">
   A multithread TCP server written from scratch in OCaml for learning purposes
  </content>
 </entry>
 <entry>
  <title>nrz4: Rizzbot.</title>
  <author>
   <name>nrz4</name>
  </author>
  <link href="https://github.com/nrz4/Rizzbot." />
  <id>urn:rprimus:github:nrz4:Rizzbot.</id>
  <published>2024-02-04T02:23:43Z</published>
  <updated>2024-02-04T02:23:43Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>skiwee45: CS-3110</title>
  <author>
   <name>skiwee45</name>
  </author>
  <link href="https://github.com/skiwee45/CS-3110" />
  <id>urn:rprimus:github:skiwee45:CS-3110</id>
  <published>2024-02-04T01:00:44Z</published>
  <updated>2024-02-04T01:00:44Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>marindereggi: naloga1-demo</title>
  <author>
   <name>marindereggi</name>
  </author>
  <link href="https://github.com/marindereggi/naloga1-demo" />
  <id>urn:rprimus:github:marindereggi:naloga1-demo</id>
  <published>2024-02-03T21:35:09Z</published>
  <updated>2024-02-03T21:35:09Z</updated>
  <content type="html">
   Demo naloga1 PS-2023/24 in Go and OCaml
  </content>
 </entry>
 <entry>
  <title>m-spitfire: house_builder_ocaml</title>
  <author>
   <name>m-spitfire</name>
  </author>
  <link href="https://github.com/m-spitfire/house_builder_ocaml" />
  <id>urn:rprimus:github:m-spitfire:house_builder_ocaml</id>
  <published>2024-02-03T21:29:37Z</published>
  <updated>2024-02-03T21:29:37Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>davdiv: puiss4</title>
  <author>
   <name>davdiv</name>
  </author>
  <link href="https://github.com/davdiv/puiss4" />
  <id>urn:rprimus:github:davdiv:puiss4</id>
  <published>2024-02-03T18:38:33Z</published>
  <updated>2024-02-03T18:38:33Z</updated>
  <content type="html">
   Jeu de Puissance 4
  </content>
 </entry>
 <entry>
  <title>nadyalumy: risk_of_ocaml</title>
  <author>
   <name>nadyalumy</name>
  </author>
  <link href="https://github.com/nadyalumy/risk_of_ocaml" />
  <id>urn:rprimus:github:nadyalumy:risk_of_ocaml</id>
  <published>2024-02-03T16:33:13Z</published>
  <updated>2024-02-03T16:33:13Z</updated>
  <content type="html">
   risk_of_ocaml: the classic strategy board game Risk, now in OCaml!    Risk is a game based on diplomacy, conflict, and conquest. Conquer the    world by controlling armies, making alliances (or enemies), and capturing    territories.    The game supports 2 to 6 players, with a GUI map for players to enjoy!
  </content>
 </entry>
 <entry>
  <title>YazZHh: dames-chinoises-ocaml</title>
  <author>
   <name>YazZHh</name>
  </author>
  <link href="https://github.com/YazZHh/dames-chinoises-ocaml" />
  <id>urn:rprimus:github:YazZHh:dames-chinoises-ocaml</id>
  <published>2024-02-03T15:10:52Z</published>
  <updated>2024-02-03T15:10:52Z</updated>
  <content type="html">
   Projet encadrÃ© portÃ© sur le jeux des dames chinoises, dÃ©veloppÃ© en programmation fonctionnelle en OCaml
  </content>
 </entry>
 <entry>
  <title>chsouaiby: fp-remake</title>
  <author>
   <name>chsouaiby</name>
  </author>
  <link href="https://github.com/chsouaiby/fp-remake" />
  <id>urn:rprimus:github:chsouaiby:fp-remake</id>
  <published>2024-02-03T13:25:02Z</published>
  <updated>2024-02-03T13:25:02Z</updated>
  <content type="html">
   Project simulating the basic operations of a forth pile using functional programming (OCaml, French)
  </content>
 </entry>
 <entry>
  <title>anandMohanan: ocamlmycaml</title>
  <author>
   <name>anandMohanan</name>
  </author>
  <link href="https://github.com/anandMohanan/ocamlmycaml" />
  <id>urn:rprimus:github:anandMohanan:ocamlmycaml</id>
  <published>2024-02-03T06:26:14Z</published>
  <updated>2024-02-03T06:26:14Z</updated>
  <content type="html">
   learning
  </content>
 </entry>
 <entry>
  <title>Debashis7307: OCaml</title>
  <author>
   <name>Debashis7307</name>
  </author>
  <link href="https://github.com/Debashis7307/OCaml" />
  <id>urn:rprimus:github:Debashis7307:OCaml</id>
  <published>2024-02-03T06:24:24Z</published>
  <updated>2024-02-03T06:24:24Z</updated>
  <content type="html">
   OCaml - is a funcnal programming language , Here one can get all OCaml codes topic wise
  </content>
 </entry>
 <entry>
  <title>Neel-Dandiwala: OCaml-Practice</title>
  <author>
   <name>Neel-Dandiwala</name>
  </author>
  <link href="https://github.com/Neel-Dandiwala/OCaml-Practice" />
  <id>urn:rprimus:github:Neel-Dandiwala:OCaml-Practice</id>
  <published>2024-02-02T23:56:35Z</published>
  <updated>2024-02-02T23:56:35Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>OKEAMAH: Git</title>
  <author>
   <name>OKEAMAH</name>
  </author>
  <link href="https://github.com/OKEAMAH/Git" />
  <id>urn:rprimus:github:OKEAMAH:Git</id>
  <published>2024-02-02T23:45:46Z</published>
  <updated>2024-02-02T23:45:46Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>elicatza: plotin_caml</title>
  <author>
   <name>elicatza</name>
  </author>
  <link href="https://github.com/elicatza/plotin_caml" />
  <id>urn:rprimus:github:elicatza:plotin_caml</id>
  <published>2024-02-02T19:49:46Z</published>
  <updated>2024-02-02T19:49:46Z</updated>
  <content type="html">
    Plotting library for OCaml made using Raylib C interop
  </content>
 </entry>
 <entry>
  <title>pgberlureau: Brainf-Compiler</title>
  <author>
   <name>pgberlureau</name>
  </author>
  <link href="https://github.com/pgberlureau/Brainf-Compiler" />
  <id>urn:rprimus:github:pgberlureau:Brainf-Compiler</id>
  <published>2024-02-02T17:52:06Z</published>
  <updated>2024-02-02T17:52:06Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>willruw: FuncLang</title>
  <author>
   <name>willruw</name>
  </author>
  <link href="https://github.com/willruw/FuncLang" />
  <id>urn:rprimus:github:willruw:FuncLang</id>
  <published>2024-02-02T16:36:43Z</published>
  <updated>2024-02-02T16:36:43Z</updated>
  <content type="html">
   FuncLang is a functional language implementation, from source code to desired behavior: Parse source into S-expression, then to AST, then interpret.
  </content>
 </entry>
 <entry>
  <title>acesulfamK: SimpleCompiler</title>
  <author>
   <name>acesulfamK</name>
  </author>
  <link href="https://github.com/acesulfamK/SimpleCompiler" />
  <id>urn:rprimus:github:acesulfamK:SimpleCompiler</id>
  <published>2024-02-02T16:11:28Z</published>
  <updated>2024-02-02T16:11:28Z</updated>
  <content type="html">
   simple-compiler
  </content>
 </entry>
 <entry>
  <title>Kresqle: ocaml-algos</title>
  <author>
   <name>Kresqle</name>
  </author>
  <link href="https://github.com/Kresqle/ocaml-algos" />
  <id>urn:rprimus:github:Kresqle:ocaml-algos</id>
  <published>2024-02-02T13:58:40Z</published>
  <updated>2024-02-02T13:58:40Z</updated>
  <content type="html">
   Implementation of different algorithms in OCaml
  </content>
 </entry>
 <entry>
  <title>wjlwjl07aa: CodeCademyCourse</title>
  <author>
   <name>wjlwjl07aa</name>
  </author>
  <link href="https://github.com/wjlwjl07aa/CodeCademyCourse" />
  <id>urn:rprimus:github:wjlwjl07aa:CodeCademyCourse</id>
  <published>2024-02-02T13:55:59Z</published>
  <updated>2024-02-02T13:55:59Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>RichardLeal: language-l2</title>
  <author>
   <name>RichardLeal</name>
  </author>
  <link href="https://github.com/RichardLeal/language-l2" />
  <id>urn:rprimus:github:RichardLeal:language-l2</id>
  <published>2024-02-02T13:32:44Z</published>
  <updated>2024-02-02T13:32:44Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>eIastic: prf</title>
  <author>
   <name>eIastic</name>
  </author>
  <link href="https://github.com/eIastic/prf" />
  <id>urn:rprimus:github:eIastic:prf</id>
  <published>2024-02-02T13:13:43Z</published>
  <updated>2024-02-02T13:13:43Z</updated>
  <content type="html">
   A parser and checker for propositional logic employing functional natural deduction proof techniques
  </content>
 </entry>
 <entry>
  <title>HSMF: asterisk</title>
  <author>
   <name>HSMF</name>
  </author>
  <link href="https://github.com/HSMF/asterisk" />
  <id>urn:rprimus:github:HSMF:asterisk</id>
  <published>2024-02-02T12:45:37Z</published>
  <updated>2024-02-02T12:45:37Z</updated>
  <content type="html">
   LR(1) Parser Generator
  </content>
 </entry>
 <entry>
  <title>stinkymonkeyph: advent_of_code_2023</title>
  <author>
   <name>stinkymonkeyph</name>
  </author>
  <link href="https://github.com/stinkymonkeyph/advent_of_code_2023" />
  <id>urn:rprimus:github:stinkymonkeyph:advent_of_code_2023</id>
  <published>2024-02-02T12:44:49Z</published>
  <updated>2024-02-02T12:44:49Z</updated>
  <content type="html">
   Solutions for advent of code written in Ocaml
  </content>
 </entry>
 <entry>
  <title>FRubinoC: Simple-Programming-Language-Interpreter</title>
  <author>
   <name>FRubinoC</name>
  </author>
  <link href="https://github.com/FRubinoC/Simple-Programming-Language-Interpreter" />
  <id>urn:rprimus:github:FRubinoC:Simple-Programming-Language-Interpreter</id>
  <published>2024-02-02T10:56:31Z</published>
  <updated>2024-02-02T10:56:31Z</updated>
  <content type="html">
   This project consists on the implementation of the interpreter of a simple programming language. The interpreter provided misses the lexer and parser modules, acting directly on an AST. The work has been done for the first homework of the Language Based Technology for Security Course at the Master Degree in Cybersecurity at the University of Pisa.
  </content>
 </entry>
 <entry>
  <title>Kresqle: jamal</title>
  <author>
   <name>Kresqle</name>
  </author>
  <link href="https://github.com/Kresqle/jamal" />
  <id>urn:rprimus:github:Kresqle:jamal</id>
  <published>2024-02-02T10:18:51Z</published>
  <updated>2024-02-02T10:18:51Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>tbonza: tetrad</title>
  <author>
   <name>tbonza</name>
  </author>
  <link href="https://github.com/tbonza/tetrad" />
  <id>urn:rprimus:github:tbonza:tetrad</id>
  <published>2024-02-02T08:01:18Z</published>
  <updated>2024-02-02T08:01:18Z</updated>
  <content type="html">
   wikidata formatter
  </content>
 </entry>
 <entry>
  <title>Carnoustie: FinancialCamel</title>
  <author>
   <name>Carnoustie</name>
  </author>
  <link href="https://github.com/Carnoustie/FinancialCamel" />
  <id>urn:rprimus:github:Carnoustie:FinancialCamel</id>
  <published>2024-02-02T06:17:17Z</published>
  <updated>2024-02-02T06:17:17Z</updated>
  <content type="html">
   Financial Market Simulator in OCaml
  </content>
 </entry>
 <entry>
  <title>Dcatna: cs496</title>
  <author>
   <name>Dcatna</name>
  </author>
  <link href="https://github.com/Dcatna/cs496" />
  <id>urn:rprimus:github:Dcatna:cs496</id>
  <published>2024-02-02T04:15:17Z</published>
  <updated>2024-02-02T04:15:17Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>ncitron: oframl</title>
  <author>
   <name>ncitron</name>
  </author>
  <link href="https://github.com/ncitron/oframl" />
  <id>urn:rprimus:github:ncitron:oframl</id>
  <published>2024-02-02T03:53:31Z</published>
  <updated>2024-02-02T03:53:31Z</updated>
  <content type="html">
   A framework for building Farcaster Frames in OCaml
  </content>
 </entry>
 <entry>
  <title>lhardt: SMT-Final</title>
  <author>
   <name>lhardt</name>
  </author>
  <link href="https://github.com/lhardt/SMT-Final" />
  <id>urn:rprimus:github:lhardt:SMT-Final</id>
  <published>2024-02-02T00:22:18Z</published>
  <updated>2024-02-02T00:22:18Z</updated>
  <content type="html">
   
  </content>
 </entry>
</feed>
