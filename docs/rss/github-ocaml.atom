<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<link rel="self" type="application/atom+xml" href="http://lence.net/github-ocaml.atom"/>
<id>urn:rprimus:github:newocamlrepos</id>
<updated>2022-06-24T20:20:59Z</updated>
<title type='text'>New GitHub Ocaml Repos</title>
 <entry>
  <title>AbdallahChehabi: LFSR</title>
  <author>
   <name>AbdallahChehabi</name>
  </author>
  <link href="https://github.com/AbdallahChehabi/LFSR" />
  <id>urn:rprimus:github:AbdallahChehabi:LFSR</id>
  <published>2022-06-24T20:20:59Z</published>
  <updated>2022-06-24T20:20:59Z</updated>
  <content type="html">
   Le projet consiste Ã  implanter quelques fonctions de manipulation des LFSR
  </content>
 </entry>
 <entry>
  <title>AbdallahChehabi: 8-Daims-Sudoku</title>
  <author>
   <name>AbdallahChehabi</name>
  </author>
  <link href="https://github.com/AbdallahChehabi/8-Daims-Sudoku" />
  <id>urn:rprimus:github:AbdallahChehabi:8-Daims-Sudoku</id>
  <published>2022-06-24T20:00:51Z</published>
  <updated>2022-06-24T20:00:51Z</updated>
  <content type="html">
   Lors de ce projet, jâai rÃ©alisÃ© une solution pour le problÃ¨me de 8 Dames et du Sudoku en Ocaml.
  </content>
 </entry>
 <entry>
  <title>AbdallahChehabi: Labyrinthe-en-ocaml</title>
  <author>
   <name>AbdallahChehabi</name>
  </author>
  <link href="https://github.com/AbdallahChehabi/Labyrinthe-en-ocaml" />
  <id>urn:rprimus:github:AbdallahChehabi:Labyrinthe-en-ocaml</id>
  <published>2022-06-24T19:53:29Z</published>
  <updated>2022-06-24T19:53:29Z</updated>
  <content type="html">
   Lors de ce projet, nous avons eu Ã  rÃ©aliser un labyrinthe en ocaml
  </content>
 </entry>
 <entry>
  <title>chuabingquan: ocaml-practices</title>
  <author>
   <name>chuabingquan</name>
  </author>
  <link href="https://github.com/chuabingquan/ocaml-practices" />
  <id>urn:rprimus:github:chuabingquan:ocaml-practices</id>
  <published>2022-06-24T18:34:44Z</published>
  <updated>2022-06-24T18:34:44Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>OlivierNicole: ocaml-tsan-tests</title>
  <author>
   <name>OlivierNicole</name>
  </author>
  <link href="https://github.com/OlivierNicole/ocaml-tsan-tests" />
  <id>urn:rprimus:github:OlivierNicole:ocaml-tsan-tests</id>
  <published>2022-06-24T13:36:22Z</published>
  <updated>2022-06-24T13:36:22Z</updated>
  <content type="html">
   Test suite for the ThreadSanitizer instrumentation in OCaml.
  </content>
 </entry>
 <entry>
  <title>Hakimba: Ocaml_problems</title>
  <author>
   <name>Hakimba</name>
  </author>
  <link href="https://github.com/Hakimba/Ocaml_problems" />
  <id>urn:rprimus:github:Hakimba:Ocaml_problems</id>
  <published>2022-06-24T11:39:36Z</published>
  <updated>2022-06-24T11:39:36Z</updated>
  <content type="html">
   My solutions for the ocaml.org exercises 
  </content>
 </entry>
 <entry>
  <title>SongJungHyun1004: ProgrammingLanguage</title>
  <author>
   <name>SongJungHyun1004</name>
  </author>
  <link href="https://github.com/SongJungHyun1004/ProgrammingLanguage" />
  <id>urn:rprimus:github:SongJungHyun1004:ProgrammingLanguage</id>
  <published>2022-06-24T11:28:10Z</published>
  <updated>2022-06-24T11:28:10Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>kosinw: epsilon</title>
  <author>
   <name>kosinw</name>
  </author>
  <link href="https://github.com/kosinw/epsilon" />
  <id>urn:rprimus:github:kosinw:epsilon</id>
  <published>2022-06-24T06:32:39Z</published>
  <updated>2022-06-24T06:32:39Z</updated>
  <content type="html">
   A compiler for a small, statically-typed functional programming language.
  </content>
 </entry>
 <entry>
  <title>miguel-nascimento: ocaml-lambda-calculus</title>
  <author>
   <name>miguel-nascimento</name>
  </author>
  <link href="https://github.com/miguel-nascimento/ocaml-lambda-calculus" />
  <id>urn:rprimus:github:miguel-nascimento:ocaml-lambda-calculus</id>
  <published>2022-06-24T01:56:00Z</published>
  <updated>2022-06-24T01:56:00Z</updated>
  <content type="html">
   ðª My OCaml journey to understand code
  </content>
 </entry>
 <entry>
  <title>cos326-f22: a2-starter-code</title>
  <author>
   <name>cos326-f22</name>
  </author>
  <link href="https://github.com/cos326-f22/a2-starter-code" />
  <id>urn:rprimus:github:cos326-f22:a2-starter-code</id>
  <published>2022-06-24T00:02:53Z</published>
  <updated>2022-06-24T00:02:53Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>enochpang: ledgerfmt</title>
  <author>
   <name>enochpang</name>
  </author>
  <link href="https://github.com/enochpang/ledgerfmt" />
  <id>urn:rprimus:github:enochpang:ledgerfmt</id>
  <published>2022-06-23T21:55:08Z</published>
  <updated>2022-06-23T21:55:08Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>jquepi: krb5lib</title>
  <author>
   <name>jquepi</name>
  </author>
  <link href="https://github.com/jquepi/krb5lib" />
  <id>urn:rprimus:github:jquepi:krb5lib</id>
  <published>2022-06-23T21:37:15Z</published>
  <updated>2022-06-23T21:37:15Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>cos326-f22: a3-starter-code</title>
  <author>
   <name>cos326-f22</name>
  </author>
  <link href="https://github.com/cos326-f22/a3-starter-code" />
  <id>urn:rprimus:github:cos326-f22:a3-starter-code</id>
  <published>2022-06-23T21:09:38Z</published>
  <updated>2022-06-23T21:09:38Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>lesliese: Interpreter-OCaml</title>
  <author>
   <name>lesliese</name>
  </author>
  <link href="https://github.com/lesliese/Interpreter-OCaml" />
  <id>urn:rprimus:github:lesliese:Interpreter-OCaml</id>
  <published>2022-06-23T19:54:44Z</published>
  <updated>2022-06-23T19:54:44Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>Quinterop: Ocaml-PolishProg</title>
  <author>
   <name>Quinterop</name>
  </author>
  <link href="https://github.com/Quinterop/Ocaml-PolishProg" />
  <id>urn:rprimus:github:Quinterop:Ocaml-PolishProg</id>
  <published>2022-06-23T15:39:57Z</published>
  <updated>2022-06-23T15:39:57Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>Quinterop: Ocaml-Parser-Lexer</title>
  <author>
   <name>Quinterop</name>
  </author>
  <link href="https://github.com/Quinterop/Ocaml-Parser-Lexer" />
  <id>urn:rprimus:github:Quinterop:Ocaml-Parser-Lexer</id>
  <published>2022-06-23T15:38:23Z</published>
  <updated>2022-06-23T15:38:23Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>kuruczgy: sci-utils</title>
  <author>
   <name>kuruczgy</name>
  </author>
  <link href="https://github.com/kuruczgy/sci-utils" />
  <id>urn:rprimus:github:kuruczgy:sci-utils</id>
  <published>2022-06-23T14:39:10Z</published>
  <updated>2022-06-23T14:39:10Z</updated>
  <content type="html">
   Utilities for scientific calculations in OCaml
  </content>
 </entry>
 <entry>
  <title>kazuhi-ra: hello-ocaml</title>
  <author>
   <name>kazuhi-ra</name>
  </author>
  <link href="https://github.com/kazuhi-ra/hello-ocaml" />
  <id>urn:rprimus:github:kazuhi-ra:hello-ocaml</id>
  <published>2022-06-23T12:57:20Z</published>
  <updated>2022-06-23T12:57:20Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>kayceesrk: ocaml_runtime_stats</title>
  <author>
   <name>kayceesrk</name>
  </author>
  <link href="https://github.com/kayceesrk/ocaml_runtime_stats" />
  <id>urn:rprimus:github:kayceesrk:ocaml_runtime_stats</id>
  <published>2022-06-23T09:30:17Z</published>
  <updated>2022-06-23T09:30:17Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>Gui28F: Off-the-beaten-path</title>
  <author>
   <name>Gui28F</name>
  </author>
  <link href="https://github.com/Gui28F/Off-the-beaten-path" />
  <id>urn:rprimus:github:Gui28F:Off-the-beaten-path</id>
  <published>2022-06-23T08:34:16Z</published>
  <updated>2022-06-23T08:34:16Z</updated>
  <content type="html">
   When we look at a network of lines, for example at a complex road map with winding lines and crossroads (intersections) all over the place, we can ask ourselves how best to deal with such a complex entity that has no easily identifiable structure. One technique that seems valid is to start by decomposing a complex path into a collection of linear segments where no intersection occurs. Then, we try to solve our hardest problems using the new representation.
  </content>
 </entry>
 <entry>
  <title>kayceesrk: hdr_histogram_ocaml</title>
  <author>
   <name>kayceesrk</name>
  </author>
  <link href="https://github.com/kayceesrk/hdr_histogram_ocaml" />
  <id>urn:rprimus:github:kayceesrk:hdr_histogram_ocaml</id>
  <published>2022-06-23T07:12:59Z</published>
  <updated>2022-06-23T07:12:59Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>GaucherDeC: infosec-ecomp</title>
  <author>
   <name>GaucherDeC</name>
  </author>
  <link href="https://github.com/GaucherDeC/infosec-ecomp" />
  <id>urn:rprimus:github:GaucherDeC:infosec-ecomp</id>
  <published>2022-06-23T06:47:01Z</published>
  <updated>2022-06-23T06:47:01Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>nogw: yupml</title>
  <author>
   <name>nogw</name>
  </author>
  <link href="https://github.com/nogw/yupml" />
  <id>urn:rprimus:github:nogw:yupml</id>
  <published>2022-06-23T02:05:48Z</published>
  <updated>2022-06-23T02:05:48Z</updated>
  <content type="html">
   [in progress] schema validation to use with yojson
  </content>
 </entry>
 <entry>
  <title>infobsmi: bsmi_ocaml</title>
  <author>
   <name>infobsmi</name>
  </author>
  <link href="https://github.com/infobsmi/bsmi_ocaml" />
  <id>urn:rprimus:github:infobsmi:bsmi_ocaml</id>
  <published>2022-06-23T01:43:05Z</published>
  <updated>2022-06-23T01:43:05Z</updated>
  <content type="html">
   bsmi ocaml lib
  </content>
 </entry>
</feed>
