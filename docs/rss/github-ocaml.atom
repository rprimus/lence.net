<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<link rel="self" type="application/atom+xml" href="http://lence.net/github-ocaml.atom"/>
<id>urn:rprimus:github:newocamlrepos</id>
<updated>2021-12-08T07:14:26Z</updated>
<title type='text'>New GitHub Ocaml Repos</title>
 <entry>
  <title>Gopiandcode: SWIPL-OCaml</title>
  <author>
   <name>Gopiandcode</name>
  </author>
  <link href="https://github.com/Gopiandcode/SWIPL-OCaml" />
  <id>urn:rprimus:github:Gopiandcode:SWIPL-OCaml</id>
  <published>2021-12-08T07:14:26Z</published>
  <updated>2021-12-08T07:14:26Z</updated>
  <content type="html">
   SWI-Prolog Bindings for OCaml: https://gopiandcode.github.io/SWIPL-OCaml/swipl/index.html
  </content>
 </entry>
 <entry>
  <title>prg-titech: pmincaml</title>
  <author>
   <name>prg-titech</name>
  </author>
  <link href="https://github.com/prg-titech/pmincaml" />
  <id>urn:rprimus:github:prg-titech:pmincaml</id>
  <published>2021-12-08T05:07:29Z</published>
  <updated>2021-12-08T05:07:29Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>Bardakor: TP-Ocaml</title>
  <author>
   <name>Bardakor</name>
  </author>
  <link href="https://github.com/Bardakor/TP-Ocaml" />
  <id>urn:rprimus:github:Bardakor:TP-Ocaml</id>
  <published>2021-12-08T03:24:04Z</published>
  <updated>2021-12-08T03:24:04Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>Yankas: lfpreview</title>
  <author>
   <name>Yankas</name>
  </author>
  <link href="https://github.com/Yankas/lfpreview" />
  <id>urn:rprimus:github:Yankas:lfpreview</id>
  <published>2021-12-07T22:26:44Z</published>
  <updated>2021-12-07T22:26:44Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>pNre: advent-of-code-21</title>
  <author>
   <name>pNre</name>
  </author>
  <link href="https://github.com/pNre/advent-of-code-21" />
  <id>urn:rprimus:github:pNre:advent-of-code-21</id>
  <published>2021-12-07T21:40:57Z</published>
  <updated>2021-12-07T21:40:57Z</updated>
  <content type="html">
   ðª
  </content>
 </entry>
 <entry>
  <title>drjdn: p5scm</title>
  <author>
   <name>drjdn</name>
  </author>
  <link href="https://github.com/drjdn/p5scm" />
  <id>urn:rprimus:github:drjdn:p5scm</id>
  <published>2021-12-07T18:14:22Z</published>
  <updated>2021-12-07T18:14:22Z</updated>
  <content type="html">
   This a simple scheme implementation using pa_schemer from camlp5
  </content>
 </entry>
 <entry>
  <title>andreaubbiali: ocaml-exercise</title>
  <author>
   <name>andreaubbiali</name>
  </author>
  <link href="https://github.com/andreaubbiali/ocaml-exercise" />
  <id>urn:rprimus:github:andreaubbiali:ocaml-exercise</id>
  <published>2021-12-07T17:19:03Z</published>
  <updated>2021-12-07T17:19:03Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>pyr: advent2021</title>
  <author>
   <name>pyr</name>
  </author>
  <link href="https://github.com/pyr/advent2021" />
  <id>urn:rprimus:github:pyr:advent2021</id>
  <published>2021-12-07T11:47:17Z</published>
  <updated>2021-12-07T11:47:17Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>tramhnt99: dynamic-collect-scilla</title>
  <author>
   <name>tramhnt99</name>
  </author>
  <link href="https://github.com/tramhnt99/dynamic-collect-scilla" />
  <id>urn:rprimus:github:tramhnt99:dynamic-collect-scilla</id>
  <published>2021-12-07T11:36:38Z</published>
  <updated>2021-12-07T11:36:38Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>lmdexpr: ocaml_jvm</title>
  <author>
   <name>lmdexpr</name>
  </author>
  <link href="https://github.com/lmdexpr/ocaml_jvm" />
  <id>urn:rprimus:github:lmdexpr:ocaml_jvm</id>
  <published>2021-12-07T03:42:49Z</published>
  <updated>2021-12-07T03:42:49Z</updated>
  <content type="html">
   for studying jvm
  </content>
 </entry>
 <entry>
  <title>mikolajszym00: wpf_origami</title>
  <author>
   <name>mikolajszym00</name>
  </author>
  <link href="https://github.com/mikolajszym00/wpf_origami" />
  <id>urn:rprimus:github:mikolajszym00:wpf_origami</id>
  <published>2021-12-06T20:47:06Z</published>
  <updated>2021-12-06T20:47:06Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>fsajjads: NFA_TO_DFA</title>
  <author>
   <name>fsajjads</name>
  </author>
  <link href="https://github.com/fsajjads/NFA_TO_DFA" />
  <id>urn:rprimus:github:fsajjads:NFA_TO_DFA</id>
  <published>2021-12-06T20:00:39Z</published>
  <updated>2021-12-06T20:00:39Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>PureFunctor: ocaml-jsoo-parse</title>
  <author>
   <name>PureFunctor</name>
  </author>
  <link href="https://github.com/PureFunctor/ocaml-jsoo-parse" />
  <id>urn:rprimus:github:PureFunctor:ocaml-jsoo-parse</id>
  <published>2021-12-06T13:45:55Z</published>
  <updated>2021-12-06T13:45:55Z</updated>
  <content type="html">
   An example of a menhir/ocamllex-based parser compiled to JavaScript using js_of_ocaml.
  </content>
 </entry>
 <entry>
  <title>HugoGGuerrier: CAML_EGG</title>
  <author>
   <name>HugoGGuerrier</name>
  </author>
  <link href="https://github.com/HugoGGuerrier/CAML_EGG" />
  <id>urn:rprimus:github:HugoGGuerrier:CAML_EGG</id>
  <published>2021-12-06T10:48:12Z</published>
  <updated>2021-12-06T10:48:12Z</updated>
  <content type="html">
   An OCaml EGG implementation
  </content>
 </entry>
 <entry>
  <title>TyOverby: pig-tail</title>
  <author>
   <name>TyOverby</name>
  </author>
  <link href="https://github.com/TyOverby/pig-tail" />
  <id>urn:rprimus:github:TyOverby:pig-tail</id>
  <published>2021-12-06T01:19:36Z</published>
  <updated>2021-12-06T01:19:36Z</updated>
  <content type="html">
   
  </content>
 </entry>
</feed>
