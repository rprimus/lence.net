<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<link rel="self" type="application/atom+xml" href="http://lence.net/github-ocaml.atom"/>
<id>urn:rprimus:github:newocamlrepos</id>
<updated>2023-02-12T08:19:43Z</updated>
<title type='text'>New GitHub Ocaml Repos</title>
 <entry>
  <title>moudyellaz: elgamal</title>
  <author>
   <name>moudyellaz</name>
  </author>
  <link href="https://github.com/moudyellaz/elgamal" />
  <id>urn:rprimus:github:moudyellaz:elgamal</id>
  <published>2023-02-12T08:19:43Z</published>
  <updated>2023-02-12T08:19:43Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>jvoucsb: cs162-hw3</title>
  <author>
   <name>jvoucsb</name>
  </author>
  <link href="https://github.com/jvoucsb/cs162-hw3" />
  <id>urn:rprimus:github:jvoucsb:cs162-hw3</id>
  <published>2023-02-11T19:26:59Z</published>
  <updated>2023-02-11T19:26:59Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>CodiePP: ml-grpc-examples</title>
  <author>
   <name>CodiePP</name>
  </author>
  <link href="https://github.com/CodiePP/ml-grpc-examples" />
  <id>urn:rprimus:github:CodiePP:ml-grpc-examples</id>
  <published>2023-02-11T18:47:39Z</published>
  <updated>2023-02-11T18:47:39Z</updated>
  <content type="html">
   testing and evaluating gRPC in OCaml
  </content>
 </entry>
 <entry>
  <title>arthurPalla: OGameL</title>
  <author>
   <name>arthurPalla</name>
  </author>
  <link href="https://github.com/arthurPalla/OGameL" />
  <id>urn:rprimus:github:arthurPalla:OGameL</id>
  <published>2023-02-11T18:22:53Z</published>
  <updated>2023-02-11T18:22:53Z</updated>
  <content type="html">
   Jeux en deux dimension pour un projet de vaccances MP2I
  </content>
 </entry>
 <entry>
  <title>DarioNonis: Compiler</title>
  <author>
   <name>DarioNonis</name>
  </author>
  <link href="https://github.com/DarioNonis/Compiler" />
  <id>urn:rprimus:github:DarioNonis:Compiler</id>
  <published>2023-02-11T11:32:50Z</published>
  <updated>2023-02-11T11:32:50Z</updated>
  <content type="html">
   A Compiler for a Java-like language to an Assembly-like language.
  </content>
 </entry>
 <entry>
  <title>Kakadu: dune-test-rel-dir</title>
  <author>
   <name>Kakadu</name>
  </author>
  <link href="https://github.com/Kakadu/dune-test-rel-dir" />
  <id>urn:rprimus:github:Kakadu:dune-test-rel-dir</id>
  <published>2023-02-11T10:37:35Z</published>
  <updated>2023-02-11T10:37:35Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>Elfahor: aslim</title>
  <author>
   <name>Elfahor</name>
  </author>
  <link href="https://github.com/Elfahor/aslim" />
  <id>urn:rprimus:github:Elfahor:aslim</id>
  <published>2023-02-11T09:34:53Z</published>
  <updated>2023-02-11T09:34:53Z</updated>
  <content type="html">
   A Shitty Language I Made
  </content>
 </entry>
 <entry>
  <title>ProgramingIsTheFuture: TypedLisp</title>
  <author>
   <name>ProgramingIsTheFuture</name>
  </author>
  <link href="https://github.com/ProgramingIsTheFuture/TypedLisp" />
  <id>urn:rprimus:github:ProgramingIsTheFuture:TypedLisp</id>
  <published>2023-02-11T01:10:53Z</published>
  <updated>2023-02-11T01:10:53Z</updated>
  <content type="html">
   Lisp but typed and it compiles to LLVM
  </content>
 </entry>
 <entry>
  <title>clef-men: parabstr</title>
  <author>
   <name>clef-men</name>
  </author>
  <link href="https://github.com/clef-men/parabstr" />
  <id>urn:rprimus:github:clef-men:parabstr</id>
  <published>2023-02-10T21:56:48Z</published>
  <updated>2023-02-10T21:56:48Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>n-osborne: gospel-odoc-example</title>
  <author>
   <name>n-osborne</name>
  </author>
  <link href="https://github.com/n-osborne/gospel-odoc-example" />
  <id>urn:rprimus:github:n-osborne:gospel-odoc-example</id>
  <published>2023-02-10T17:22:12Z</published>
  <updated>2023-02-10T17:22:12Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>coco33920: ocaml-while</title>
  <author>
   <name>coco33920</name>
  </author>
  <link href="https://github.com/coco33920/ocaml-while" />
  <id>urn:rprimus:github:coco33920:ocaml-while</id>
  <published>2023-02-10T11:05:17Z</published>
  <updated>2023-02-10T11:05:17Z</updated>
  <content type="html">
   OCaml implementation of the While Programming Language (CAL UnivRennes L2 Info S4)
  </content>
 </entry>
 <entry>
  <title>AiglonDore: ackermann</title>
  <author>
   <name>AiglonDore</name>
  </author>
  <link href="https://github.com/AiglonDore/ackermann" />
  <id>urn:rprimus:github:AiglonDore:ackermann</id>
  <published>2023-02-10T09:29:55Z</published>
  <updated>2023-02-10T09:29:55Z</updated>
  <content type="html">
   Computes the Ackermann function
  </content>
 </entry>
 <entry>
  <title>wendyln: Shogi</title>
  <author>
   <name>wendyln</name>
  </author>
  <link href="https://github.com/wendyln/Shogi" />
  <id>urn:rprimus:github:wendyln:Shogi</id>
  <published>2023-02-10T00:33:21Z</published>
  <updated>2023-02-10T00:33:21Z</updated>
  <content type="html">
   Shogi in Ocaml
  </content>
 </entry>
</feed>
