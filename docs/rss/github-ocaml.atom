<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<link rel="self" type="application/atom+xml" href="http://lence.net/github-ocaml.atom"/>
<id>urn:rprimus:github:newocamlrepos</id>
<updated>2023-07-17T08:01:55Z</updated>
<title type='text'>New GitHub Ocaml Repos</title>
 <entry>
  <title>ozmdm: compiler-oz-tomer</title>
  <author>
   <name>ozmdm</name>
  </author>
  <link href="https://github.com/ozmdm/compiler-oz-tomer" />
  <id>urn:rprimus:github:ozmdm:compiler-oz-tomer</id>
  <published>2023-07-17T08:01:55Z</published>
  <updated>2023-07-17T08:01:55Z</updated>
  <content type="html">
   compiler from Scheme to Assembly written in Ocaml
  </content>
 </entry>
 <entry>
  <title>henri1i: lambda-calculus</title>
  <author>
   <name>henri1i</name>
  </author>
  <link href="https://github.com/henri1i/lambda-calculus" />
  <id>urn:rprimus:github:henri1i:lambda-calculus</id>
  <published>2023-07-16T23:16:02Z</published>
  <updated>2023-07-16T23:16:02Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>7ze: ocaml-programming-exercises</title>
  <author>
   <name>7ze</name>
  </author>
  <link href="https://github.com/7ze/ocaml-programming-exercises" />
  <id>urn:rprimus:github:7ze:ocaml-programming-exercises</id>
  <published>2023-07-16T22:18:07Z</published>
  <updated>2023-07-16T22:18:07Z</updated>
  <content type="html">
   Solutions to the exercises given in OCaml programming book by Prof. Michael R. Clarkson
  </content>
 </entry>
 <entry>
  <title>wawszczakd: WPF-tasks</title>
  <author>
   <name>wawszczakd</name>
  </author>
  <link href="https://github.com/wawszczakd/WPF-tasks" />
  <id>urn:rprimus:github:wawszczakd:WPF-tasks</id>
  <published>2023-07-16T20:44:49Z</published>
  <updated>2023-07-16T20:44:49Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>dparker2: ocaml_advent_2022</title>
  <author>
   <name>dparker2</name>
  </author>
  <link href="https://github.com/dparker2/ocaml_advent_2022" />
  <id>urn:rprimus:github:dparker2:ocaml_advent_2022</id>
  <published>2023-07-16T19:28:35Z</published>
  <updated>2023-07-16T19:28:35Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>patricoferris: hirmin</title>
  <author>
   <name>patricoferris</name>
  </author>
  <link href="https://github.com/patricoferris/hirmin" />
  <id>urn:rprimus:github:patricoferris:hirmin</id>
  <published>2023-07-16T11:55:53Z</published>
  <updated>2023-07-16T11:55:53Z</updated>
  <content type="html">
   Somewhat heterogeneous Irmin stores
  </content>
 </entry>
 <entry>
  <title>david-engelmann: arangodb</title>
  <author>
   <name>david-engelmann</name>
  </author>
  <link href="https://github.com/david-engelmann/arangodb" />
  <id>urn:rprimus:github:david-engelmann:arangodb</id>
  <published>2023-07-16T07:35:33Z</published>
  <updated>2023-07-16T07:35:33Z</updated>
  <content type="html">
   OCaml-based Arangodb tools
  </content>
 </entry>
 <entry>
  <title>abradley2: OCycl</title>
  <author>
   <name>abradley2</name>
  </author>
  <link href="https://github.com/abradley2/OCycl" />
  <id>urn:rprimus:github:abradley2:OCycl</id>
  <published>2023-07-16T00:26:51Z</published>
  <updated>2023-07-16T00:26:51Z</updated>
  <content type="html">
   Melange wrapper to create Cycle.js apps in ReasonML and OCaml
  </content>
 </entry>
 <entry>
  <title>slamko: ocadl</title>
  <author>
   <name>slamko</name>
  </author>
  <link href="https://github.com/slamko/ocadl" />
  <id>urn:rprimus:github:slamko:ocadl</id>
  <published>2023-07-15T23:52:39Z</published>
  <updated>2023-07-15T23:52:39Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>vthemelis: micrograd</title>
  <author>
   <name>vthemelis</name>
  </author>
  <link href="https://github.com/vthemelis/micrograd" />
  <id>urn:rprimus:github:vthemelis:micrograd</id>
  <published>2023-07-15T23:34:11Z</published>
  <updated>2023-07-15T23:34:11Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>srshbhryn: sandpit</title>
  <author>
   <name>srshbhryn</name>
  </author>
  <link href="https://github.com/srshbhryn/sandpit" />
  <id>urn:rprimus:github:srshbhryn:sandpit</id>
  <published>2023-07-15T18:25:30Z</published>
  <updated>2023-07-15T18:25:30Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>brandonspark: ppx_demo</title>
  <author>
   <name>brandonspark</name>
  </author>
  <link href="https://github.com/brandonspark/ppx_demo" />
  <id>urn:rprimus:github:brandonspark:ppx_demo</id>
  <published>2023-07-15T18:09:59Z</published>
  <updated>2023-07-15T18:09:59Z</updated>
  <content type="html">
   A demo repository to show off how to build an OCaml program from scratch with `ppx_deriving`.
  </content>
 </entry>
 <entry>
  <title>smercer10: ocrypt</title>
  <author>
   <name>smercer10</name>
  </author>
  <link href="https://github.com/smercer10/ocrypt" />
  <id>urn:rprimus:github:smercer10:ocrypt</id>
  <published>2023-07-15T17:50:59Z</published>
  <updated>2023-07-15T17:50:59Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>Paul-Passeron: OcamlLexer</title>
  <author>
   <name>Paul-Passeron</name>
  </author>
  <link href="https://github.com/Paul-Passeron/OcamlLexer" />
  <id>urn:rprimus:github:Paul-Passeron:OcamlLexer</id>
  <published>2023-07-15T13:20:52Z</published>
  <updated>2023-07-15T13:20:52Z</updated>
  <content type="html">
   Simple lexer made in OCaml for a custom interpreted programming language.
  </content>
 </entry>
 <entry>
  <title>Wackyator: monoparser</title>
  <author>
   <name>Wackyator</name>
  </author>
  <link href="https://github.com/Wackyator/monoparser" />
  <id>urn:rprimus:github:Wackyator:monoparser</id>
  <published>2023-07-15T11:38:06Z</published>
  <updated>2023-07-15T11:38:06Z</updated>
  <content type="html">
   Monadic Parser Combinator
  </content>
 </entry>
 <entry>
  <title>dannypsnl: lisboot</title>
  <author>
   <name>dannypsnl</name>
  </author>
  <link href="https://github.com/dannypsnl/lisboot" />
  <id>urn:rprimus:github:dannypsnl:lisboot</id>
  <published>2023-07-15T08:15:06Z</published>
  <updated>2023-07-15T08:15:06Z</updated>
  <content type="html">
   How to boot compiled scripting language
  </content>
 </entry>
 <entry>
  <title>riamst: interpreter</title>
  <author>
   <name>riamst</name>
  </author>
  <link href="https://github.com/riamst/interpreter" />
  <id>urn:rprimus:github:riamst:interpreter</id>
  <published>2023-07-15T01:25:07Z</published>
  <updated>2023-07-15T01:25:07Z</updated>
  <content type="html">
   Interpreter for a programming language written in OCaml. Following &quot;Writing an interpreter in Go (2017) by Thorsten Ball&quot;
  </content>
 </entry>
</feed>
