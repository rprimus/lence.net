<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<link rel="self" type="application/atom+xml" href="http://lence.net/github-ocaml.atom"/>
<id>urn:rprimus:github:newocamlrepos</id>
<updated>2023-12-29T10:18:57Z</updated>
<title type='text'>New GitHub Ocaml Repos</title>
 <entry>
  <title>remikeat: rtree</title>
  <author>
   <name>remikeat</name>
  </author>
  <link href="https://github.com/remikeat/rtree" />
  <id>urn:rprimus:github:remikeat:rtree</id>
  <published>2023-12-29T10:18:57Z</published>
  <updated>2023-12-29T10:18:57Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>jhubaum: trout</title>
  <author>
   <name>jhubaum</name>
  </author>
  <link href="https://github.com/jhubaum/trout" />
  <id>urn:rprimus:github:jhubaum:trout</id>
  <published>2023-12-29T10:01:42Z</published>
  <updated>2023-12-29T10:01:42Z</updated>
  <content type="html">
   A programming language build around meta programming
  </content>
 </entry>
 <entry>
  <title>ofrighil: olox</title>
  <author>
   <name>ofrighil</name>
  </author>
  <link href="https://github.com/ofrighil/olox" />
  <id>urn:rprimus:github:ofrighil:olox</id>
  <published>2023-12-29T03:20:19Z</published>
  <updated>2023-12-29T03:20:19Z</updated>
  <content type="html">
   An OCaml implementation of the tree-walk interpreter from https://craftinginterpreters.com/
  </content>
 </entry>
 <entry>
  <title>m-spitfire: tapl</title>
  <author>
   <name>m-spitfire</name>
  </author>
  <link href="https://github.com/m-spitfire/tapl" />
  <id>urn:rprimus:github:m-spitfire:tapl</id>
  <published>2023-12-29T03:04:07Z</published>
  <updated>2023-12-29T03:04:07Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>addykan: monadicParsing</title>
  <author>
   <name>addykan</name>
  </author>
  <link href="https://github.com/addykan/monadicParsing" />
  <id>urn:rprimus:github:addykan:monadicParsing</id>
  <published>2023-12-28T20:50:25Z</published>
  <updated>2023-12-28T20:50:25Z</updated>
  <content type="html">
   Explorations into monadic parsing with ocaml
  </content>
 </entry>
 <entry>
  <title>BirnadinErick: 99-ocaml-problems</title>
  <author>
   <name>BirnadinErick</name>
  </author>
  <link href="https://github.com/BirnadinErick/99-ocaml-problems" />
  <id>urn:rprimus:github:BirnadinErick:99-ocaml-problems</id>
  <published>2023-12-28T16:17:27Z</published>
  <updated>2023-12-28T16:17:27Z</updated>
  <content type="html">
   my attempt to 99 lisp problems in ocaml (not exhaustive and extras included)
  </content>
 </entry>
 <entry>
  <title>idoburstein: OCaml-Interpreter</title>
  <author>
   <name>idoburstein</name>
  </author>
  <link href="https://github.com/idoburstein/OCaml-Interpreter" />
  <id>urn:rprimus:github:idoburstein:OCaml-Interpreter</id>
  <published>2023-12-28T13:40:46Z</published>
  <updated>2023-12-28T13:40:46Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>elicatza: camlsnake</title>
  <author>
   <name>elicatza</name>
  </author>
  <link href="https://github.com/elicatza/camlsnake" />
  <id>urn:rprimus:github:elicatza:camlsnake</id>
  <published>2023-12-28T12:00:49Z</published>
  <updated>2023-12-28T12:00:49Z</updated>
  <content type="html">
   Snake in Ocaml with C interop using Raylib
  </content>
 </entry>
 <entry>
  <title>Axot017: validator</title>
  <author>
   <name>Axot017</name>
  </author>
  <link href="https://github.com/Axot017/validator" />
  <id>urn:rprimus:github:Axot017:validator</id>
  <published>2023-12-28T11:44:11Z</published>
  <updated>2023-12-28T11:44:11Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>rawburt: rl</title>
  <author>
   <name>rawburt</name>
  </author>
  <link href="https://github.com/rawburt/rl" />
  <id>urn:rprimus:github:rawburt:rl</id>
  <published>2023-12-28T09:37:09Z</published>
  <updated>2023-12-28T09:37:09Z</updated>
  <content type="html">
   robert&#039;s language
  </content>
 </entry>
 <entry>
  <title>raaidrt: parser</title>
  <author>
   <name>raaidrt</name>
  </author>
  <link href="https://github.com/raaidrt/parser" />
  <id>urn:rprimus:github:raaidrt:parser</id>
  <published>2023-12-28T07:45:43Z</published>
  <updated>2023-12-28T07:45:43Z</updated>
  <content type="html">
   A monadic parser combinator
  </content>
 </entry>
 <entry>
  <title>bmusuko: aoc2015</title>
  <author>
   <name>bmusuko</name>
  </author>
  <link href="https://github.com/bmusuko/aoc2015" />
  <id>urn:rprimus:github:bmusuko:aoc2015</id>
  <published>2023-12-28T07:03:36Z</published>
  <updated>2023-12-28T07:03:36Z</updated>
  <content type="html">
   my attempt to learn ocaml
  </content>
 </entry>
 <entry>
  <title>steffenhaug: learning-llvm</title>
  <author>
   <name>steffenhaug</name>
  </author>
  <link href="https://github.com/steffenhaug/learning-llvm" />
  <id>urn:rprimus:github:steffenhaug:learning-llvm</id>
  <published>2023-12-28T01:03:22Z</published>
  <updated>2023-12-28T01:03:22Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>nathanfarlow: simple-ocaml-ctypes-example</title>
  <author>
   <name>nathanfarlow</name>
  </author>
  <link href="https://github.com/nathanfarlow/simple-ocaml-ctypes-example" />
  <id>urn:rprimus:github:nathanfarlow:simple-ocaml-ctypes-example</id>
  <published>2023-12-28T00:49:11Z</published>
  <updated>2023-12-28T00:49:11Z</updated>
  <content type="html">
   A simple example of how to use ocaml ctypes with a vendored library
  </content>
 </entry>
 <entry>
  <title>thetunr: ofishl</title>
  <author>
   <name>thetunr</name>
  </author>
  <link href="https://github.com/thetunr/ofishl" />
  <id>urn:rprimus:github:thetunr:ofishl</id>
  <published>2023-12-27T16:19:39Z</published>
  <updated>2023-12-27T16:19:39Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>DexerMatters: Descript-in-OCaml</title>
  <author>
   <name>DexerMatters</name>
  </author>
  <link href="https://github.com/DexerMatters/Descript-in-OCaml" />
  <id>urn:rprimus:github:DexerMatters:Descript-in-OCaml</id>
  <published>2023-12-27T15:17:19Z</published>
  <updated>2023-12-27T15:17:19Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>SamSamV: Mini_ML</title>
  <author>
   <name>SamSamV</name>
  </author>
  <link href="https://github.com/SamSamV/Mini_ML" />
  <id>urn:rprimus:github:SamSamV:Mini_ML</id>
  <published>2023-12-27T10:22:44Z</published>
  <updated>2023-12-27T10:22:44Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>davish: org2md</title>
  <author>
   <name>davish</name>
  </author>
  <link href="https://github.com/davish/org2md" />
  <id>urn:rprimus:github:davish:org2md</id>
  <published>2023-12-27T00:40:06Z</published>
  <updated>2023-12-27T00:40:06Z</updated>
  <content type="html">
   Parser for a subset of org-mode syntax into github-flavored markdown.
  </content>
 </entry>
 <entry>
  <title>apesteguia: Oranger</title>
  <author>
   <name>apesteguia</name>
  </author>
  <link href="https://github.com/apesteguia/Oranger" />
  <id>urn:rprimus:github:apesteguia:Oranger</id>
  <published>2023-12-27T00:30:00Z</published>
  <updated>2023-12-27T00:30:00Z</updated>
  <content type="html">
   Terminal file viewer written in OCaml and inspired by ranger
  </content>
 </entry>
</feed>
