<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<link rel="self" type="application/atom+xml" href="http://lence.net/github-ocaml.atom"/>
<id>urn:rprimus:github:newocamlrepos</id>
<updated>2024-04-12T20:51:23Z</updated>
<title type='text'>New GitHub Ocaml Repos</title>
 <entry>
  <title>pat227: runn</title>
  <author>
   <name>pat227</name>
  </author>
  <link href="https://github.com/pat227/runn" />
  <id>urn:rprimus:github:pat227:runn</id>
  <published>2024-04-12T20:51:23Z</published>
  <updated>2024-04-12T20:51:23Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>Julien-Glorian: lambda-calculus-interpreter</title>
  <author>
   <name>Julien-Glorian</name>
  </author>
  <link href="https://github.com/Julien-Glorian/lambda-calculus-interpreter" />
  <id>urn:rprimus:github:Julien-Glorian:lambda-calculus-interpreter</id>
  <published>2024-04-12T11:42:44Z</published>
  <updated>2024-04-12T11:42:44Z</updated>
  <content type="html">
   This repository was made to publish my code on a lambda-calculus interpreter.
  </content>
 </entry>
 <entry>
  <title>toyboot4e: coml</title>
  <author>
   <name>toyboot4e</name>
  </author>
  <link href="https://github.com/toyboot4e/coml" />
  <id>urn:rprimus:github:toyboot4e:coml</id>
  <published>2024-04-12T10:20:29Z</published>
  <updated>2024-04-12T10:20:29Z</updated>
  <content type="html">
   Competitive programming in OCaml?
  </content>
 </entry>
 <entry>
  <title>Quatton: fl-2024</title>
  <author>
   <name>Quatton</name>
  </author>
  <link href="https://github.com/Quatton/fl-2024" />
  <id>urn:rprimus:github:Quatton:fl-2024</id>
  <published>2024-04-12T10:00:13Z</published>
  <updated>2024-04-12T10:00:13Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>codex-semantics-library: patricia-tree</title>
  <author>
   <name>codex-semantics-library</name>
  </author>
  <link href="https://github.com/codex-semantics-library/patricia-tree" />
  <id>urn:rprimus:github:codex-semantics-library:patricia-tree</id>
  <published>2024-04-12T07:57:12Z</published>
  <updated>2024-04-12T07:57:12Z</updated>
  <content type="html">
   Patricia Tree data structure in OCaml for maps and sets, supports generic (GADT) keys
  </content>
 </entry>
 <entry>
  <title>TheSpyder: rescript-atdgen-codec-runtime</title>
  <author>
   <name>TheSpyder</name>
  </author>
  <link href="https://github.com/TheSpyder/rescript-atdgen-codec-runtime" />
  <id>urn:rprimus:github:TheSpyder:rescript-atdgen-codec-runtime</id>
  <published>2024-04-12T05:16:57Z</published>
  <updated>2024-04-12T05:16:57Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>kimn176: AP2</title>
  <author>
   <name>kimn176</name>
  </author>
  <link href="https://github.com/kimn176/AP2" />
  <id>urn:rprimus:github:kimn176:AP2</id>
  <published>2024-04-11T22:54:21Z</published>
  <updated>2024-04-11T22:54:21Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>kimn176: AP3</title>
  <author>
   <name>kimn176</name>
  </author>
  <link href="https://github.com/kimn176/AP3" />
  <id>urn:rprimus:github:kimn176:AP3</id>
  <published>2024-04-11T22:40:53Z</published>
  <updated>2024-04-11T22:40:53Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>richard-zhang: eio-little-book-about-semaphores</title>
  <author>
   <name>richard-zhang</name>
  </author>
  <link href="https://github.com/richard-zhang/eio-little-book-about-semaphores" />
  <id>urn:rprimus:github:richard-zhang:eio-little-book-about-semaphores</id>
  <published>2024-04-11T20:58:45Z</published>
  <updated>2024-04-11T20:58:45Z</updated>
  <content type="html">
   Puzzles in little-book-about-semaphores using ocaml EIO
  </content>
 </entry>
 <entry>
  <title>lcmachado16: LinguagemTrianguloQuadrado</title>
  <author>
   <name>lcmachado16</name>
  </author>
  <link href="https://github.com/lcmachado16/LinguagemTrianguloQuadrado" />
  <id>urn:rprimus:github:lcmachado16:LinguagemTrianguloQuadrado</id>
  <published>2024-04-11T16:31:05Z</published>
  <updated>2024-04-11T16:31:05Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>muqiuhan: pretty_fsharp</title>
  <author>
   <name>muqiuhan</name>
  </author>
  <link href="https://github.com/muqiuhan/pretty_fsharp" />
  <id>urn:rprimus:github:muqiuhan:pretty_fsharp</id>
  <published>2024-04-11T14:40:38Z</published>
  <updated>2024-04-11T14:40:38Z</updated>
  <content type="html">
   Improving F# compilation output
  </content>
 </entry>
 <entry>
  <title>Karnaj: dkpltact</title>
  <author>
   <name>Karnaj</name>
  </author>
  <link href="https://github.com/Karnaj/dkpltact" />
  <id>urn:rprimus:github:Karnaj:dkpltact</id>
  <published>2024-04-11T12:16:08Z</published>
  <updated>2024-04-11T12:16:08Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>EovE7Kj: unikernel-z</title>
  <author>
   <name>EovE7Kj</name>
  </author>
  <link href="https://github.com/EovE7Kj/unikernel-z" />
  <id>urn:rprimus:github:EovE7Kj:unikernel-z</id>
  <published>2024-04-11T11:37:56Z</published>
  <updated>2024-04-11T11:37:56Z</updated>
  <content type="html">
   unikernel for NoM
  </content>
 </entry>
 <entry>
  <title>WOOYOUNGJAE: FunctionalProgramming</title>
  <author>
   <name>WOOYOUNGJAE</name>
  </author>
  <link href="https://github.com/WOOYOUNGJAE/FunctionalProgramming" />
  <id>urn:rprimus:github:WOOYOUNGJAE:FunctionalProgramming</id>
  <published>2024-04-11T10:28:38Z</published>
  <updated>2024-04-11T10:28:38Z</updated>
  <content type="html">
   Ocaml and F#
  </content>
 </entry>
 <entry>
  <title>MatiLeBG: RattrapagesPF</title>
  <author>
   <name>MatiLeBG</name>
  </author>
  <link href="https://github.com/MatiLeBG/RattrapagesPF" />
  <id>urn:rprimus:github:MatiLeBG:RattrapagesPF</id>
  <published>2024-04-11T07:05:24Z</published>
  <updated>2024-04-11T07:05:24Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>lylahub: CS131HW1</title>
  <author>
   <name>lylahub</name>
  </author>
  <link href="https://github.com/lylahub/CS131HW1" />
  <id>urn:rprimus:github:lylahub:CS131HW1</id>
  <published>2024-04-11T05:43:36Z</published>
  <updated>2024-04-11T05:43:36Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>riot-ml: bytestring</title>
  <author>
   <name>riot-ml</name>
  </author>
  <link href="https://github.com/riot-ml/bytestring" />
  <id>urn:rprimus:github:riot-ml:bytestring</id>
  <published>2024-04-11T02:00:26Z</published>
  <updated>2024-04-11T02:00:26Z</updated>
  <content type="html">
   Efficient, immutable, UTF friendly byte strings with Elixir-style pattern matching for OCaml
  </content>
 </entry>
</feed>
