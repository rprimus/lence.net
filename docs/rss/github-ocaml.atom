<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<link rel="self" type="application/atom+xml" href="http://lence.net/github-ocaml.atom"/>
<id>urn:rprimus:github:newocamlrepos</id>
<updated>2021-03-31T02:46:50Z</updated>
<title type='text'>New GitHub Ocaml Repos</title>
 <entry>
  <title>ushitora-anqou: test_ppx</title>
  <author>
   <name>ushitora-anqou</name>
  </author>
  <link href="https://github.com/ushitora-anqou/test_ppx" />
  <id>urn:rprimus:github:ushitora-anqou:test_ppx</id>
  <published>2021-03-31T02:46:50Z</published>
  <updated>2021-03-31T02:46:50Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>zack466: ocamlstuff</title>
  <author>
   <name>zack466</name>
  </author>
  <link href="https://github.com/zack466/ocamlstuff" />
  <id>urn:rprimus:github:zack466:ocamlstuff</id>
  <published>2021-03-31T01:22:59Z</published>
  <updated>2021-03-31T01:22:59Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>crackcomm: ocaml-rs-bench</title>
  <author>
   <name>crackcomm</name>
  </author>
  <link href="https://github.com/crackcomm/ocaml-rs-bench" />
  <id>urn:rprimus:github:crackcomm:ocaml-rs-bench</id>
  <published>2021-03-31T00:05:39Z</published>
  <updated>2021-03-31T00:05:39Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>mooreryan: git_lab_notebooks</title>
  <author>
   <name>mooreryan</name>
  </author>
  <link href="https://github.com/mooreryan/git_lab_notebooks" />
  <id>urn:rprimus:github:mooreryan:git_lab_notebooks</id>
  <published>2021-03-30T23:57:12Z</published>
  <updated>2021-03-30T23:57:12Z</updated>
  <content type="html">
   CLI program to help you manage your lab notebook with git and git annex
  </content>
 </entry>
 <entry>
  <title>chetmurthy: jq-ocaml</title>
  <author>
   <name>chetmurthy</name>
  </author>
  <link href="https://github.com/chetmurthy/jq-ocaml" />
  <id>urn:rprimus:github:chetmurthy:jq-ocaml</id>
  <published>2021-03-30T22:00:49Z</published>
  <updated>2021-03-30T22:00:49Z</updated>
  <content type="html">
   JQ Implementation in OCaml
  </content>
 </entry>
 <entry>
  <title>mateuszgrzyb: hoff</title>
  <author>
   <name>mateuszgrzyb</name>
  </author>
  <link href="https://github.com/mateuszgrzyb/hoff" />
  <id>urn:rprimus:github:mateuszgrzyb:hoff</id>
  <published>2021-03-30T21:43:36Z</published>
  <updated>2021-03-30T21:43:36Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>FlorianBarbet: auth-service-miumiu</title>
  <author>
   <name>FlorianBarbet</name>
  </author>
  <link href="https://github.com/FlorianBarbet/auth-service-miumiu" />
  <id>urn:rprimus:github:FlorianBarbet:auth-service-miumiu</id>
  <published>2021-03-30T15:32:04Z</published>
  <updated>2021-03-30T15:32:04Z</updated>
  <content type="html">
   auth-service-miumiu created by GitHub Classroom
  </content>
 </entry>
 <entry>
  <title>FlorianBarbet: service-offres-miumiu</title>
  <author>
   <name>FlorianBarbet</name>
  </author>
  <link href="https://github.com/FlorianBarbet/service-offres-miumiu" />
  <id>urn:rprimus:github:FlorianBarbet:service-offres-miumiu</id>
  <published>2021-03-30T15:30:43Z</published>
  <updated>2021-03-30T15:30:43Z</updated>
  <content type="html">
   service-offres-miumiu created by GitHub Classroom
  </content>
 </entry>
 <entry>
  <title>Arpadzein: school-project-epidemy-modeling</title>
  <author>
   <name>Arpadzein</name>
  </author>
  <link href="https://github.com/Arpadzein/school-project-epidemy-modeling" />
  <id>urn:rprimus:github:Arpadzein:school-project-epidemy-modeling</id>
  <published>2021-03-30T14:42:33Z</published>
  <updated>2021-03-30T14:42:33Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>felipeochoa: rsspoetry</title>
  <author>
   <name>felipeochoa</name>
  </author>
  <link href="https://github.com/felipeochoa/rsspoetry" />
  <id>urn:rprimus:github:felipeochoa:rsspoetry</id>
  <published>2021-03-30T14:00:18Z</published>
  <updated>2021-03-30T14:00:18Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>tmattio: http-univ</title>
  <author>
   <name>tmattio</name>
  </author>
  <link href="https://github.com/tmattio/http-univ" />
  <id>urn:rprimus:github:tmattio:http-univ</id>
  <published>2021-03-30T09:54:56Z</published>
  <updated>2021-03-30T09:54:56Z</updated>
  <content type="html">
   RFC compliance tests and benchmarks for HTTP implementations
  </content>
 </entry>
 <entry>
  <title>moatom: ml-intepreter</title>
  <author>
   <name>moatom</name>
  </author>
  <link href="https://github.com/moatom/ml-intepreter" />
  <id>urn:rprimus:github:moatom:ml-intepreter</id>
  <published>2021-03-30T02:08:36Z</published>
  <updated>2021-03-30T02:08:36Z</updated>
  <content type="html">
   an interpreter for a concise ML-like language
  </content>
 </entry>
 <entry>
  <title>chetmurthy: yay</title>
  <author>
   <name>chetmurthy</name>
  </author>
  <link href="https://github.com/chetmurthy/yay" />
  <id>urn:rprimus:github:chetmurthy:yay</id>
  <published>2021-03-29T21:07:02Z</published>
  <updated>2021-03-29T21:07:02Z</updated>
  <content type="html">
   YAY Ain&#039;t YAML
  </content>
 </entry>
 <entry>
  <title>emiletimothy24: priority_queue_ocaml</title>
  <author>
   <name>emiletimothy24</name>
  </author>
  <link href="https://github.com/emiletimothy24/priority_queue_ocaml" />
  <id>urn:rprimus:github:emiletimothy24:priority_queue_ocaml</id>
  <published>2021-03-29T18:40:36Z</published>
  <updated>2021-03-29T18:40:36Z</updated>
  <content type="html">
   For my CS 4 (functional programming) class at Caltech, I implemented a priority queue as well as a Y-combinator to compute factorials and lazy streams.
  </content>
 </entry>
 <entry>
  <title>emiletimothy24: klotski_ocaml</title>
  <author>
   <name>emiletimothy24</name>
  </author>
  <link href="https://github.com/emiletimothy24/klotski_ocaml" />
  <id>urn:rprimus:github:emiletimothy24:klotski_ocaml</id>
  <published>2021-03-29T18:35:00Z</published>
  <updated>2021-03-29T18:35:00Z</updated>
  <content type="html">
   For my CS 4 (functional programming) class at Caltech, I programmed the Klotski board game (and solver (which used dfs)) in OCaml using functional programming.
  </content>
 </entry>
 <entry>
  <title>emiletimothy24: binary_matrix_solver_ocaml</title>
  <author>
   <name>emiletimothy24</name>
  </author>
  <link href="https://github.com/emiletimothy24/binary_matrix_solver_ocaml" />
  <id>urn:rprimus:github:emiletimothy24:binary_matrix_solver_ocaml</id>
  <published>2021-03-29T18:25:42Z</published>
  <updated>2021-03-29T18:25:42Z</updated>
  <content type="html">
   For my final exam for CS 4 (functional programming) class at Caltech, I programmed a binary matrix solver, as well as constructors, methods, and solvers for the Kanoodle board game.
  </content>
 </entry>
 <entry>
  <title>roodni: bfhoge</title>
  <author>
   <name>roodni</name>
  </author>
  <link href="https://github.com/roodni/bfhoge" />
  <id>urn:rprimus:github:roodni:bfhoge</id>
  <published>2021-03-29T12:41:07Z</published>
  <updated>2021-03-29T12:41:07Z</updated>
  <content type="html">
   brainfuckãåãèªä½ãã­ã°ã©ãã³ã°è¨èª
  </content>
 </entry>
 <entry>
  <title>uzh: ask</title>
  <author>
   <name>uzh</name>
  </author>
  <link href="https://github.com/uzh/ask" />
  <id>urn:rprimus:github:uzh:ask</id>
  <published>2021-03-29T12:09:57Z</published>
  <updated>2021-03-29T12:09:57Z</updated>
  <content type="html">
   Create, Answer and Integrate Questionnaires in OCaml
  </content>
 </entry>
 <entry>
  <title>bikallem: gadt1</title>
  <author>
   <name>bikallem</name>
  </author>
  <link href="https://github.com/bikallem/gadt1" />
  <id>urn:rprimus:github:bikallem:gadt1</id>
  <published>2021-03-29T11:19:51Z</published>
  <updated>2021-03-29T11:19:51Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>kilobyte: mreplay</title>
  <author>
   <name>kilobyte</name>
  </author>
  <link href="https://github.com/kilobyte/mreplay" />
  <id>urn:rprimus:github:kilobyte:mreplay</id>
  <published>2021-03-29T08:32:45Z</published>
  <updated>2021-03-29T08:32:45Z</updated>
  <content type="html">
   capture &amp; replay malloc actions
  </content>
 </entry>
 <entry>
  <title>henry-macarthur: CS131</title>
  <author>
   <name>henry-macarthur</name>
  </author>
  <link href="https://github.com/henry-macarthur/CS131" />
  <id>urn:rprimus:github:henry-macarthur:CS131</id>
  <published>2021-03-29T04:57:52Z</published>
  <updated>2021-03-29T04:57:52Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>hanzhi713: ocaml-ray-tracer</title>
  <author>
   <name>hanzhi713</name>
  </author>
  <link href="https://github.com/hanzhi713/ocaml-ray-tracer" />
  <id>urn:rprimus:github:hanzhi713:ocaml-ray-tracer</id>
  <published>2021-03-29T04:42:31Z</published>
  <updated>2021-03-29T04:42:31Z</updated>
  <content type="html">
   A simple ray tracer in OCaml
  </content>
 </entry>
</feed>
