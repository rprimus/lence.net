<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<link rel="self" type="application/atom+xml" href="http://lence.net/github-ocaml.atom"/>
<id>urn:rprimus:github:newocamlrepos</id>
<updated>2022-08-20T23:19:39Z</updated>
<title type='text'>New GitHub Ocaml Repos</title>
 <entry>
  <title>hany-yacoub: LispInterpreter</title>
  <author>
   <name>hany-yacoub</name>
  </author>
  <link href="https://github.com/hany-yacoub/LispInterpreter" />
  <id>urn:rprimus:github:hany-yacoub:LispInterpreter</id>
  <published>2022-08-20T23:19:39Z</published>
  <updated>2022-08-20T23:19:39Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>d33d33l4bs: jubalisp</title>
  <author>
   <name>d33d33l4bs</name>
  </author>
  <link href="https://github.com/d33d33l4bs/jubalisp" />
  <id>urn:rprimus:github:d33d33l4bs:jubalisp</id>
  <published>2022-08-20T21:59:04Z</published>
  <updated>2022-08-20T21:59:04Z</updated>
  <content type="html">
   A toy programming language
  </content>
 </entry>
 <entry>
  <title>OlaviAikas: otracer</title>
  <author>
   <name>OlaviAikas</name>
  </author>
  <link href="https://github.com/OlaviAikas/otracer" />
  <id>urn:rprimus:github:OlaviAikas:otracer</id>
  <published>2022-08-20T15:45:05Z</published>
  <updated>2022-08-20T15:45:05Z</updated>
  <content type="html">
   Yet another raytracer, but written in ocaml to experience the glory of functional programming.
  </content>
 </entry>
 <entry>
  <title>rvineet02: ocaml-interpreter</title>
  <author>
   <name>rvineet02</name>
  </author>
  <link href="https://github.com/rvineet02/ocaml-interpreter" />
  <id>urn:rprimus:github:rvineet02:ocaml-interpreter</id>
  <published>2022-08-20T15:44:16Z</published>
  <updated>2022-08-20T15:44:16Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>nogw: hindley-milner-lambda-calculus</title>
  <author>
   <name>nogw</name>
  </author>
  <link href="https://github.com/nogw/hindley-milner-lambda-calculus" />
  <id>urn:rprimus:github:nogw:hindley-milner-lambda-calculus</id>
  <published>2022-08-20T14:56:51Z</published>
  <updated>2022-08-20T14:56:51Z</updated>
  <content type="html">
   a very simple implementation of the hindley-milner type system
  </content>
 </entry>
 <entry>
  <title>NielsMommen: ppx_parser</title>
  <author>
   <name>NielsMommen</name>
  </author>
  <link href="https://github.com/NielsMommen/ppx_parser" />
  <id>urn:rprimus:github:NielsMommen:ppx_parser</id>
  <published>2022-08-20T14:55:59Z</published>
  <updated>2022-08-20T14:55:59Z</updated>
  <content type="html">
   Write stream parsers in OCaml using ppx extensions
  </content>
 </entry>
 <entry>
  <title>Artessay: the-road-to-ocaml</title>
  <author>
   <name>Artessay</name>
  </author>
  <link href="https://github.com/Artessay/the-road-to-ocaml" />
  <id>urn:rprimus:github:Artessay:the-road-to-ocaml</id>
  <published>2022-08-20T11:52:03Z</published>
  <updated>2022-08-20T11:52:03Z</updated>
  <content type="html">
   The road to learn OCaml
  </content>
 </entry>
 <entry>
  <title>aditiv1008: Vortex</title>
  <author>
   <name>aditiv1008</name>
  </author>
  <link href="https://github.com/aditiv1008/Vortex" />
  <id>urn:rprimus:github:aditiv1008:Vortex</id>
  <published>2022-08-20T06:04:21Z</published>
  <updated>2022-08-20T06:04:21Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>sjqtentacles: 40ksim</title>
  <author>
   <name>sjqtentacles</name>
  </author>
  <link href="https://github.com/sjqtentacles/40ksim" />
  <id>urn:rprimus:github:sjqtentacles:40ksim</id>
  <published>2022-08-20T03:54:09Z</published>
  <updated>2022-08-20T03:54:09Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>aheckl: ocaml</title>
  <author>
   <name>aheckl</name>
  </author>
  <link href="https://github.com/aheckl/ocaml" />
  <id>urn:rprimus:github:aheckl:ocaml</id>
  <published>2022-08-19T20:00:20Z</published>
  <updated>2022-08-19T20:00:20Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>leonard-namolaru: produire-programme-selon-exemples</title>
  <author>
   <name>leonard-namolaru</name>
  </author>
  <link href="https://github.com/leonard-namolaru/produire-programme-selon-exemples" />
  <id>urn:rprimus:github:leonard-namolaru:produire-programme-selon-exemples</id>
  <published>2022-08-19T18:13:21Z</published>
  <updated>2022-08-19T18:13:21Z</updated>
  <content type="html">
   [Note : 15 /20]  Projet UE Programmation Fonctionnelle AvancÃ©e (UniversitÃ© Paris CitÃ©, M1) : Au lieu de faire Ã©crire un programme par un programmeur, un utilisateur donne quelques exemples dâune entrÃ©e et de la sortie attendue du programme. Puis, le programme va produire un programme qui est cohÃ©rent avec les exemples fournis.
  </content>
 </entry>
 <entry>
  <title>OCamlPro: cargo-graph</title>
  <author>
   <name>OCamlPro</name>
  </author>
  <link href="https://github.com/OCamlPro/cargo-graph" />
  <id>urn:rprimus:github:OCamlPro:cargo-graph</id>
  <published>2022-08-19T16:30:10Z</published>
  <updated>2022-08-19T16:30:10Z</updated>
  <content type="html">
   Display a graph from the Cargo packages in a Rust repo
  </content>
 </entry>
 <entry>
  <title>sliang-youyou: Popstar</title>
  <author>
   <name>sliang-youyou</name>
  </author>
  <link href="https://github.com/sliang-youyou/Popstar" />
  <id>urn:rprimus:github:sliang-youyou:Popstar</id>
  <published>2022-08-19T02:19:16Z</published>
  <updated>2022-08-19T02:19:16Z</updated>
  <content type="html">
   
  </content>
 </entry>
</feed>
