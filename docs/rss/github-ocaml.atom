<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<link rel="self" type="application/atom+xml" href="http://lence.net/github-ocaml.atom"/>
<id>urn:rprimus:github:newocamlrepos</id>
<updated>2022-06-10T05:17:20Z</updated>
<title type='text'>New GitHub Ocaml Repos</title>
 <entry>
  <title>mooreryan: btab_mechanisms</title>
  <author>
   <name>mooreryan</name>
  </author>
  <link href="https://github.com/mooreryan/btab_mechanisms" />
  <id>urn:rprimus:github:mooreryan:btab_mechanisms</id>
  <published>2022-06-10T05:17:20Z</published>
  <updated>2022-06-10T05:17:20Z</updated>
  <content type="html">
   &quot;O Glorious Contraption!  All these mechanisms...but how do they fit together?&quot;
  </content>
 </entry>
 <entry>
  <title>RedPRL: kai</title>
  <author>
   <name>RedPRL</name>
  </author>
  <link href="https://github.com/RedPRL/kai" />
  <id>urn:rprimus:github:RedPRL:kai</id>
  <published>2022-06-09T20:51:36Z</published>
  <updated>2022-06-09T20:51:36Z</updated>
  <content type="html">
   A library for handling compiler diagnostics and span-associated metadata
  </content>
 </entry>
 <entry>
  <title>n-osborne: polytypic</title>
  <author>
   <name>n-osborne</name>
  </author>
  <link href="https://github.com/n-osborne/polytypic" />
  <id>urn:rprimus:github:n-osborne:polytypic</id>
  <published>2022-06-09T20:41:16Z</published>
  <updated>2022-06-09T20:41:16Z</updated>
  <content type="html">
   Experimentation with polytypic programming
  </content>
 </entry>
 <entry>
  <title>Ando96: Ocaml-Project</title>
  <author>
   <name>Ando96</name>
  </author>
  <link href="https://github.com/Ando96/Ocaml-Project" />
  <id>urn:rprimus:github:Ando96:Ocaml-Project</id>
  <published>2022-06-09T20:13:23Z</published>
  <updated>2022-06-09T20:13:23Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>kle34: Project-Pointers</title>
  <author>
   <name>kle34</name>
  </author>
  <link href="https://github.com/kle34/Project-Pointers" />
  <id>urn:rprimus:github:kle34:Project-Pointers</id>
  <published>2022-06-09T18:02:29Z</published>
  <updated>2022-06-09T18:02:29Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>mendes13: floyd-steinberg</title>
  <author>
   <name>mendes13</name>
  </author>
  <link href="https://github.com/mendes13/floyd-steinberg" />
  <id>urn:rprimus:github:mendes13:floyd-steinberg</id>
  <published>2022-06-09T16:27:26Z</published>
  <updated>2022-06-09T16:27:26Z</updated>
  <content type="html">
   FloydâSteinberg dithering implementation in OCaml
  </content>
 </entry>
 <entry>
  <title>talex5: async_eio</title>
  <author>
   <name>talex5</name>
  </author>
  <link href="https://github.com/talex5/async_eio" />
  <id>urn:rprimus:github:talex5:async_eio</id>
  <published>2022-06-09T14:47:51Z</published>
  <updated>2022-06-09T14:47:51Z</updated>
  <content type="html">
   Run Async code from within Eio
  </content>
 </entry>
 <entry>
  <title>EliasGit2017: ae_versions</title>
  <author>
   <name>EliasGit2017</name>
  </author>
  <link href="https://github.com/EliasGit2017/ae_versions" />
  <id>urn:rprimus:github:EliasGit2017:ae_versions</id>
  <published>2022-06-09T14:42:04Z</published>
  <updated>2022-06-09T14:42:04Z</updated>
  <content type="html">
   Repo made to explore and make older alt-ergo versions compile more easily (work on reproducibility)
  </content>
 </entry>
 <entry>
  <title>kevin-won: hangman</title>
  <author>
   <name>kevin-won</name>
  </author>
  <link href="https://github.com/kevin-won/hangman" />
  <id>urn:rprimus:github:kevin-won:hangman</id>
  <published>2022-06-09T14:30:27Z</published>
  <updated>2022-06-09T14:30:27Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>katzjason: MultiWordle</title>
  <author>
   <name>katzjason</name>
  </author>
  <link href="https://github.com/katzjason/MultiWordle" />
  <id>urn:rprimus:github:katzjason:MultiWordle</id>
  <published>2022-06-09T13:36:24Z</published>
  <updated>2022-06-09T13:36:24Z</updated>
  <content type="html">
   Inspired by The New York Times&#039; crossword-style game Wordle, MultiWordle is a terminal-based arcade of Wordle-style games written entirely in OCaml.
  </content>
 </entry>
 <entry>
  <title>NikolaiKhalatiani: OcamlMinimalSpanningTree</title>
  <author>
   <name>NikolaiKhalatiani</name>
  </author>
  <link href="https://github.com/NikolaiKhalatiani/OcamlMinimalSpanningTree" />
  <id>urn:rprimus:github:NikolaiKhalatiani:OcamlMinimalSpanningTree</id>
  <published>2022-06-09T06:57:40Z</published>
  <updated>2022-06-09T06:57:40Z</updated>
  <content type="html">
   Rather big Home Assignment from Functional Programming Course in KIU
  </content>
 </entry>
 <entry>
  <title>uvm-plaid: jpdf</title>
  <author>
   <name>uvm-plaid</name>
  </author>
  <link href="https://github.com/uvm-plaid/jpdf" />
  <id>urn:rprimus:github:uvm-plaid:jpdf</id>
  <published>2022-06-09T01:57:26Z</published>
  <updated>2022-06-09T01:57:26Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>joshniec: ocalc</title>
  <author>
   <name>joshniec</name>
  </author>
  <link href="https://github.com/joshniec/ocalc" />
  <id>urn:rprimus:github:joshniec:ocalc</id>
  <published>2022-06-08T18:27:31Z</published>
  <updated>2022-06-08T18:27:31Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>NikolaiKhalatiani: OcamlListFunctions</title>
  <author>
   <name>NikolaiKhalatiani</name>
  </author>
  <link href="https://github.com/NikolaiKhalatiani/OcamlListFunctions" />
  <id>urn:rprimus:github:NikolaiKhalatiani:OcamlListFunctions</id>
  <published>2022-06-08T16:26:38Z</published>
  <updated>2022-06-08T16:26:38Z</updated>
  <content type="html">
   Ocaml Lab task about List Module functions
  </content>
 </entry>
 <entry>
  <title>CanSJun: Ocaml</title>
  <author>
   <name>CanSJun</name>
  </author>
  <link href="https://github.com/CanSJun/Ocaml" />
  <id>urn:rprimus:github:CanSJun:Ocaml</id>
  <published>2022-06-08T11:56:46Z</published>
  <updated>2022-06-08T11:56:46Z</updated>
  <content type="html">
   Ocaml ê³µë¶ ìëë¤.
  </content>
 </entry>
 <entry>
  <title>mox692: tapl_src</title>
  <author>
   <name>mox692</name>
  </author>
  <link href="https://github.com/mox692/tapl_src" />
  <id>urn:rprimus:github:mox692:tapl_src</id>
  <published>2022-06-08T11:31:18Z</published>
  <updated>2022-06-08T11:31:18Z</updated>
  <content type="html">
   tapl source code
  </content>
 </entry>
 <entry>
  <title>pukkamustard: ocaml-base32</title>
  <author>
   <name>pukkamustard</name>
  </author>
  <link href="https://github.com/pukkamustard/ocaml-base32" />
  <id>urn:rprimus:github:pukkamustard:ocaml-base32</id>
  <published>2022-06-08T06:54:59Z</published>
  <updated>2022-06-08T06:54:59Z</updated>
  <content type="html">
   Base32 encoding for OCaml (mirror of https://inqlab.net/git/ocaml-base32.git)
  </content>
 </entry>
 <entry>
  <title>JonathanE42: phmm</title>
  <author>
   <name>JonathanE42</name>
  </author>
  <link href="https://github.com/JonathanE42/phmm" />
  <id>urn:rprimus:github:JonathanE42:phmm</id>
  <published>2022-06-08T06:41:32Z</published>
  <updated>2022-06-08T06:41:32Z</updated>
  <content type="html">
   
  </content>
 </entry>
</feed>
