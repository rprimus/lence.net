<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<link rel="self" type="application/atom+xml" href="http://lence.net/github-ocaml.atom"/>
<id>urn:rprimus:github:newocamlrepos</id>
<updated>2022-09-12T06:07:28Z</updated>
<title type='text'>New GitHub Ocaml Repos</title>
 <entry>
  <title>AnshuJalan: advlib</title>
  <author>
   <name>AnshuJalan</name>
  </author>
  <link href="https://github.com/AnshuJalan/advlib" />
  <id>urn:rprimus:github:AnshuJalan:advlib</id>
  <published>2022-09-12T06:07:28Z</published>
  <updated>2022-09-12T06:07:28Z</updated>
  <content type="html">
   WIP: An advanced data structures library written in OCaml
  </content>
 </entry>
 <entry>
  <title>chriskim2273: CSE216-HW-1-OCAML-</title>
  <author>
   <name>chriskim2273</name>
  </author>
  <link href="https://github.com/chriskim2273/CSE216-HW-1-OCAML-" />
  <id>urn:rprimus:github:chriskim2273:CSE216-HW-1-OCAML-</id>
  <published>2022-09-12T05:41:55Z</published>
  <updated>2022-09-12T05:41:55Z</updated>
  <content type="html">
   OCAML practice for HW1 for my CSE 216 Class
  </content>
 </entry>
 <entry>
  <title>poki-musi: ocamlox</title>
  <author>
   <name>poki-musi</name>
  </author>
  <link href="https://github.com/poki-musi/ocamlox" />
  <id>urn:rprimus:github:poki-musi:ocamlox</id>
  <published>2022-09-12T01:34:34Z</published>
  <updated>2022-09-12T01:34:34Z</updated>
  <content type="html">
   The Lox programming language, implemented in OCaml.
  </content>
 </entry>
 <entry>
  <title>jan-pi-sona-lili: OCaML</title>
  <author>
   <name>jan-pi-sona-lili</name>
  </author>
  <link href="https://github.com/jan-pi-sona-lili/OCaML" />
  <id>urn:rprimus:github:jan-pi-sona-lili:OCaML</id>
  <published>2022-09-12T00:39:13Z</published>
  <updated>2022-09-12T00:39:13Z</updated>
  <content type="html">
   OCaML - Machine Learning with OCaml. Uses the [NEAT](https://nn.cs.utexas.edu/downloads/papers/stanley.ec02.pdf) algorithm.
  </content>
 </entry>
 <entry>
  <title>art-w: mcset</title>
  <author>
   <name>art-w</name>
  </author>
  <link href="https://github.com/art-w/mcset" />
  <id>urn:rprimus:github:art-w:mcset</id>
  <published>2022-09-11T23:51:06Z</published>
  <updated>2022-09-11T23:51:06Z</updated>
  <content type="html">
   Lock-free Set for OCaml multicore
  </content>
 </entry>
 <entry>
  <title>alinanikitina: interpreter</title>
  <author>
   <name>alinanikitina</name>
  </author>
  <link href="https://github.com/alinanikitina/interpreter" />
  <id>urn:rprimus:github:alinanikitina:interpreter</id>
  <published>2022-09-11T15:57:24Z</published>
  <updated>2022-09-11T15:57:24Z</updated>
  <content type="html">
   This programming language interpreter consists of a lexer - which tokenizes the language, and a parser - which parses the tokens.
  </content>
 </entry>
 <entry>
  <title>broyer-marie: 326_a1</title>
  <author>
   <name>broyer-marie</name>
  </author>
  <link href="https://github.com/broyer-marie/326_a1" />
  <id>urn:rprimus:github:broyer-marie:326_a1</id>
  <published>2022-09-11T15:13:44Z</published>
  <updated>2022-09-11T15:13:44Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>alanvitalp: ocaml-studies</title>
  <author>
   <name>alanvitalp</name>
  </author>
  <link href="https://github.com/alanvitalp/ocaml-studies" />
  <id>urn:rprimus:github:alanvitalp:ocaml-studies</id>
  <published>2022-09-11T14:48:16Z</published>
  <updated>2022-09-11T14:48:16Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>Letao-WANG: M1</title>
  <author>
   <name>Letao-WANG</name>
  </author>
  <link href="https://github.com/Letao-WANG/M1" />
  <id>urn:rprimus:github:Letao-WANG:M1</id>
  <published>2022-09-11T13:33:06Z</published>
  <updated>2022-09-11T13:33:06Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>MiyamonY: competitive-programming-solves</title>
  <author>
   <name>MiyamonY</name>
  </author>
  <link href="https://github.com/MiyamonY/competitive-programming-solves" />
  <id>urn:rprimus:github:MiyamonY:competitive-programming-solves</id>
  <published>2022-09-11T12:26:53Z</published>
  <updated>2022-09-11T12:26:53Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>sanette: snake-bogue</title>
  <author>
   <name>sanette</name>
  </author>
  <link href="https://github.com/sanette/snake-bogue" />
  <id>urn:rprimus:github:sanette:snake-bogue</id>
  <published>2022-09-11T09:05:46Z</published>
  <updated>2022-09-11T09:05:46Z</updated>
  <content type="html">
   how to write a snake game with bogue
  </content>
 </entry>
 <entry>
  <title>JustinL26: fp</title>
  <author>
   <name>JustinL26</name>
  </author>
  <link href="https://github.com/JustinL26/fp" />
  <id>urn:rprimus:github:JustinL26:fp</id>
  <published>2022-09-11T01:11:30Z</published>
  <updated>2022-09-11T01:11:30Z</updated>
  <content type="html">
   Repo for Functional Programming
  </content>
 </entry>
 <entry>
  <title>Chinmay-395: Principles-Of-Programming</title>
  <author>
   <name>Chinmay-395</name>
  </author>
  <link href="https://github.com/Chinmay-395/Principles-Of-Programming" />
  <id>urn:rprimus:github:Chinmay-395:Principles-Of-Programming</id>
  <published>2022-09-10T22:29:19Z</published>
  <updated>2022-09-10T22:29:19Z</updated>
  <content type="html">
   Masters Course CS-510-A code submission and notes
  </content>
 </entry>
 <entry>
  <title>ASionville: avl-tree</title>
  <author>
   <name>ASionville</name>
  </author>
  <link href="https://github.com/ASionville/avl-tree" />
  <id>urn:rprimus:github:ASionville:avl-tree</id>
  <published>2022-09-10T13:22:38Z</published>
  <updated>2022-09-10T13:22:38Z</updated>
  <content type="html">
   An OCaml implementation of Adelson-Velskii-Landis trees
  </content>
 </entry>
 <entry>
  <title>brendanzab: language-garden</title>
  <author>
   <name>brendanzab</name>
  </author>
  <link href="https://github.com/brendanzab/language-garden" />
  <id>urn:rprimus:github:brendanzab:language-garden</id>
  <published>2022-09-10T11:39:27Z</published>
  <updated>2022-09-10T11:39:27Z</updated>
  <content type="html">
   A garden of small programming language implementations ðª´
  </content>
 </entry>
 <entry>
  <title>csakatoku: bonsai-sandbox</title>
  <author>
   <name>csakatoku</name>
  </author>
  <link href="https://github.com/csakatoku/bonsai-sandbox" />
  <id>urn:rprimus:github:csakatoku:bonsai-sandbox</id>
  <published>2022-09-10T05:28:57Z</published>
  <updated>2022-09-10T05:28:57Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>menezesd: compilers</title>
  <author>
   <name>menezesd</name>
  </author>
  <link href="https://github.com/menezesd/compilers" />
  <id>urn:rprimus:github:menezesd:compilers</id>
  <published>2022-09-10T04:30:51Z</published>
  <updated>2022-09-10T04:30:51Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>mox692: gocaml</title>
  <author>
   <name>mox692</name>
  </author>
  <link href="https://github.com/mox692/gocaml" />
  <id>urn:rprimus:github:mox692:gocaml</id>
  <published>2022-09-10T04:21:12Z</published>
  <updated>2022-09-10T04:21:12Z</updated>
  <content type="html">
   a REPL interpreter with syntax like Go
  </content>
 </entry>
 <entry>
  <title>fatptr: learn_ocaml</title>
  <author>
   <name>fatptr</name>
  </author>
  <link href="https://github.com/fatptr/learn_ocaml" />
  <id>urn:rprimus:github:fatptr:learn_ocaml</id>
  <published>2022-09-10T03:45:12Z</published>
  <updated>2022-09-10T03:45:12Z</updated>
  <content type="html">
   Learning OCaml in my spare time 
  </content>
 </entry>
 <entry>
  <title>ibx34: ocaml-practice</title>
  <author>
   <name>ibx34</name>
  </author>
  <link href="https://github.com/ibx34/ocaml-practice" />
  <id>urn:rprimus:github:ibx34:ocaml-practice</id>
  <published>2022-09-10T03:23:50Z</published>
  <updated>2022-09-10T03:23:50Z</updated>
  <content type="html">
   a practice repo for me :) learning ocaml :)
  </content>
 </entry>
</feed>
