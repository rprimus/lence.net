<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<link rel="self" type="application/atom+xml" href="http://lence.net/github-ocaml.atom"/>
<id>urn:rprimus:github:newocamlrepos</id>
<updated>2021-11-28T00:35:32Z</updated>
<title type='text'>New GitHub Ocaml Repos</title>
 <entry>
  <title>nejohnston: annealing-tsp</title>
  <author>
   <name>nejohnston</name>
  </author>
  <link href="https://github.com/nejohnston/annealing-tsp" />
  <id>urn:rprimus:github:nejohnston:annealing-tsp</id>
  <published>2021-11-28T00:35:32Z</published>
  <updated>2021-11-28T00:35:32Z</updated>
  <content type="html">
   Solving traveling salesperson problem with simulated annealing in OCaml.
  </content>
 </entry>
 <entry>
  <title>AlexisDel: DM_Compil</title>
  <author>
   <name>AlexisDel</name>
  </author>
  <link href="https://github.com/AlexisDel/DM_Compil" />
  <id>urn:rprimus:github:AlexisDel:DM_Compil</id>
  <published>2021-11-27T23:13:27Z</published>
  <updated>2021-11-27T23:13:27Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>mb64: simple-lambda-prolog</title>
  <author>
   <name>mb64</name>
  </author>
  <link href="https://github.com/mb64/simple-lambda-prolog" />
  <id>urn:rprimus:github:mb64:simple-lambda-prolog</id>
  <published>2021-11-27T22:30:54Z</published>
  <updated>2021-11-27T22:30:54Z</updated>
  <content type="html">
   A simple Î»Prolog interpreter
  </content>
 </entry>
 <entry>
  <title>Siryus18: Set-ML</title>
  <author>
   <name>Siryus18</name>
  </author>
  <link href="https://github.com/Siryus18/Set-ML" />
  <id>urn:rprimus:github:Siryus18:Set-ML</id>
  <published>2021-11-27T20:15:16Z</published>
  <updated>2021-11-27T20:15:16Z</updated>
  <content type="html">
   A simple didactic functional language, extended to work on set data structures. Part of a &quot;Programming II&quot; project for University of Pisa.
  </content>
 </entry>
 <entry>
  <title>khiem2105: Ocaml-Project</title>
  <author>
   <name>khiem2105</name>
  </author>
  <link href="https://github.com/khiem2105/Ocaml-Project" />
  <id>urn:rprimus:github:khiem2105:Ocaml-Project</id>
  <published>2021-11-27T11:29:06Z</published>
  <updated>2021-11-27T11:29:06Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>Tim-ats-d: Laius</title>
  <author>
   <name>Tim-ats-d</name>
  </author>
  <link href="https://github.com/Tim-ats-d/Laius" />
  <id>urn:rprimus:github:Tim-ats-d:Laius</id>
  <published>2021-11-27T10:59:40Z</published>
  <updated>2021-11-27T10:59:40Z</updated>
  <content type="html">
   Terminal-based presentations in pure OCaml.
  </content>
 </entry>
 <entry>
  <title>mwhicks1: C3</title>
  <author>
   <name>mwhicks1</name>
  </author>
  <link href="https://github.com/mwhicks1/C3" />
  <id>urn:rprimus:github:mwhicks1:C3</id>
  <published>2021-11-26T20:38:48Z</published>
  <updated>2021-11-26T20:38:48Z</updated>
  <content type="html">
   Reverting Checked C annotations
  </content>
 </entry>
 <entry>
  <title>LiamPack: Purely-Functional-Data-Structures-solutions-OCaml</title>
  <author>
   <name>LiamPack</name>
  </author>
  <link href="https://github.com/LiamPack/Purely-Functional-Data-Structures-solutions-OCaml" />
  <id>urn:rprimus:github:LiamPack:Purely-Functional-Data-Structures-solutions-OCaml</id>
  <published>2021-11-26T20:27:59Z</published>
  <updated>2021-11-26T20:27:59Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>protosam: vpnkit-build</title>
  <author>
   <name>protosam</name>
  </author>
  <link href="https://github.com/protosam/vpnkit-build" />
  <id>urn:rprimus:github:protosam:vpnkit-build</id>
  <published>2021-11-26T19:13:34Z</published>
  <updated>2021-11-26T19:13:34Z</updated>
  <content type="html">
   trying to build vpnkit withg github actions
  </content>
 </entry>
 <entry>
  <title>tachukao: ocaml-mujoco</title>
  <author>
   <name>tachukao</name>
  </author>
  <link href="https://github.com/tachukao/ocaml-mujoco" />
  <id>urn:rprimus:github:tachukao:ocaml-mujoco</id>
  <published>2021-11-26T18:43:12Z</published>
  <updated>2021-11-26T18:43:12Z</updated>
  <content type="html">
   OCaml bindings to MuJoCo
  </content>
 </entry>
 <entry>
  <title>releaselab: michelson-adt</title>
  <author>
   <name>releaselab</name>
  </author>
  <link href="https://github.com/releaselab/michelson-adt" />
  <id>urn:rprimus:github:releaselab:michelson-adt</id>
  <published>2021-11-26T15:43:08Z</published>
  <updated>2021-11-26T15:43:08Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>SimonForest: ladja</title>
  <author>
   <name>SimonForest</name>
  </author>
  <link href="https://github.com/SimonForest/ladja" />
  <id>urn:rprimus:github:SimonForest:ladja</id>
  <published>2021-11-26T12:51:35Z</published>
  <updated>2021-11-26T12:51:35Z</updated>
  <content type="html">
   A left adjointness assistant library
  </content>
 </entry>
 <entry>
  <title>leejy0321: OCaml</title>
  <author>
   <name>leejy0321</name>
  </author>
  <link href="https://github.com/leejy0321/OCaml" />
  <id>urn:rprimus:github:leejy0321:OCaml</id>
  <published>2021-11-26T10:05:41Z</published>
  <updated>2021-11-26T10:05:41Z</updated>
  <content type="html">
   OCaml assignments from Programming Languages (COSE212, Fall 2020)
  </content>
 </entry>
 <entry>
  <title>marineschimel: ilqr_vae</title>
  <author>
   <name>marineschimel</name>
  </author>
  <link href="https://github.com/marineschimel/ilqr_vae" />
  <id>urn:rprimus:github:marineschimel:ilqr_vae</id>
  <published>2021-11-26T09:59:08Z</published>
  <updated>2021-11-26T09:59:08Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>luke36: ToyBasic</title>
  <author>
   <name>luke36</name>
  </author>
  <link href="https://github.com/luke36/ToyBasic" />
  <id>urn:rprimus:github:luke36:ToyBasic</id>
  <published>2021-11-26T08:34:12Z</published>
  <updated>2021-11-26T08:34:12Z</updated>
  <content type="html">
   A minimal Basic interpreter.
  </content>
 </entry>
 <entry>
  <title>casgari: VirusSimulation</title>
  <author>
   <name>casgari</name>
  </author>
  <link href="https://github.com/casgari/VirusSimulation" />
  <id>urn:rprimus:github:casgari:VirusSimulation</id>
  <published>2021-11-26T06:25:17Z</published>
  <updated>2021-11-26T06:25:17Z</updated>
  <content type="html">
   This program is designed to test different parameters for a simulated virus, such as ease of infection, and measure the effects across populations. The addition of a zombie population was included for fun. Code derived as a part of Harvard&#039;s CS51 class
  </content>
 </entry>
</feed>
