<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<link rel="self" type="application/atom+xml" href="http://lence.net/github-ocaml.atom"/>
<id>urn:rprimus:github:newocamlrepos</id>
<updated>2023-01-06T07:27:16Z</updated>
<title type='text'>New GitHub Ocaml Repos</title>
 <entry>
  <title>talpa29: Compiler_tester</title>
  <author>
   <name>talpa29</name>
  </author>
  <link href="https://github.com/talpa29/Compiler_tester" />
  <id>urn:rprimus:github:talpa29:Compiler_tester</id>
  <published>2023-01-06T07:27:16Z</published>
  <updated>2023-01-06T07:27:16Z</updated>
  <content type="html">
   tester for the compiler
  </content>
 </entry>
 <entry>
  <title>calwoo: toy-lang</title>
  <author>
   <name>calwoo</name>
  </author>
  <link href="https://github.com/calwoo/toy-lang" />
  <id>urn:rprimus:github:calwoo:toy-lang</id>
  <published>2023-01-06T00:40:51Z</published>
  <updated>2023-01-06T00:40:51Z</updated>
  <content type="html">
   Learning how to build a basic compiler for a Lisp-like language.
  </content>
 </entry>
 <entry>
  <title>ExpandingShapes: advent-of-code-2022</title>
  <author>
   <name>ExpandingShapes</name>
  </author>
  <link href="https://github.com/ExpandingShapes/advent-of-code-2022" />
  <id>urn:rprimus:github:ExpandingShapes:advent-of-code-2022</id>
  <published>2023-01-05T22:25:58Z</published>
  <updated>2023-01-05T22:25:58Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>Saatvik1: CSE216HW1</title>
  <author>
   <name>Saatvik1</name>
  </author>
  <link href="https://github.com/Saatvik1/CSE216HW1" />
  <id>urn:rprimus:github:Saatvik1:CSE216HW1</id>
  <published>2023-01-05T21:29:20Z</published>
  <updated>2023-01-05T21:29:20Z</updated>
  <content type="html">
   OCaml Assignment for CSE 216
  </content>
 </entry>
 <entry>
  <title>tiany7: OCaml-</title>
  <author>
   <name>tiany7</name>
  </author>
  <link href="https://github.com/tiany7/OCaml-" />
  <id>urn:rprimus:github:tiany7:OCaml-</id>
  <published>2023-01-05T21:28:42Z</published>
  <updated>2023-01-05T21:28:42Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>FedericaMeloni: ProgettoLip</title>
  <author>
   <name>FedericaMeloni</name>
  </author>
  <link href="https://github.com/FedericaMeloni/ProgettoLip" />
  <id>urn:rprimus:github:FedericaMeloni:ProgettoLip</id>
  <published>2023-01-05T21:24:59Z</published>
  <updated>2023-01-05T21:24:59Z</updated>
  <content type="html">
   Progetto di Lip Unica
  </content>
 </entry>
 <entry>
  <title>janahayaly: abstractandmodularity</title>
  <author>
   <name>janahayaly</name>
  </author>
  <link href="https://github.com/janahayaly/abstractandmodularity" />
  <id>urn:rprimus:github:janahayaly:abstractandmodularity</id>
  <published>2023-01-05T19:37:34Z</published>
  <updated>2023-01-05T19:37:34Z</updated>
  <content type="html">
   Using sets to solve problems in OCaml- run tests in set test
  </content>
 </entry>
 <entry>
  <title>Zarwaldo: sv-congruence-classes</title>
  <author>
   <name>Zarwaldo</name>
  </author>
  <link href="https://github.com/Zarwaldo/sv-congruence-classes" />
  <id>urn:rprimus:github:Zarwaldo:sv-congruence-classes</id>
  <published>2023-01-05T18:59:53Z</published>
  <updated>2023-01-05T18:59:53Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>EduardoRFS: f-omega</title>
  <author>
   <name>EduardoRFS</name>
  </author>
  <link href="https://github.com/EduardoRFS/f-omega" />
  <id>urn:rprimus:github:EduardoRFS:f-omega</id>
  <published>2023-01-05T18:48:03Z</published>
  <updated>2023-01-05T18:48:03Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>agrarpan: coq-synthesis</title>
  <author>
   <name>agrarpan</name>
  </author>
  <link href="https://github.com/agrarpan/coq-synthesis" />
  <id>urn:rprimus:github:agrarpan:coq-synthesis</id>
  <published>2023-01-05T18:42:17Z</published>
  <updated>2023-01-05T18:42:17Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>owl77: Ocaml</title>
  <author>
   <name>owl77</name>
  </author>
  <link href="https://github.com/owl77/Ocaml" />
  <id>urn:rprimus:github:owl77:Ocaml</id>
  <published>2023-01-05T18:10:35Z</published>
  <updated>2023-01-05T18:10:35Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>iiuwr-cc: pracownia22-5</title>
  <author>
   <name>iiuwr-cc</name>
  </author>
  <link href="https://github.com/iiuwr-cc/pracownia22-5" />
  <id>urn:rprimus:github:iiuwr-cc:pracownia22-5</id>
  <published>2023-01-05T17:58:25Z</published>
  <updated>2023-01-05T17:58:25Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>Bixkog: Wpp_interpreter</title>
  <author>
   <name>Bixkog</name>
  </author>
  <link href="https://github.com/Bixkog/Wpp_interpreter" />
  <id>urn:rprimus:github:Bixkog:Wpp_interpreter</id>
  <published>2023-01-05T12:44:29Z</published>
  <updated>2023-01-05T12:44:29Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>gridbugs: dune-vendored-projects-rule-collision-repro</title>
  <author>
   <name>gridbugs</name>
  </author>
  <link href="https://github.com/gridbugs/dune-vendored-projects-rule-collision-repro" />
  <id>urn:rprimus:github:gridbugs:dune-vendored-projects-rule-collision-repro</id>
  <published>2023-01-05T06:49:56Z</published>
  <updated>2023-01-05T06:49:56Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>Coq-Polyhedra: coq-binreader</title>
  <author>
   <name>Coq-Polyhedra</name>
  </author>
  <link href="https://github.com/Coq-Polyhedra/coq-binreader" />
  <id>urn:rprimus:github:Coq-Polyhedra:coq-binreader</id>
  <published>2023-01-05T06:26:46Z</published>
  <updated>2023-01-05T06:26:46Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>Sekhmet0208: ocaml-compiler</title>
  <author>
   <name>Sekhmet0208</name>
  </author>
  <link href="https://github.com/Sekhmet0208/ocaml-compiler" />
  <id>urn:rprimus:github:Sekhmet0208:ocaml-compiler</id>
  <published>2023-01-05T02:25:42Z</published>
  <updated>2023-01-05T02:25:42Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>JiatanHuang: Lisp-Interpreter</title>
  <author>
   <name>JiatanHuang</name>
  </author>
  <link href="https://github.com/JiatanHuang/Lisp-Interpreter" />
  <id>urn:rprimus:github:JiatanHuang:Lisp-Interpreter</id>
  <published>2023-01-04T18:47:13Z</published>
  <updated>2023-01-04T18:47:13Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>JiatanHuang: Parser</title>
  <author>
   <name>JiatanHuang</name>
  </author>
  <link href="https://github.com/JiatanHuang/Parser" />
  <id>urn:rprimus:github:JiatanHuang:Parser</id>
  <published>2023-01-04T18:42:21Z</published>
  <updated>2023-01-04T18:42:21Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>JiatanHuang: Polynomial-Arithmetic</title>
  <author>
   <name>JiatanHuang</name>
  </author>
  <link href="https://github.com/JiatanHuang/Polynomial-Arithmetic" />
  <id>urn:rprimus:github:JiatanHuang:Polynomial-Arithmetic</id>
  <published>2023-01-04T18:39:02Z</published>
  <updated>2023-01-04T18:39:02Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>Ashish5143: HTTP-Server-in-OCAML</title>
  <author>
   <name>Ashish5143</name>
  </author>
  <link href="https://github.com/Ashish5143/HTTP-Server-in-OCAML" />
  <id>urn:rprimus:github:Ashish5143:HTTP-Server-in-OCAML</id>
  <published>2023-01-04T15:43:35Z</published>
  <updated>2023-01-04T15:43:35Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>bobthehuge: BobLang</title>
  <author>
   <name>bobthehuge</name>
  </author>
  <link href="https://github.com/bobthehuge/BobLang" />
  <id>urn:rprimus:github:bobthehuge:BobLang</id>
  <published>2023-01-04T14:51:34Z</published>
  <updated>2023-01-04T14:51:34Z</updated>
  <content type="html">
   ToyLanguage written in Ocaml. This is not a serious project so don&#039;t expect a revolutionary programming language or else
  </content>
 </entry>
 <entry>
  <title>juauke: ipf_projet_2022</title>
  <author>
   <name>juauke</name>
  </author>
  <link href="https://github.com/juauke/ipf_projet_2022" />
  <id>urn:rprimus:github:juauke:ipf_projet_2022</id>
  <published>2023-01-04T12:06:26Z</published>
  <updated>2023-01-04T12:06:26Z</updated>
  <content type="html">
   Task planner in a martian base, with a main constraint to make only with the functional part of OCaml.
  </content>
 </entry>
 <entry>
  <title>louis-mareschal: Projet_Ocaml</title>
  <author>
   <name>louis-mareschal</name>
  </author>
  <link href="https://github.com/louis-mareschal/Projet_Ocaml" />
  <id>urn:rprimus:github:louis-mareschal:Projet_Ocaml</id>
  <published>2023-01-04T12:05:20Z</published>
  <updated>2023-01-04T12:05:20Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>sux2mfgj: ocaml_memos</title>
  <author>
   <name>sux2mfgj</name>
  </author>
  <link href="https://github.com/sux2mfgj/ocaml_memos" />
  <id>urn:rprimus:github:sux2mfgj:ocaml_memos</id>
  <published>2023-01-04T07:27:47Z</published>
  <updated>2023-01-04T07:27:47Z</updated>
  <content type="html">
   
  </content>
 </entry>
</feed>
