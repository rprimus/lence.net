<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<link rel="self" type="application/atom+xml" href="http://lence.net/github-ocaml.atom"/>
<id>urn:rprimus:github:newocamlrepos</id>
<updated>2021-06-27T15:44:06Z</updated>
<title type='text'>New GitHub Ocaml Repos</title>
 <entry>
  <title>twistedduck: bcp</title>
  <author>
   <name>twistedduck</name>
  </author>
  <link href="https://github.com/twistedduck/bcp" />
  <id>urn:rprimus:github:twistedduck:bcp</id>
  <published>2021-06-27T15:44:06Z</published>
  <updated>2021-06-27T15:44:06Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>sre990: pr2-ocaml-project</title>
  <author>
   <name>sre990</name>
  </author>
  <link href="https://github.com/sre990/pr2-ocaml-project" />
  <id>urn:rprimus:github:sre990:pr2-ocaml-project</id>
  <published>2021-06-27T15:36:05Z</published>
  <updated>2021-06-27T15:36:05Z</updated>
  <content type="html">
   OCaml Project for my second year undergraduate programming course at Pisa University. I implemented an interpreter with a dynamic typechecker and a static typecheker.
  </content>
 </entry>
 <entry>
  <title>Deepaganeshan: Demo-Ant</title>
  <author>
   <name>Deepaganeshan</name>
  </author>
  <link href="https://github.com/Deepaganeshan/Demo-Ant" />
  <id>urn:rprimus:github:Deepaganeshan:Demo-Ant</id>
  <published>2021-06-27T13:38:18Z</published>
  <updated>2021-06-27T13:38:18Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>logiunta: Unipi_Ocaml_Interpreter</title>
  <author>
   <name>logiunta</name>
  </author>
  <link href="https://github.com/logiunta/Unipi_Ocaml_Interpreter" />
  <id>urn:rprimus:github:logiunta:Unipi_Ocaml_Interpreter</id>
  <published>2021-06-27T13:15:11Z</published>
  <updated>2021-06-27T13:15:11Z</updated>
  <content type="html">
   The project consists in the design and implementation of some software modules. Consider an extension of the functional didactic language that allows you to manipulate dictionaries. A dictionary is a collection of values uniquely identified by a key. Therefore, a dictionary is a collection of key-value pairs where the key is unique.
  </content>
 </entry>
 <entry>
  <title>art-w: ocaml-webdriver</title>
  <author>
   <name>art-w</name>
  </author>
  <link href="https://github.com/art-w/ocaml-webdriver" />
  <id>urn:rprimus:github:art-w:ocaml-webdriver</id>
  <published>2021-06-27T12:32:11Z</published>
  <updated>2021-06-27T12:32:11Z</updated>
  <content type="html">
   Web browsers remote control
  </content>
 </entry>
 <entry>
  <title>returntocorp: ocaml-tree-sitter-core</title>
  <author>
   <name>returntocorp</name>
  </author>
  <link href="https://github.com/returntocorp/ocaml-tree-sitter-core" />
  <id>urn:rprimus:github:returntocorp:ocaml-tree-sitter-core</id>
  <published>2021-06-26T22:44:24Z</published>
  <updated>2021-06-26T22:44:24Z</updated>
  <content type="html">
   OCaml code generator and runtime library for handling typed tree-sitter CSTs
  </content>
 </entry>
 <entry>
  <title>kkd26: finite-automata-compiler</title>
  <author>
   <name>kkd26</name>
  </author>
  <link href="https://github.com/kkd26/finite-automata-compiler" />
  <id>urn:rprimus:github:kkd26:finite-automata-compiler</id>
  <published>2021-06-26T19:09:54Z</published>
  <updated>2021-06-26T19:09:54Z</updated>
  <content type="html">
   Basic implementation of Finite Automaton (DFA, NFA) with for basic compiler written in OCaml.
  </content>
 </entry>
 <entry>
  <title>gndl: regexredux_ocaml</title>
  <author>
   <name>gndl</name>
  </author>
  <link href="https://github.com/gndl/regexredux_ocaml" />
  <id>urn:rprimus:github:gndl:regexredux_ocaml</id>
  <published>2021-06-26T10:58:04Z</published>
  <updated>2021-06-26T10:58:04Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>zhenhuaa: cs3110</title>
  <author>
   <name>zhenhuaa</name>
  </author>
  <link href="https://github.com/zhenhuaa/cs3110" />
  <id>urn:rprimus:github:zhenhuaa:cs3110</id>
  <published>2021-06-26T09:02:20Z</published>
  <updated>2021-06-26T09:02:20Z</updated>
  <content type="html">
   cs3110 
  </content>
 </entry>
 <entry>
  <title>songyahui: AlgebraicEffect</title>
  <author>
   <name>songyahui</name>
  </author>
  <link href="https://github.com/songyahui/AlgebraicEffect" />
  <id>urn:rprimus:github:songyahui:AlgebraicEffect</id>
  <published>2021-06-26T06:51:36Z</published>
  <updated>2021-06-26T06:51:36Z</updated>
  <content type="html">
   effects system for continuation
  </content>
 </entry>
</feed>
