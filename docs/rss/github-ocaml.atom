<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<link rel="self" type="application/atom+xml" href="http://lence.net/github-ocaml.atom"/>
<id>urn:rprimus:github:newocamlrepos</id>
<updated>2021-05-17T16:46:57Z</updated>
<title type='text'>New GitHub Ocaml Repos</title>
 <entry>
  <title>tmattio: dream-encoding</title>
  <author>
   <name>tmattio</name>
  </author>
  <link href="https://github.com/tmattio/dream-encoding" />
  <id>urn:rprimus:github:tmattio:dream-encoding</id>
  <published>2021-05-17T16:46:57Z</published>
  <updated>2021-05-17T16:46:57Z</updated>
  <content type="html">
   Encoding primitives for Dream applications.
  </content>
 </entry>
 <entry>
  <title>Firobe: feather-dmenu</title>
  <author>
   <name>Firobe</name>
  </author>
  <link href="https://github.com/Firobe/feather-dmenu" />
  <id>urn:rprimus:github:Firobe:feather-dmenu</id>
  <published>2021-05-17T15:08:07Z</published>
  <updated>2021-05-17T15:08:07Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>HuStmpHrrr: setproof-experimental</title>
  <author>
   <name>HuStmpHrrr</name>
  </author>
  <link href="https://github.com/HuStmpHrrr/setproof-experimental" />
  <id>urn:rprimus:github:HuStmpHrrr:setproof-experimental</id>
  <published>2021-05-17T14:37:24Z</published>
  <updated>2021-05-17T14:37:24Z</updated>
  <content type="html">
   this is an experiemental proof assistant to implement definitional UIP and quotient inductive types
  </content>
 </entry>
 <entry>
  <title>SkySkimmer: unit-test-test</title>
  <author>
   <name>SkySkimmer</name>
  </author>
  <link href="https://github.com/SkySkimmer/unit-test-test" />
  <id>urn:rprimus:github:SkySkimmer:unit-test-test</id>
  <published>2021-05-17T13:15:50Z</published>
  <updated>2021-05-17T13:15:50Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>ArulselvanMadhavan: scaml</title>
  <author>
   <name>ArulselvanMadhavan</name>
  </author>
  <link href="https://github.com/ArulselvanMadhavan/scaml" />
  <id>urn:rprimus:github:ArulselvanMadhavan:scaml</id>
  <published>2021-05-17T10:21:03Z</published>
  <updated>2021-05-17T10:21:03Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>microsato: Voice-Activity-Detection</title>
  <author>
   <name>microsato</name>
  </author>
  <link href="https://github.com/microsato/Voice-Activity-Detection" />
  <id>urn:rprimus:github:microsato:Voice-Activity-Detection</id>
  <published>2021-05-17T10:02:07Z</published>
  <updated>2021-05-17T10:02:07Z</updated>
  <content type="html">
   Implementation of Voice Activity Detection (VAD) algorithms based on two different but commonly used audio signal features: signal energy and spectral entropy. 
  </content>
 </entry>
 <entry>
  <title>gbelouze: btree</title>
  <author>
   <name>gbelouze</name>
  </author>
  <link href="https://github.com/gbelouze/btree" />
  <id>urn:rprimus:github:gbelouze:btree</id>
  <published>2021-05-17T09:10:19Z</published>
  <updated>2021-05-17T09:10:19Z</updated>
  <content type="html">
   Btree data structure for stable indexing
  </content>
 </entry>
 <entry>
  <title>davidmkwon: expiring_cache</title>
  <author>
   <name>davidmkwon</name>
  </author>
  <link href="https://github.com/davidmkwon/expiring_cache" />
  <id>urn:rprimus:github:davidmkwon:expiring_cache</id>
  <published>2021-05-17T00:30:21Z</published>
  <updated>2021-05-17T00:30:21Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>Adrieennn: ocaml_compiler</title>
  <author>
   <name>Adrieennn</name>
  </author>
  <link href="https://github.com/Adrieennn/ocaml_compiler" />
  <id>urn:rprimus:github:Adrieennn:ocaml_compiler</id>
  <published>2021-05-16T17:03:18Z</published>
  <updated>2021-05-16T17:03:18Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>rbardou: enumap</title>
  <author>
   <name>rbardou</name>
  </author>
  <link href="https://github.com/rbardou/enumap" />
  <id>urn:rprimus:github:rbardou:enumap</id>
  <published>2021-05-16T14:25:11Z</published>
  <updated>2021-05-16T14:25:11Z</updated>
  <content type="html">
   Generate code to manage enums and maps of enums
  </content>
 </entry>
 <entry>
  <title>rbardou: mysc</title>
  <author>
   <name>rbardou</name>
  </author>
  <link href="https://github.com/rbardou/mysc" />
  <id>urn:rprimus:github:rbardou:mysc</id>
  <published>2021-05-16T14:22:09Z</published>
  <updated>2021-05-16T14:22:09Z</updated>
  <content type="html">
   Very small extension to the standard library
  </content>
 </entry>
 <entry>
  <title>rbardou: protype-robin</title>
  <author>
   <name>rbardou</name>
  </author>
  <link href="https://github.com/rbardou/protype-robin" />
  <id>urn:rprimus:github:rbardou:protype-robin</id>
  <published>2021-05-16T14:04:13Z</published>
  <updated>2021-05-16T14:04:13Z</updated>
  <content type="html">
   Robin encodings for types described using Protype
  </content>
 </entry>
 <entry>
  <title>rbardou: robin</title>
  <author>
   <name>rbardou</name>
  </author>
  <link href="https://github.com/rbardou/robin" />
  <id>urn:rprimus:github:rbardou:robin</id>
  <published>2021-05-16T14:01:40Z</published>
  <updated>2021-05-16T14:01:40Z</updated>
  <content type="html">
   Robust binary encoding
  </content>
 </entry>
 <entry>
  <title>rbardou: protype</title>
  <author>
   <name>rbardou</name>
  </author>
  <link href="https://github.com/rbardou/protype" />
  <id>urn:rprimus:github:rbardou:protype</id>
  <published>2021-05-16T13:59:17Z</published>
  <updated>2021-05-16T13:59:17Z</updated>
  <content type="html">
   Type descriptions for introspection
  </content>
 </entry>
 <entry>
  <title>AmitYaakov: scheme-compiler</title>
  <author>
   <name>AmitYaakov</name>
  </author>
  <link href="https://github.com/AmitYaakov/scheme-compiler" />
  <id>urn:rprimus:github:AmitYaakov:scheme-compiler</id>
  <published>2021-05-16T12:17:59Z</published>
  <updated>2021-05-16T12:17:59Z</updated>
  <content type="html">
   scheme compiler to x86 ASM
  </content>
 </entry>
 <entry>
  <title>coco33920: ocaml-baguettesharp-interpreter</title>
  <author>
   <name>coco33920</name>
  </author>
  <link href="https://github.com/coco33920/ocaml-baguettesharp-interpreter" />
  <id>urn:rprimus:github:coco33920:ocaml-baguettesharp-interpreter</id>
  <published>2021-05-16T09:49:28Z</published>
  <updated>2021-05-16T09:49:28Z</updated>
  <content type="html">
   An OCAML implementation of the Baguette# exotic language, following https://dev.to/nt591/writing-an-interpreter-in-ocaml-45hm &#039;s tutorial
  </content>
 </entry>
 <entry>
  <title>saisreya: OCaml_Interpreter</title>
  <author>
   <name>saisreya</name>
  </author>
  <link href="https://github.com/saisreya/OCaml_Interpreter" />
  <id>urn:rprimus:github:saisreya:OCaml_Interpreter</id>
  <published>2021-05-16T03:32:23Z</published>
  <updated>2021-05-16T03:32:23Z</updated>
  <content type="html">
   Interpreter for a subset of functional programming language written in OCaml
  </content>
 </entry>
 <entry>
  <title>rbjorklin: throttle-fstrim</title>
  <author>
   <name>rbjorklin</name>
  </author>
  <link href="https://github.com/rbjorklin/throttle-fstrim" />
  <id>urn:rprimus:github:rbjorklin:throttle-fstrim</id>
  <published>2021-05-16T00:32:48Z</published>
  <updated>2021-05-16T00:32:48Z</updated>
  <content type="html">
   
  </content>
 </entry>
</feed>
