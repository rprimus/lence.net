<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<link rel="self" type="application/atom+xml" href="http://lence.net/github-ocaml.atom"/>
<id>urn:rprimus:github:newocamlrepos</id>
<updated>2021-03-30T06:03:07Z</updated>
<title type='text'>New GitHub Ocaml Repos</title>
 <entry>
  <title>AGS1130: learnReasonML</title>
  <author>
   <name>AGS1130</name>
  </author>
  <link href="https://github.com/AGS1130/learnReasonML" />
  <id>urn:rprimus:github:AGS1130:learnReasonML</id>
  <published>2021-03-30T06:03:07Z</published>
  <updated>2021-03-30T06:03:07Z</updated>
  <content type="html">
   Lets learn ReasonML, the reason, I don&#039;t know
  </content>
 </entry>
 <entry>
  <title>gnbpdx: Compilers-Project</title>
  <author>
   <name>gnbpdx</name>
  </author>
  <link href="https://github.com/gnbpdx/Compilers-Project" />
  <id>urn:rprimus:github:gnbpdx:Compilers-Project</id>
  <published>2021-03-30T03:27:01Z</published>
  <updated>2021-03-30T03:27:01Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>moatom: ml-intepreter</title>
  <author>
   <name>moatom</name>
  </author>
  <link href="https://github.com/moatom/ml-intepreter" />
  <id>urn:rprimus:github:moatom:ml-intepreter</id>
  <published>2021-03-30T02:08:36Z</published>
  <updated>2021-03-30T02:08:36Z</updated>
  <content type="html">
   an interpreter for a concise ML-like language
  </content>
 </entry>
 <entry>
  <title>chetmurthy: yayaml</title>
  <author>
   <name>chetmurthy</name>
  </author>
  <link href="https://github.com/chetmurthy/yayaml" />
  <id>urn:rprimus:github:chetmurthy:yayaml</id>
  <published>2021-03-29T21:07:02Z</published>
  <updated>2021-03-29T21:07:02Z</updated>
  <content type="html">
   YAYAML Ain&#039;t YAML
  </content>
 </entry>
 <entry>
  <title>emiletimothy24: priority_queue_ocaml</title>
  <author>
   <name>emiletimothy24</name>
  </author>
  <link href="https://github.com/emiletimothy24/priority_queue_ocaml" />
  <id>urn:rprimus:github:emiletimothy24:priority_queue_ocaml</id>
  <published>2021-03-29T18:40:36Z</published>
  <updated>2021-03-29T18:40:36Z</updated>
  <content type="html">
   For my CS 4 (functional programming) class at Caltech, I implemented a priority queue as well as a Y-combinator to compute factorials and lazy streams.
  </content>
 </entry>
 <entry>
  <title>emiletimothy24: klotski_ocaml</title>
  <author>
   <name>emiletimothy24</name>
  </author>
  <link href="https://github.com/emiletimothy24/klotski_ocaml" />
  <id>urn:rprimus:github:emiletimothy24:klotski_ocaml</id>
  <published>2021-03-29T18:35:00Z</published>
  <updated>2021-03-29T18:35:00Z</updated>
  <content type="html">
   For my CS 4 (functional programming) class at Caltech, I programmed the Klotski board game (and solver (which used dfs)) in OCaml using functional programming.
  </content>
 </entry>
 <entry>
  <title>emiletimothy24: binary_matrix_solver_ocaml</title>
  <author>
   <name>emiletimothy24</name>
  </author>
  <link href="https://github.com/emiletimothy24/binary_matrix_solver_ocaml" />
  <id>urn:rprimus:github:emiletimothy24:binary_matrix_solver_ocaml</id>
  <published>2021-03-29T18:25:42Z</published>
  <updated>2021-03-29T18:25:42Z</updated>
  <content type="html">
   For my final exam for CS 4 (functional programming) class at Caltech, I programmed a binary matrix solver, as well as constructors, methods, and solvers for the Kanoodle board game.
  </content>
 </entry>
 <entry>
  <title>roodni: bfhoge</title>
  <author>
   <name>roodni</name>
  </author>
  <link href="https://github.com/roodni/bfhoge" />
  <id>urn:rprimus:github:roodni:bfhoge</id>
  <published>2021-03-29T12:41:07Z</published>
  <updated>2021-03-29T12:41:07Z</updated>
  <content type="html">
   brainfuckãåãèªä½ãã­ã°ã©ãã³ã°è¨èª
  </content>
 </entry>
 <entry>
  <title>uzh: ask</title>
  <author>
   <name>uzh</name>
  </author>
  <link href="https://github.com/uzh/ask" />
  <id>urn:rprimus:github:uzh:ask</id>
  <published>2021-03-29T12:09:57Z</published>
  <updated>2021-03-29T12:09:57Z</updated>
  <content type="html">
   Create, Answer and Integrate Questionnaires in OCaml
  </content>
 </entry>
 <entry>
  <title>bikallem: gadt1</title>
  <author>
   <name>bikallem</name>
  </author>
  <link href="https://github.com/bikallem/gadt1" />
  <id>urn:rprimus:github:bikallem:gadt1</id>
  <published>2021-03-29T11:19:51Z</published>
  <updated>2021-03-29T11:19:51Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>kilobyte: mreplay</title>
  <author>
   <name>kilobyte</name>
  </author>
  <link href="https://github.com/kilobyte/mreplay" />
  <id>urn:rprimus:github:kilobyte:mreplay</id>
  <published>2021-03-29T08:32:45Z</published>
  <updated>2021-03-29T08:32:45Z</updated>
  <content type="html">
   capture &amp; replay malloc actions
  </content>
 </entry>
 <entry>
  <title>henry-macarthur: CS131</title>
  <author>
   <name>henry-macarthur</name>
  </author>
  <link href="https://github.com/henry-macarthur/CS131" />
  <id>urn:rprimus:github:henry-macarthur:CS131</id>
  <published>2021-03-29T04:57:52Z</published>
  <updated>2021-03-29T04:57:52Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>hanzhi713: ocaml-ray-tracer</title>
  <author>
   <name>hanzhi713</name>
  </author>
  <link href="https://github.com/hanzhi713/ocaml-ray-tracer" />
  <id>urn:rprimus:github:hanzhi713:ocaml-ray-tracer</id>
  <published>2021-03-29T04:42:31Z</published>
  <updated>2021-03-29T04:42:31Z</updated>
  <content type="html">
   A simply ray tracer in OCaml
  </content>
 </entry>
 <entry>
  <title>StevenEvenU: poker</title>
  <author>
   <name>StevenEvenU</name>
  </author>
  <link href="https://github.com/StevenEvenU/poker" />
  <id>urn:rprimus:github:StevenEvenU:poker</id>
  <published>2021-03-28T22:53:46Z</published>
  <updated>2021-03-28T22:53:46Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>matt-trw90: WebCaml</title>
  <author>
   <name>matt-trw90</name>
  </author>
  <link href="https://github.com/matt-trw90/WebCaml" />
  <id>urn:rprimus:github:matt-trw90:WebCaml</id>
  <published>2021-03-28T21:30:43Z</published>
  <updated>2021-03-28T21:30:43Z</updated>
  <content type="html">
   Text-based internet browser with custom GUI
  </content>
 </entry>
 <entry>
  <title>TristanJ1: Compilateur</title>
  <author>
   <name>TristanJ1</name>
  </author>
  <link href="https://github.com/TristanJ1/Compilateur" />
  <id>urn:rprimus:github:TristanJ1:Compilateur</id>
  <published>2021-03-28T16:00:34Z</published>
  <updated>2021-03-28T16:00:34Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>idkjs: hello-native-melange</title>
  <author>
   <name>idkjs</name>
  </author>
  <link href="https://github.com/idkjs/hello-native-melange" />
  <id>urn:rprimus:github:idkjs:hello-native-melange</id>
  <published>2021-03-28T14:37:34Z</published>
  <updated>2021-03-28T14:37:34Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>SomeBadCoding: somebadcoding.github.io</title>
  <author>
   <name>SomeBadCoding</name>
  </author>
  <link href="https://github.com/SomeBadCoding/somebadcoding.github.io" />
  <id>urn:rprimus:github:SomeBadCoding:somebadcoding.github.io</id>
  <published>2021-03-28T05:27:30Z</published>
  <updated>2021-03-28T05:27:30Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>khemritolya: clash-of-camls</title>
  <author>
   <name>khemritolya</name>
  </author>
  <link href="https://github.com/khemritolya/clash-of-camls" />
  <id>urn:rprimus:github:khemritolya:clash-of-camls</id>
  <published>2021-03-28T00:05:35Z</published>
  <updated>2021-03-28T00:05:35Z</updated>
  <content type="html">
   
  </content>
 </entry>
</feed>
