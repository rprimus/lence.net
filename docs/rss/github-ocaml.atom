<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<link rel="self" type="application/atom+xml" href="http://lence.net/github-ocaml.atom"/>
<id>urn:rprimus:github:newocamlrepos</id>
<updated>2023-03-21T08:38:42Z</updated>
<title type='text'>New GitHub Ocaml Repos</title>
 <entry>
  <title>ClaBoris: OCaml</title>
  <author>
   <name>ClaBoris</name>
  </author>
  <link href="https://github.com/ClaBoris/OCaml" />
  <id>urn:rprimus:github:ClaBoris:OCaml</id>
  <published>2023-03-21T08:38:42Z</published>
  <updated>2023-03-21T08:38:42Z</updated>
  <content type="html">
   Vari esercizi di Programmazione Funzionale. Si accettano correzioni :)
  </content>
 </entry>
 <entry>
  <title>miyamoto012: 20230321_OCaml</title>
  <author>
   <name>miyamoto012</name>
  </author>
  <link href="https://github.com/miyamoto012/20230321_OCaml" />
  <id>urn:rprimus:github:miyamoto012:20230321_OCaml</id>
  <published>2023-03-21T06:20:48Z</published>
  <updated>2023-03-21T06:20:48Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>gaganchandan: BinAnalyze</title>
  <author>
   <name>gaganchandan</name>
  </author>
  <link href="https://github.com/gaganchandan/BinAnalyze" />
  <id>urn:rprimus:github:gaganchandan:BinAnalyze</id>
  <published>2023-03-21T04:03:12Z</published>
  <updated>2023-03-21T04:03:12Z</updated>
  <content type="html">
   An interactive binary analysis framework.
  </content>
 </entry>
 <entry>
  <title>MathiasSuzu: epita-caml-tp4</title>
  <author>
   <name>MathiasSuzu</name>
  </author>
  <link href="https://github.com/MathiasSuzu/epita-caml-tp4" />
  <id>urn:rprimus:github:MathiasSuzu:epita-caml-tp4</id>
  <published>2023-03-21T01:26:57Z</published>
  <updated>2023-03-21T01:26:57Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>MathiasSuzu: epita-caml-tp3</title>
  <author>
   <name>MathiasSuzu</name>
  </author>
  <link href="https://github.com/MathiasSuzu/epita-caml-tp3" />
  <id>urn:rprimus:github:MathiasSuzu:epita-caml-tp3</id>
  <published>2023-03-21T01:26:17Z</published>
  <updated>2023-03-21T01:26:17Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>MathiasSuzu: epita-caml-tp2</title>
  <author>
   <name>MathiasSuzu</name>
  </author>
  <link href="https://github.com/MathiasSuzu/epita-caml-tp2" />
  <id>urn:rprimus:github:MathiasSuzu:epita-caml-tp2</id>
  <published>2023-03-21T01:25:47Z</published>
  <updated>2023-03-21T01:25:47Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>MathiasSuzu: afit-epita</title>
  <author>
   <name>MathiasSuzu</name>
  </author>
  <link href="https://github.com/MathiasSuzu/afit-epita" />
  <id>urn:rprimus:github:MathiasSuzu:afit-epita</id>
  <published>2023-03-21T01:16:18Z</published>
  <updated>2023-03-21T01:16:18Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>MathiasSuzu: epita-caml-init-2027</title>
  <author>
   <name>MathiasSuzu</name>
  </author>
  <link href="https://github.com/MathiasSuzu/epita-caml-init-2027" />
  <id>urn:rprimus:github:MathiasSuzu:epita-caml-init-2027</id>
  <published>2023-03-21T01:03:57Z</published>
  <updated>2023-03-21T01:03:57Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>jtnguyencao: ProjetOcaml</title>
  <author>
   <name>jtnguyencao</name>
  </author>
  <link href="https://github.com/jtnguyencao/ProjetOcaml" />
  <id>urn:rprimus:github:jtnguyencao:ProjetOcaml</id>
  <published>2023-03-20T21:44:13Z</published>
  <updated>2023-03-20T21:44:13Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>sofiagil25: FinalProject</title>
  <author>
   <name>sofiagil25</name>
  </author>
  <link href="https://github.com/sofiagil25/FinalProject" />
  <id>urn:rprimus:github:sofiagil25:FinalProject</id>
  <published>2023-03-20T21:05:48Z</published>
  <updated>2023-03-20T21:05:48Z</updated>
  <content type="html">
   CS 3110 Final Project
  </content>
 </entry>
 <entry>
  <title>gbrigandi: ocaml-hack-compiler</title>
  <author>
   <name>gbrigandi</name>
  </author>
  <link href="https://github.com/gbrigandi/ocaml-hack-compiler" />
  <id>urn:rprimus:github:gbrigandi:ocaml-hack-compiler</id>
  <published>2023-03-20T17:50:56Z</published>
  <updated>2023-03-20T17:50:56Z</updated>
  <content type="html">
   Hack Assembly Language Compiler implemented in OCaml
  </content>
 </entry>
 <entry>
  <title>LeedsJohn: ocaml-knights-tour</title>
  <author>
   <name>LeedsJohn</name>
  </author>
  <link href="https://github.com/LeedsJohn/ocaml-knights-tour" />
  <id>urn:rprimus:github:LeedsJohn:ocaml-knights-tour</id>
  <published>2023-03-20T16:44:09Z</published>
  <updated>2023-03-20T16:44:09Z</updated>
  <content type="html">
   Simple project to find a knight&#039;s tour written in OCaml for learning.
  </content>
 </entry>
 <entry>
  <title>aguillon: ligo</title>
  <author>
   <name>aguillon</name>
  </author>
  <link href="https://github.com/aguillon/ligo" />
  <id>urn:rprimus:github:aguillon:ligo</id>
  <published>2023-03-20T16:38:38Z</published>
  <updated>2023-03-20T16:38:38Z</updated>
  <content type="html">
   Temporary fork of Ligo 0.60 allowing a speedup of Checker compilation
  </content>
 </entry>
 <entry>
  <title>harshithachagantipati: workspace</title>
  <author>
   <name>harshithachagantipati</name>
  </author>
  <link href="https://github.com/harshithachagantipati/workspace" />
  <id>urn:rprimus:github:harshithachagantipati:workspace</id>
  <published>2023-03-20T16:22:22Z</published>
  <updated>2023-03-20T16:22:22Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>Dashy-Dolphin: Loc_modes</title>
  <author>
   <name>Dashy-Dolphin</name>
  </author>
  <link href="https://github.com/Dashy-Dolphin/Loc_modes" />
  <id>urn:rprimus:github:Dashy-Dolphin:Loc_modes</id>
  <published>2023-03-20T14:55:25Z</published>
  <updated>2023-03-20T14:55:25Z</updated>
  <content type="html">
   Loc_modes_argument
  </content>
 </entry>
 <entry>
  <title>taweela: compiler-ocaml</title>
  <author>
   <name>taweela</name>
  </author>
  <link href="https://github.com/taweela/compiler-ocaml" />
  <id>urn:rprimus:github:taweela:compiler-ocaml</id>
  <published>2023-03-20T13:33:27Z</published>
  <updated>2023-03-20T13:33:27Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>MihailBeloshapkin: ocaml-with-variants</title>
  <author>
   <name>MihailBeloshapkin</name>
  </author>
  <link href="https://github.com/MihailBeloshapkin/ocaml-with-variants" />
  <id>urn:rprimus:github:MihailBeloshapkin:ocaml-with-variants</id>
  <published>2023-03-20T12:07:20Z</published>
  <updated>2023-03-20T12:07:20Z</updated>
  <content type="html">
   simple mini-ML interpreter
  </content>
 </entry>
 <entry>
  <title>ivanaf03: p9-11-pp</title>
  <author>
   <name>ivanaf03</name>
  </author>
  <link href="https://github.com/ivanaf03/p9-11-pp" />
  <id>urn:rprimus:github:ivanaf03:p9-11-pp</id>
  <published>2023-03-20T09:11:18Z</published>
  <updated>2023-03-20T09:11:18Z</updated>
  <content type="html">
   Tercera entrega de Paradigmas de la ProgramaciÃ³n
  </content>
 </entry>
 <entry>
  <title>ivanaf03: p5-6-7-8-pp</title>
  <author>
   <name>ivanaf03</name>
  </author>
  <link href="https://github.com/ivanaf03/p5-6-7-8-pp" />
  <id>urn:rprimus:github:ivanaf03:p5-6-7-8-pp</id>
  <published>2023-03-20T09:10:22Z</published>
  <updated>2023-03-20T09:10:22Z</updated>
  <content type="html">
   Segunda entrega de Paradigmas de la ProgramaciÃ³n
  </content>
 </entry>
 <entry>
  <title>ivanaf03: p1-2-3-4-pp</title>
  <author>
   <name>ivanaf03</name>
  </author>
  <link href="https://github.com/ivanaf03/p1-2-3-4-pp" />
  <id>urn:rprimus:github:ivanaf03:p1-2-3-4-pp</id>
  <published>2023-03-20T09:08:53Z</published>
  <updated>2023-03-20T09:08:53Z</updated>
  <content type="html">
   Primera entrega de Paradigmas de la ProgramaciÃ³n
  </content>
 </entry>
 <entry>
  <title>pavlos-io: lru_cache_ocaml</title>
  <author>
   <name>pavlos-io</name>
  </author>
  <link href="https://github.com/pavlos-io/lru_cache_ocaml" />
  <id>urn:rprimus:github:pavlos-io:lru_cache_ocaml</id>
  <published>2023-03-20T01:48:27Z</published>
  <updated>2023-03-20T01:48:27Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>hflsmax: bite-impl</title>
  <author>
   <name>hflsmax</name>
  </author>
  <link href="https://github.com/hflsmax/bite-impl" />
  <id>urn:rprimus:github:hflsmax:bite-impl</id>
  <published>2023-03-20T00:26:52Z</published>
  <updated>2023-03-20T00:26:52Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>adam-clay: Ocaml_interpreter</title>
  <author>
   <name>adam-clay</name>
  </author>
  <link href="https://github.com/adam-clay/Ocaml_interpreter" />
  <id>urn:rprimus:github:adam-clay:Ocaml_interpreter</id>
  <published>2023-03-19T22:01:29Z</published>
  <updated>2023-03-19T22:01:29Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>ArulselvanMadhavan: olirvu</title>
  <author>
   <name>ArulselvanMadhavan</name>
  </author>
  <link href="https://github.com/ArulselvanMadhavan/olirvu" />
  <id>urn:rprimus:github:ArulselvanMadhavan:olirvu</id>
  <published>2023-03-19T19:50:27Z</published>
  <updated>2023-03-19T19:50:27Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>ayadav313: RECM</title>
  <author>
   <name>ayadav313</name>
  </author>
  <link href="https://github.com/ayadav313/RECM" />
  <id>urn:rprimus:github:ayadav313:RECM</id>
  <published>2023-03-19T18:14:46Z</published>
  <updated>2023-03-19T18:14:46Z</updated>
  <content type="html">
   This assignment consists in extending REC to support mutually recursive function definintions. The resulting language will be called RECM in these note
  </content>
 </entry>
 <entry>
  <title>josemiguely: PocketCompiler</title>
  <author>
   <name>josemiguely</name>
  </author>
  <link href="https://github.com/josemiguely/PocketCompiler" />
  <id>urn:rprimus:github:josemiguely:PocketCompiler</id>
  <published>2023-03-19T16:18:44Z</published>
  <updated>2023-03-19T16:18:44Z</updated>
  <content type="html">
   Experimental Compiler made in Ocaml.
  </content>
 </entry>
 <entry>
  <title>bahbyega: miniML-with-labeled-args</title>
  <author>
   <name>bahbyega</name>
  </author>
  <link href="https://github.com/bahbyega/miniML-with-labeled-args" />
  <id>urn:rprimus:github:bahbyega:miniML-with-labeled-args</id>
  <published>2023-03-19T07:48:52Z</published>
  <updated>2023-03-19T07:48:52Z</updated>
  <content type="html">
   Implementation of OCaml base + labeled and optional arguments language
  </content>
 </entry>
</feed>
