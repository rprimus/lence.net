<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<link rel="self" type="application/atom+xml" href="http://lence.net/github-go.atom"/>
<id>urn:rprimus:github:newgorepos</id>
<updated>2021-04-14T15:15:55Z</updated>
<title type='text'>New GitHub Go Repos</title>
 <entry>
  <title>EachinChung: oauth2</title>
  <author>
   <name>EachinChung</name>
  </author>
  <link href="https://github.com/EachinChung/oauth2" />
  <id>urn:rprimus:github:EachinChung:oauth2</id>
  <published>2021-04-14T15:15:55Z</published>
  <updated>2021-04-14T15:15:55Z</updated>
  <content type="html">
   ä¸ä¸ªåºäºginçoauth2é¡¹ç®ï¼ç®åæ¯æå¾®ä¿¡ç»å½
  </content>
 </entry>
 <entry>
  <title>sirinibin: go-postgresql-rest</title>
  <author>
   <name>sirinibin</name>
  </author>
  <link href="https://github.com/sirinibin/go-postgresql-rest" />
  <id>urn:rprimus:github:sirinibin:go-postgresql-rest</id>
  <published>2021-04-14T14:56:31Z</published>
  <updated>2021-04-14T14:56:31Z</updated>
  <content type="html">
   This is a Ready to deploy GoLang / Go Micro service with OAuth2 authentication which uses JWT &amp; Redis.You can use this if you want to quick start developing your own custom Micro service by skipping 95% of your scratch works. Hopefully this will save lot of your time as this API includes all the basic stuffs you need to get started.
  </content>
 </entry>
 <entry>
  <title>abhir98: ransomware</title>
  <author>
   <name>abhir98</name>
  </author>
  <link href="https://github.com/abhir98/ransomware" />
  <id>urn:rprimus:github:abhir98:ransomware</id>
  <published>2021-04-14T14:09:31Z</published>
  <updated>2021-04-14T14:09:31Z</updated>
  <content type="html">
   Project Summary This project was developed for the Computer Security course at my academic degree. Basically, it will encrypt your files in background using AES-256-CTR, a strong encryption algorithm, using RSA-4096 to secure the exchange with the server, optionally using the Tor SOCKS5 Proxy. The base functionality is what you see in the famous ransomware Cryptolocker.  The project is composed by three parts, the server, the malware and the unlocker.  The server store the victim&#039;s identification key along with the encryption key used by the malware.  The malware encrypt with a RSA-4096 (RSA-OAEP-4096 + SHA256) public key any payload before send then to the server. This approach with the optional Tor Proxy and a .onion domain allow you to hide almost completely your server.  Features Run in Background (or not) Encrypt files using AES-256-CTR(Counter Mode) with random IV for each file. Multithreaded. RSA-4096 to secure the client/server communication. Includes an Unlocker. Optional TOR Proxy support. Use an AES CTR Cypher with stream encryption to avoid load an entire file into memory. Walk all drives by default. Docker image for compilation. Building the binaries DON&#039;T RUN ransomware.exe IN YOUR PERSONAL MACHINE, EXECUTE ONLY IN A TEST ENVIRONMENT! I&#039;m not resposible if you acidentally encrypt all of your disks!  First of all download the project outside your $GOPATH:  git clone github.com/mauri870/ransomware cd ransomware If you have Docker skip to the next section.  You need Go at least 1.11.2 with the $GOPATH/bin in your $PATH and $GOROOT pointing to your Go installation folder. For me:  export GOPATH=~/gopath export PATH=$PATH:$GOPATH/bin export GOROOT=/usr/local/go Build the project require a lot of steps, like the RSA key generation, build three binaries, embed manifest files, so, let&#039;s leave make do your job:  make deps make You can build the server for windows with make -e GOOS=windows.  Docker ./build-docker.sh make Config Parameters You can change some of the configs during compilation. Instead of run only make, you can use the following variables:  HIDDEN=&#039;-H windowsgui&#039; # optional. If present the malware will run in background  USE_TOR=true # optional. If present the malware will download the Tor proxy and use it to contact the server  SERVER_HOST=mydomain.com # the domain used to connect to your server. localhost, 0.0.0.0, 127.0.0.1 works too if you run the server on the same machine as the malware  SERVER_PORT=8080 # the server port, if using a domain you can set this to 80  GOOS=linux # the target os to compile the server. Eg: darwin, linux, windows Example:  make -e USE_TOR=true SERVER_HOST=mydomain.com SERVER_PORT=80 GOOS=darwin  The SERVER_ variables above only apply to the malware. The server has a flag --port that you can use to change the port that it will listen on.  DON&#039;T RUN ransomware.exe IN YOUR PERSONAL MACHINE, EXECUTE ONLY IN A TEST ENVIRONMENT! I&#039;m not resposible if you acidentally encrypt all of your disks!  Step by Step Demo and How it Works For this demo I&#039;ll use two machines, my personal linux machine and a windows 10 VM.  For the sake of simplicity, I have a folder mapped to the VM, so I can compile from my linux and copy to the vm.  In this demo we will use the Ngrok tool, this will allow us to expose our server using a domain, but you can use your own domain or ip address if you want. We are also going to enable the Tor transport, so .onion domains will work without problems.  First of all lets start our external domain:  ngrok http 8080 This command will give us a url like http://2af7161c.ngrok.io. Keep this command running otherwise the malware won&#039;t reach our server.  Let&#039;s compile the binaries (remember to replace the domain):  make -e SERVER_HOST=2af7161c.ngrok.io SERVER_PORT=80 USE_TOR=true The SERVER_PORT needs to be 80 in this case, since ngrok redirects 2af7161c.ngrok.io:80 to your local server port 8080.  After build, a binary called ransomware.exe, and unlocker.exe along with a folder called server will be generated in the bin folder. The execution of ransomware.exe and unlocker.exe (even if you use a diferent GOOS variable during compilation) is locked to windows machines only.  Enter the server directory from another terminal and start it:  cd bin/server &amp;&amp; ./server --port 8080 To make sure that all is working correctly, make a http request to http://2af7161c.ngrok.io:  curl http://2af7161c.ngrok.io If you see a OK and some logs in the server output you are ready to go.  Now move the ransomware.exe and unlocker.exe to the VM along with some dummy files to test the malware. You can take a look at cmd/common.go to see some configuration options like file extensions to match, directories to scan, skipped folders, max size to match a file among others.  Then simply run the ransomware.exe and see the magic happens ð.  The window that you see can be hidden using the HIDDEN option described in the compilation section.  After download, extract and start the Tor proxy, the malware waits until the tor bootstrapping is done and then proceed with the key exchange with the server. The client/server handshake takes place and the client payload, encrypted with an RSA-4096 public key must be correctly decrypted on the server. The victim identification and encryption keys are stored in a Golang embedded database called BoltDB (it also persists on disk). When completed we get into the find, match and encrypt phase, up to N-cores workers start to encrypt files matched by the patterns defined. This proccess is really quick and in seconds all of your files will be gone.  The encryption key exchanged with the server was used to encrypt all of your files. Each file has a random primitive called IV, generated individually and saved as the first 16 bytes of the encrypted content. The algorithm used is AES-256-CTR, a good AES cypher with streaming mode of operation such that the file size is left intact.  The only two sources of information available about what just happen are the READ_TO_DECRYPT.html and FILES_ENCRYPTED.html in the Desktop.  In theory, to decrypt your files you need to send an amount of BTC to the attacker&#039;s wallet, followed by a contact sending your ID(located on the file created on desktop). If the attacker can confirm your payment it will possibly(or maybe not) return your encryption key and the unlocker.exe and you can use then to recover your files. This exchange can be accomplished in several ways and WILL NOT be implemented in this project for obvious reasons.  Let&#039;s suppose you get your encryption key back. To recover the correct key point to the following url:  curl -k http://2af7161c.ngrok.io/api/keys/:id Where :id is your identification stored in the file on desktop. After, run the unlocker.exe by double click and follow the instructions.  That&#039;s it, got your files back ð  The server has only two endpoints:  POST api/keys/add - Used by the malware to persist new keys. Some verifications are made, like the verification of the RSA autenticity. Returns 204 (empty content) in case of success or a json error.  GET api/keys/:id - Id is a 32 characters parameter, representing an Id already persisted. Returns a json containing the encryption key or a json error  The end As you can see, building a functional ransomware, with some of the best existing algorithms is not difficult, anyone with some programming skills can build that in any programming language.
  </content>
 </entry>
 <entry>
  <title>chenjia404: p2ptunnel</title>
  <author>
   <name>chenjia404</name>
  </author>
  <link href="https://github.com/chenjia404/p2ptunnel" />
  <id>urn:rprimus:github:chenjia404:p2ptunnel</id>
  <published>2021-04-14T13:24:37Z</published>
  <updated>2021-04-14T13:24:37Z</updated>
  <content type="html">
   ä¸ä¸ªåºäºp2pçtcpãudpåç½ç©¿éé§éå·¥å·
  </content>
 </entry>
 <entry>
  <title>riyadlusholihin: mcpayment</title>
  <author>
   <name>riyadlusholihin</name>
  </author>
  <link href="https://github.com/riyadlusholihin/mcpayment" />
  <id>urn:rprimus:github:riyadlusholihin:mcpayment</id>
  <published>2021-04-14T11:45:44Z</published>
  <updated>2021-04-14T11:45:44Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>datreeio: datree</title>
  <author>
   <name>datreeio</name>
  </author>
  <link href="https://github.com/datreeio/datree" />
  <id>urn:rprimus:github:datreeio:datree</id>
  <published>2021-04-14T11:44:56Z</published>
  <updated>2021-04-14T11:44:56Z</updated>
  <content type="html">
   Prevent Kubernetes misconfigurations from ever making it  (again ð¤) to production! The CLI integration provides policy enforcement solution to run automatic checks for rule violations.  Docs: https://hub.datree.io
  </content>
 </entry>
 <entry>
  <title>c9s: my-lucky-draw-telegram-bot</title>
  <author>
   <name>c9s</name>
  </author>
  <link href="https://github.com/c9s/my-lucky-draw-telegram-bot" />
  <id>urn:rprimus:github:c9s:my-lucky-draw-telegram-bot</id>
  <published>2021-04-14T11:04:57Z</published>
  <updated>2021-04-14T11:04:57Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>singhrohit487: golang-pinger-program</title>
  <author>
   <name>singhrohit487</name>
  </author>
  <link href="https://github.com/singhrohit487/golang-pinger-program" />
  <id>urn:rprimus:github:singhrohit487:golang-pinger-program</id>
  <published>2021-04-14T10:36:50Z</published>
  <updated>2021-04-14T10:36:50Z</updated>
  <content type="html">
   This repository contains a simple program written in Golang named pinger.
  </content>
 </entry>
 <entry>
  <title>ypapax: 3dots</title>
  <author>
   <name>ypapax</name>
  </author>
  <link href="https://github.com/ypapax/3dots" />
  <id>urn:rprimus:github:ypapax:3dots</id>
  <published>2021-04-14T09:27:20Z</published>
  <updated>2021-04-14T09:27:20Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>rvolosatovs: rund</title>
  <author>
   <name>rvolosatovs</name>
  </author>
  <link href="https://github.com/rvolosatovs/rund" />
  <id>urn:rprimus:github:rvolosatovs:rund</id>
  <published>2021-04-14T08:54:09Z</published>
  <updated>2021-04-14T08:54:09Z</updated>
  <content type="html">
   Run arbitrary containerized Linux processes over gRPC with mTLS auth
  </content>
 </entry>
 <entry>
  <title>bn0901: jiangziyaCICD</title>
  <author>
   <name>bn0901</name>
  </author>
  <link href="https://github.com/bn0901/jiangziyaCICD" />
  <id>urn:rprimus:github:bn0901:jiangziyaCICD</id>
  <published>2021-04-14T08:53:09Z</published>
  <updated>2021-04-14T08:53:09Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>PlasmaNeon: my_gateway</title>
  <author>
   <name>PlasmaNeon</name>
  </author>
  <link href="https://github.com/PlasmaNeon/my_gateway" />
  <id>urn:rprimus:github:PlasmaNeon:my_gateway</id>
  <published>2021-04-14T08:40:09Z</published>
  <updated>2021-04-14T08:40:09Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>containeroo: otpgen</title>
  <author>
   <name>containeroo</name>
  </author>
  <link href="https://github.com/containeroo/otpgen" />
  <id>urn:rprimus:github:containeroo:otpgen</id>
  <published>2021-04-14T07:54:31Z</published>
  <updated>2021-04-14T07:54:31Z</updated>
  <content type="html">
   Simple CLI tool to generate OTP tokens
  </content>
 </entry>
 <entry>
  <title>uvulpos: goMailPrint</title>
  <author>
   <name>uvulpos</name>
  </author>
  <link href="https://github.com/uvulpos/goMailPrint" />
  <id>urn:rprimus:github:uvulpos:goMailPrint</id>
  <published>2021-04-14T07:23:49Z</published>
  <updated>2021-04-14T07:23:49Z</updated>
  <content type="html">
   A simple tool to print your emails &amp; attachments
  </content>
 </entry>
 <entry>
  <title>plopezlpz: fiber-starter</title>
  <author>
   <name>plopezlpz</name>
  </author>
  <link href="https://github.com/plopezlpz/fiber-starter" />
  <id>urn:rprimus:github:plopezlpz:fiber-starter</id>
  <published>2021-04-14T06:37:51Z</published>
  <updated>2021-04-14T06:37:51Z</updated>
  <content type="html">
   Opinionated fiber Rest API microservice
  </content>
 </entry>
 <entry>
  <title>sk1122: Kanban-Board</title>
  <author>
   <name>sk1122</name>
  </author>
  <link href="https://github.com/sk1122/Kanban-Board" />
  <id>urn:rprimus:github:sk1122:Kanban-Board</id>
  <published>2021-04-14T05:14:59Z</published>
  <updated>2021-04-14T05:14:59Z</updated>
  <content type="html">
   Kanban Board - You can create Boards, Manage you Day
  </content>
 </entry>
 <entry>
  <title>wijaysali: pencarian-user</title>
  <author>
   <name>wijaysali</name>
  </author>
  <link href="https://github.com/wijaysali/pencarian-user" />
  <id>urn:rprimus:github:wijaysali:pencarian-user</id>
  <published>2021-04-14T04:23:50Z</published>
  <updated>2021-04-14T04:23:50Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>haunt98: color</title>
  <author>
   <name>haunt98</name>
  </author>
  <link href="https://github.com/haunt98/color" />
  <id>urn:rprimus:github:haunt98:color</id>
  <published>2021-04-14T03:50:40Z</published>
  <updated>2021-04-14T03:50:40Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>kelvins-io: micro-mall-search</title>
  <author>
   <name>kelvins-io</name>
  </author>
  <link href="https://github.com/kelvins-io/micro-mall-search" />
  <id>urn:rprimus:github:kelvins-io:micro-mall-search</id>
  <published>2021-04-14T03:15:08Z</published>
  <updated>2021-04-14T03:15:08Z</updated>
  <content type="html">
   å¾®ååï¼æç´¢æå¡ï¼go-gprcå¾®æå¡
  </content>
 </entry>
 <entry>
  <title>kelvins-io: micro-mall-pay</title>
  <author>
   <name>kelvins-io</name>
  </author>
  <link href="https://github.com/kelvins-io/micro-mall-pay" />
  <id>urn:rprimus:github:kelvins-io:micro-mall-pay</id>
  <published>2021-04-14T03:04:10Z</published>
  <updated>2021-04-14T03:04:10Z</updated>
  <content type="html">
   å¾®æå¡ï¼æ¯ä»æå¡ï¼go-gprcå¾®æå¡
  </content>
 </entry>
 <entry>
  <title>Chuyukang: k8s-practice</title>
  <author>
   <name>Chuyukang</name>
  </author>
  <link href="https://github.com/Chuyukang/k8s-practice" />
  <id>urn:rprimus:github:Chuyukang:k8s-practice</id>
  <published>2021-04-14T03:01:27Z</published>
  <updated>2021-04-14T03:01:27Z</updated>
  <content type="html">
   Use client-go to retrive k8s pods metrics
  </content>
 </entry>
 <entry>
  <title>kelvins-io: micro-mall-order</title>
  <author>
   <name>kelvins-io</name>
  </author>
  <link href="https://github.com/kelvins-io/micro-mall-order" />
  <id>urn:rprimus:github:kelvins-io:micro-mall-order</id>
  <published>2021-04-14T02:59:24Z</published>
  <updated>2021-04-14T02:59:24Z</updated>
  <content type="html">
   å¾®ååï¼è®¢åæå¡ï¼go gRPC
  </content>
 </entry>
 <entry>
  <title>kelvins-io: micro-mall-sku</title>
  <author>
   <name>kelvins-io</name>
  </author>
  <link href="https://github.com/kelvins-io/micro-mall-sku" />
  <id>urn:rprimus:github:kelvins-io:micro-mall-sku</id>
  <published>2021-04-14T02:50:06Z</published>
  <updated>2021-04-14T02:50:06Z</updated>
  <content type="html">
   å¾®ååï¼åºå­æå¡ï¼go-gprcå¾®æå¡
  </content>
 </entry>
 <entry>
  <title>kelvins-io: micro-mall-users</title>
  <author>
   <name>kelvins-io</name>
  </author>
  <link href="https://github.com/kelvins-io/micro-mall-users" />
  <id>urn:rprimus:github:kelvins-io:micro-mall-users</id>
  <published>2021-04-14T02:38:00Z</published>
  <updated>2021-04-14T02:38:00Z</updated>
  <content type="html">
   å¾®åå-ç¨æ·ä¸­å¿ï¼goå¾®æå¡
  </content>
 </entry>
 <entry>
  <title>lrweck: go-video-stream</title>
  <author>
   <name>lrweck</name>
  </author>
  <link href="https://github.com/lrweck/go-video-stream" />
  <id>urn:rprimus:github:lrweck:go-video-stream</id>
  <published>2021-04-14T02:10:13Z</published>
  <updated>2021-04-14T02:10:13Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>electricbubble: gidevice</title>
  <author>
   <name>electricbubble</name>
  </author>
  <link href="https://github.com/electricbubble/gidevice" />
  <id>urn:rprimus:github:electricbubble:gidevice</id>
  <published>2021-04-14T02:01:54Z</published>
  <updated>2021-04-14T02:01:54Z</updated>
  <content type="html">
   communicate with iOS devices implemented with Golang
  </content>
 </entry>
 <entry>
  <title>Sudo-Superman: Excalibur</title>
  <author>
   <name>Sudo-Superman</name>
  </author>
  <link href="https://github.com/Sudo-Superman/Excalibur" />
  <id>urn:rprimus:github:Sudo-Superman:Excalibur</id>
  <published>2021-04-14T01:58:55Z</published>
  <updated>2021-04-14T01:58:55Z</updated>
  <content type="html">
   A Next Generation APT Scanner via Go
  </content>
 </entry>
 <entry>
  <title>Kubernetes-extension: utils</title>
  <author>
   <name>Kubernetes-extension</name>
  </author>
  <link href="https://github.com/Kubernetes-extension/utils" />
  <id>urn:rprimus:github:Kubernetes-extension:utils</id>
  <published>2021-04-14T01:54:07Z</published>
  <updated>2021-04-14T01:54:07Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>elky92: packer-plugin-zstdcompress</title>
  <author>
   <name>elky92</name>
  </author>
  <link href="https://github.com/elky92/packer-plugin-zstdcompress" />
  <id>urn:rprimus:github:elky92:packer-plugin-zstdcompress</id>
  <published>2021-04-14T01:14:25Z</published>
  <updated>2021-04-14T01:14:25Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>engelsjk: geojson2svg</title>
  <author>
   <name>engelsjk</name>
  </author>
  <link href="https://github.com/engelsjk/geojson2svg" />
  <id>urn:rprimus:github:engelsjk:geojson2svg</id>
  <published>2021-04-14T00:36:40Z</published>
  <updated>2021-04-14T00:36:40Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>lubiedo: yav</title>
  <author>
   <name>lubiedo</name>
  </author>
  <link href="https://github.com/lubiedo/yav" />
  <id>urn:rprimus:github:lubiedo:yav</id>
  <published>2021-04-13T23:25:39Z</published>
  <updated>2021-04-13T23:25:39Z</updated>
  <content type="html">
   yav is a Golang &quot;live&quot; static blog
  </content>
 </entry>
 <entry>
  <title>antklim: dev-duck</title>
  <author>
   <name>antklim</name>
  </author>
  <link href="https://github.com/antklim/dev-duck" />
  <id>urn:rprimus:github:antklim:dev-duck</id>
  <published>2021-04-13T21:29:29Z</published>
  <updated>2021-04-13T21:29:29Z</updated>
  <content type="html">
   Fun experiments in go
  </content>
 </entry>
 <entry>
  <title>Ink-33: XAPKInstaller</title>
  <author>
   <name>Ink-33</name>
  </author>
  <link href="https://github.com/Ink-33/XAPKInstaller" />
  <id>urn:rprimus:github:Ink-33:XAPKInstaller</id>
  <published>2021-04-13T18:32:57Z</published>
  <updated>2021-04-13T18:32:57Z</updated>
  <content type="html">
   åºäºadbçXAPKå®è£å¨
  </content>
 </entry>
 <entry>
  <title>sirinibin: golang-mysql-redis-jwt-microservice</title>
  <author>
   <name>sirinibin</name>
  </author>
  <link href="https://github.com/sirinibin/golang-mysql-redis-jwt-microservice" />
  <id>urn:rprimus:github:sirinibin:golang-mysql-redis-jwt-microservice</id>
  <published>2021-04-13T18:24:10Z</published>
  <updated>2021-04-13T18:24:10Z</updated>
  <content type="html">
   This is a Ready to deploy GoLang / Go Micro service with OAuth2 authentication which uses JWT &amp; Redis.You can use this if you want to quick start developing your own custom Micro service by skipping 95% of your scratch works. Hopefully this will save lot of your time as this API includes all the basic stuffs you need to get started.
  </content>
 </entry>
 <entry>
  <title>monkrus: turingTest</title>
  <author>
   <name>monkrus</name>
  </author>
  <link href="https://github.com/monkrus/turingTest" />
  <id>urn:rprimus:github:monkrus:turingTest</id>
  <published>2021-04-13T17:56:37Z</published>
  <updated>2021-04-13T17:56:37Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>ofeefo: snip</title>
  <author>
   <name>ofeefo</name>
  </author>
  <link href="https://github.com/ofeefo/snip" />
  <id>urn:rprimus:github:ofeefo:snip</id>
  <published>2021-04-13T16:56:33Z</published>
  <updated>2021-04-13T16:56:33Z</updated>
  <content type="html">
   A local snippet manager in Go
  </content>
 </entry>
 <entry>
  <title>felixge: pprofutils</title>
  <author>
   <name>felixge</name>
  </author>
  <link href="https://github.com/felixge/pprofutils" />
  <id>urn:rprimus:github:felixge:pprofutils</id>
  <published>2021-04-13T16:11:41Z</published>
  <updated>2021-04-13T16:11:41Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>changkun: office-status</title>
  <author>
   <name>changkun</name>
  </author>
  <link href="https://github.com/changkun/office-status" />
  <id>urn:rprimus:github:changkun:office-status</id>
  <published>2021-04-13T15:53:33Z</published>
  <updated>2021-04-13T15:53:33Z</updated>
  <content type="html">
   Is Changkun in the Office?
  </content>
 </entry>
 <entry>
  <title>wangso: KubeEdge-rpi-dev</title>
  <author>
   <name>wangso</name>
  </author>
  <link href="https://github.com/wangso/KubeEdge-rpi-dev" />
  <id>urn:rprimus:github:wangso:KubeEdge-rpi-dev</id>
  <published>2021-04-13T15:30:34Z</published>
  <updated>2021-04-13T15:30:34Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>laironacosta: ms-echo-go</title>
  <author>
   <name>laironacosta</name>
  </author>
  <link href="https://github.com/laironacosta/ms-echo-go" />
  <id>urn:rprimus:github:laironacosta:ms-echo-go</id>
  <published>2021-04-13T15:27:42Z</published>
  <updated>2021-04-13T15:27:42Z</updated>
  <content type="html">
   Microservice: RestfulAPI with Echo Framework
  </content>
 </entry>
 <entry>
  <title>lbh2001: ginInterpreting</title>
  <author>
   <name>lbh2001</name>
  </author>
  <link href="https://github.com/lbh2001/ginInterpreting" />
  <id>urn:rprimus:github:lbh2001:ginInterpreting</id>
  <published>2021-04-13T14:45:20Z</published>
  <updated>2021-04-13T14:45:20Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>xiaopeng77: go-ini</title>
  <author>
   <name>xiaopeng77</name>
  </author>
  <link href="https://github.com/xiaopeng77/go-ini" />
  <id>urn:rprimus:github:xiaopeng77:go-ini</id>
  <published>2021-04-13T13:56:22Z</published>
  <updated>2021-04-13T13:56:22Z</updated>
  <content type="html">
   Parsing ini configuration files to structs
  </content>
 </entry>
 <entry>
  <title>kha7iq: pingme</title>
  <author>
   <name>kha7iq</name>
  </author>
  <link href="https://github.com/kha7iq/pingme" />
  <id>urn:rprimus:github:kha7iq:pingme</id>
  <published>2021-04-13T13:49:32Z</published>
  <updated>2021-04-13T13:49:32Z</updated>
  <content type="html">
   PingMe is a CLI tool which provides the ability to send messages or alerts to multiple messaging platforms &amp; email.
  </content>
 </entry>
 <entry>
  <title>w9624: go-githubhost</title>
  <author>
   <name>w9624</name>
  </author>
  <link href="https://github.com/w9624/go-githubhost" />
  <id>urn:rprimus:github:w9624:go-githubhost</id>
  <published>2021-04-13T13:28:44Z</published>
  <updated>2021-04-13T13:28:44Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>Myu-Unix: mirkwood_engine</title>
  <author>
   <name>Myu-Unix</name>
  </author>
  <link href="https://github.com/Myu-Unix/mirkwood_engine" />
  <id>urn:rprimus:github:Myu-Unix:mirkwood_engine</id>
  <published>2021-04-13T12:57:17Z</published>
  <updated>2021-04-13T12:57:17Z</updated>
  <content type="html">
   2D virtual tabletop prototype
  </content>
 </entry>
 <entry>
  <title>hypereg: ShopBotGO</title>
  <author>
   <name>hypereg</name>
  </author>
  <link href="https://github.com/hypereg/ShopBotGO" />
  <id>urn:rprimus:github:hypereg:ShopBotGO</id>
  <published>2021-04-13T12:38:56Z</published>
  <updated>2021-04-13T12:38:56Z</updated>
  <content type="html">
   Own bot for my shop.
  </content>
 </entry>
 <entry>
  <title>aboutbo: Dsan</title>
  <author>
   <name>aboutbo</name>
  </author>
  <link href="https://github.com/aboutbo/Dsan" />
  <id>urn:rprimus:github:aboutbo:Dsan</id>
  <published>2021-04-13T12:19:58Z</published>
  <updated>2021-04-13T12:19:58Z</updated>
  <content type="html">
   a directory scanner
  </content>
 </entry>
 <entry>
  <title>IEP: telegram-random-image-carousel</title>
  <author>
   <name>IEP</name>
  </author>
  <link href="https://github.com/IEP/telegram-random-image-carousel" />
  <id>urn:rprimus:github:IEP:telegram-random-image-carousel</id>
  <published>2021-04-13T12:11:05Z</published>
  <updated>2021-04-13T12:11:05Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>xiao-nanbei: MouseHole</title>
  <author>
   <name>xiao-nanbei</name>
  </author>
  <link href="https://github.com/xiao-nanbei/MouseHole" />
  <id>urn:rprimus:github:xiao-nanbei:MouseHole</id>
  <published>2021-04-13T11:07:44Z</published>
  <updated>2021-04-13T11:07:44Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>tetratom: html</title>
  <author>
   <name>tetratom</name>
  </author>
  <link href="https://github.com/tetratom/html" />
  <id>urn:rprimus:github:tetratom:html</id>
  <published>2021-04-13T09:04:32Z</published>
  <updated>2021-04-13T09:04:32Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>su29029: zongshe-demo</title>
  <author>
   <name>su29029</name>
  </author>
  <link href="https://github.com/su29029/zongshe-demo" />
  <id>urn:rprimus:github:su29029:zongshe-demo</id>
  <published>2021-04-13T09:04:19Z</published>
  <updated>2021-04-13T09:04:19Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>3490654586: B-TREE</title>
  <author>
   <name>3490654586</name>
  </author>
  <link href="https://github.com/3490654586/B-TREE" />
  <id>urn:rprimus:github:3490654586:B-TREE</id>
  <published>2021-04-13T07:25:24Z</published>
  <updated>2021-04-13T07:25:24Z</updated>
  <content type="html">
   B+TREE
  </content>
 </entry>
 <entry>
  <title>hetiansu5: migration</title>
  <author>
   <name>hetiansu5</name>
  </author>
  <link href="https://github.com/hetiansu5/migration" />
  <id>urn:rprimus:github:hetiansu5:migration</id>
  <published>2021-04-13T06:34:26Z</published>
  <updated>2021-04-13T06:34:26Z</updated>
  <content type="html">
   Database schema builder
  </content>
 </entry>
 <entry>
  <title>ophum: geekAlert</title>
  <author>
   <name>ophum</name>
  </author>
  <link href="https://github.com/ophum/geekAlert" />
  <id>urn:rprimus:github:ophum:geekAlert</id>
  <published>2021-04-13T06:24:24Z</published>
  <updated>2021-04-13T06:24:24Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>tenfyzhong: gengotag</title>
  <author>
   <name>tenfyzhong</name>
  </author>
  <link href="https://github.com/tenfyzhong/gengotag" />
  <id>urn:rprimus:github:tenfyzhong:gengotag</id>
  <published>2021-04-13T05:51:14Z</published>
  <updated>2021-04-13T05:51:14Z</updated>
  <content type="html">
   gengotag is a tool to generate a struct with tag from a json file.
  </content>
 </entry>
 <entry>
  <title>PearceDuan: wechat-dat2picture</title>
  <author>
   <name>PearceDuan</name>
  </author>
  <link href="https://github.com/PearceDuan/wechat-dat2picture" />
  <id>urn:rprimus:github:PearceDuan:wechat-dat2picture</id>
  <published>2021-04-13T04:43:32Z</published>
  <updated>2021-04-13T04:43:32Z</updated>
  <content type="html">
   å°å¾®ä¿¡ç®å½ä¸­ç.datåç¼çå¾çè½¬æ¢æjpegãpngæ ¼å¼
  </content>
 </entry>
 <entry>
  <title>ubergeek77: tinylog</title>
  <author>
   <name>ubergeek77</name>
  </author>
  <link href="https://github.com/ubergeek77/tinylog" />
  <id>urn:rprimus:github:ubergeek77:tinylog</id>
  <published>2021-04-13T04:14:45Z</published>
  <updated>2021-04-13T04:14:45Z</updated>
  <content type="html">
   A lightweight and customizable Golang logger
  </content>
 </entry>
 <entry>
  <title>oam-dev: terraform-controller</title>
  <author>
   <name>oam-dev</name>
  </author>
  <link href="https://github.com/oam-dev/terraform-controller" />
  <id>urn:rprimus:github:oam-dev:terraform-controller</id>
  <published>2021-04-13T02:59:23Z</published>
  <updated>2021-04-13T02:59:23Z</updated>
  <content type="html">
   A Kubernetes Terraform Controller
  </content>
 </entry>
 <entry>
  <title>shenwei356: strobemers</title>
  <author>
   <name>shenwei356</name>
  </author>
  <link href="https://github.com/shenwei356/strobemers" />
  <id>urn:rprimus:github:shenwei356:strobemers</id>
  <published>2021-04-13T02:36:33Z</published>
  <updated>2021-04-13T02:36:33Z</updated>
  <content type="html">
   A Go implementation of the strobemers (https://github.com/ksahlin/strobemers)
  </content>
 </entry>
 <entry>
  <title>ImVexed: mockgen</title>
  <author>
   <name>ImVexed</name>
  </author>
  <link href="https://github.com/ImVexed/mockgen" />
  <id>urn:rprimus:github:ImVexed:mockgen</id>
  <published>2021-04-13T01:22:47Z</published>
  <updated>2021-04-13T01:22:47Z</updated>
  <content type="html">
   A CLI utility to generate arbitrarily large realistic mock data sets
  </content>
 </entry>
 <entry>
  <title>gennaro-tedesco: boilit</title>
  <author>
   <name>gennaro-tedesco</name>
  </author>
  <link href="https://github.com/gennaro-tedesco/boilit" />
  <id>urn:rprimus:github:gennaro-tedesco:boilit</id>
  <published>2021-04-12T23:19:32Z</published>
  <updated>2021-04-12T23:19:32Z</updated>
  <content type="html">
   create boilerplate structure for neovim plugins
  </content>
 </entry>
 <entry>
  <title>raphaelreyna: archnemesis</title>
  <author>
   <name>raphaelreyna</name>
  </author>
  <link href="https://github.com/raphaelreyna/archnemesis" />
  <id>urn:rprimus:github:raphaelreyna:archnemesis</id>
  <published>2021-04-12T23:11:56Z</published>
  <updated>2021-04-12T23:11:56Z</updated>
  <content type="html">
   Janky software for training a pong playing archnemesis using a genetic algorithm.
  </content>
 </entry>
 <entry>
  <title>koddr: tutorial-go-i18n</title>
  <author>
   <name>koddr</name>
  </author>
  <link href="https://github.com/koddr/tutorial-go-i18n" />
  <id>urn:rprimus:github:koddr:tutorial-go-i18n</id>
  <published>2021-04-12T21:28:44Z</published>
  <updated>2021-04-12T21:28:44Z</updated>
  <content type="html">
   ð Tutorial: An easy way to translate your Golang application
  </content>
 </entry>
 <entry>
  <title>phoban01: streaming-unzipper</title>
  <author>
   <name>phoban01</name>
  </author>
  <link href="https://github.com/phoban01/streaming-unzipper" />
  <id>urn:rprimus:github:phoban01:streaming-unzipper</id>
  <published>2021-04-12T21:27:06Z</published>
  <updated>2021-04-12T21:27:06Z</updated>
  <content type="html">
   Demo of streaming unzip with S3 &amp; Lambda
  </content>
 </entry>
 <entry>
  <title>reactive-tech: kubegres</title>
  <author>
   <name>reactive-tech</name>
  </author>
  <link href="https://github.com/reactive-tech/kubegres" />
  <id>urn:rprimus:github:reactive-tech:kubegres</id>
  <published>2021-04-12T20:51:59Z</published>
  <updated>2021-04-12T20:51:59Z</updated>
  <content type="html">
   Kubegres is a Kubernetes operator allowing to create a cluster of PostgreSql instances and manage databases replication, failover and backup.
  </content>
 </entry>
 <entry>
  <title>miyoyo: FlutterDoc</title>
  <author>
   <name>miyoyo</name>
  </author>
  <link href="https://github.com/miyoyo/FlutterDoc" />
  <id>urn:rprimus:github:miyoyo:FlutterDoc</id>
  <published>2021-04-12T20:35:22Z</published>
  <updated>2021-04-12T20:35:22Z</updated>
  <content type="html">
   Bot used for https://discord.gg/rflutterdev
  </content>
 </entry>
 <entry>
  <title>abhinav: goldmark-mermaid</title>
  <author>
   <name>abhinav</name>
  </author>
  <link href="https://github.com/abhinav/goldmark-mermaid" />
  <id>urn:rprimus:github:abhinav:goldmark-mermaid</id>
  <published>2021-04-12T19:50:39Z</published>
  <updated>2021-04-12T19:50:39Z</updated>
  <content type="html">
   Mermaid diagram support for Goldmark Markdown parser.
  </content>
 </entry>
 <entry>
  <title>latra: GO_REST_API</title>
  <author>
   <name>latra</name>
  </author>
  <link href="https://github.com/latra/GO_REST_API" />
  <id>urn:rprimus:github:latra:GO_REST_API</id>
  <published>2021-04-12T19:24:03Z</published>
  <updated>2021-04-12T19:24:03Z</updated>
  <content type="html">
   Prueba de server en Go
  </content>
 </entry>
 <entry>
  <title>OSX-RSPlug-a: go-logging-tst</title>
  <author>
   <name>OSX-RSPlug-a</name>
  </author>
  <link href="https://github.com/OSX-RSPlug-a/go-logging-tst" />
  <id>urn:rprimus:github:OSX-RSPlug-a:go-logging-tst</id>
  <published>2021-04-12T19:20:51Z</published>
  <updated>2021-04-12T19:20:51Z</updated>
  <content type="html">
   Testing Logging and echo lib
  </content>
 </entry>
 <entry>
  <title>AndreaNicola: tls-updater</title>
  <author>
   <name>AndreaNicola</name>
  </author>
  <link href="https://github.com/AndreaNicola/tls-updater" />
  <id>urn:rprimus:github:AndreaNicola:tls-updater</id>
  <published>2021-04-12T18:14:00Z</published>
  <updated>2021-04-12T18:14:00Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>polarsignals: pprof-labels-example</title>
  <author>
   <name>polarsignals</name>
  </author>
  <link href="https://github.com/polarsignals/pprof-labels-example" />
  <id>urn:rprimus:github:polarsignals:pprof-labels-example</id>
  <published>2021-04-12T17:48:38Z</published>
  <updated>2021-04-12T17:48:38Z</updated>
  <content type="html">
   Example go code demonstrating pprof labels
  </content>
 </entry>
 <entry>
  <title>Igorpollo: discount-grpc</title>
  <author>
   <name>Igorpollo</name>
  </author>
  <link href="https://github.com/Igorpollo/discount-grpc" />
  <id>urn:rprimus:github:Igorpollo:discount-grpc</id>
  <published>2021-04-12T15:51:24Z</published>
  <updated>2021-04-12T15:51:24Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>billShadow: go_web</title>
  <author>
   <name>billShadow</name>
  </author>
  <link href="https://github.com/billShadow/go_web" />
  <id>urn:rprimus:github:billShadow:go_web</id>
  <published>2021-04-12T15:38:00Z</published>
  <updated>2021-04-12T15:38:00Z</updated>
  <content type="html">
   go web demo
  </content>
 </entry>
 <entry>
  <title>dl-watson: pg-go</title>
  <author>
   <name>dl-watson</name>
  </author>
  <link href="https://github.com/dl-watson/pg-go" />
  <id>urn:rprimus:github:dl-watson:pg-go</id>
  <published>2021-04-12T15:36:03Z</published>
  <updated>2021-04-12T15:36:03Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>pgollangi: go-portfinder</title>
  <author>
   <name>pgollangi</name>
  </author>
  <link href="https://github.com/pgollangi/go-portfinder" />
  <id>urn:rprimus:github:pgollangi:go-portfinder</id>
  <published>2021-04-12T14:29:55Z</published>
  <updated>2021-04-12T14:29:55Z</updated>
  <content type="html">
   Go implementation of node-portfinder
  </content>
 </entry>
 <entry>
  <title>DanielArturoAlejoAlvarez: Go-Simple-Rest-Api</title>
  <author>
   <name>DanielArturoAlejoAlvarez</name>
  </author>
  <link href="https://github.com/DanielArturoAlejoAlvarez/Go-Simple-Rest-Api" />
  <id>urn:rprimus:github:DanielArturoAlejoAlvarez:Go-Simple-Rest-Api</id>
  <published>2021-04-12T14:27:32Z</published>
  <updated>2021-04-12T14:27:32Z</updated>
  <content type="html">
   Software of development with Golang
  </content>
 </entry>
 <entry>
  <title>hvuhsg: nqtree</title>
  <author>
   <name>hvuhsg</name>
  </author>
  <link href="https://github.com/hvuhsg/nqtree" />
  <id>urn:rprimus:github:hvuhsg:nqtree</id>
  <published>2021-04-12T12:31:02Z</published>
  <updated>2021-04-12T12:31:02Z</updated>
  <content type="html">
   N Dimensions quadtree lib
  </content>
 </entry>
 <entry>
  <title>inspr: inspr</title>
  <author>
   <name>inspr</name>
  </author>
  <link href="https://github.com/inspr/inspr" />
  <id>urn:rprimus:github:inspr:inspr</id>
  <published>2021-04-12T12:17:10Z</published>
  <updated>2021-04-12T12:17:10Z</updated>
  <content type="html">
   Inspr is an application mesh for simple, fast and secure development of distributed applications.
  </content>
 </entry>
 <entry>
  <title>poolpOrg: privsep</title>
  <author>
   <name>poolpOrg</name>
  </author>
  <link href="https://github.com/poolpOrg/privsep" />
  <id>urn:rprimus:github:poolpOrg:privsep</id>
  <published>2021-04-12T11:24:24Z</published>
  <updated>2021-04-12T11:24:24Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>Bendimester23: BotWrapper</title>
  <author>
   <name>Bendimester23</name>
  </author>
  <link href="https://github.com/Bendimester23/BotWrapper" />
  <id>urn:rprimus:github:Bendimester23:BotWrapper</id>
  <published>2021-04-12T11:00:23Z</published>
  <updated>2021-04-12T11:00:23Z</updated>
  <content type="html">
   A lightwheight wrapper for auto updating discord bots.
  </content>
 </entry>
 <entry>
  <title>lqhandsome: golangStudy</title>
  <author>
   <name>lqhandsome</name>
  </author>
  <link href="https://github.com/lqhandsome/golangStudy" />
  <id>urn:rprimus:github:lqhandsome:golangStudy</id>
  <published>2021-04-12T09:39:31Z</published>
  <updated>2021-04-12T09:39:31Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>vmkteam: zenrpc-middleware</title>
  <author>
   <name>vmkteam</name>
  </author>
  <link href="https://github.com/vmkteam/zenrpc-middleware" />
  <id>urn:rprimus:github:vmkteam:zenrpc-middleware</id>
  <published>2021-04-12T09:12:36Z</published>
  <updated>2021-04-12T09:12:36Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>kubewarden: go-policy-template</title>
  <author>
   <name>kubewarden</name>
  </author>
  <link href="https://github.com/kubewarden/go-policy-template" />
  <id>urn:rprimus:github:kubewarden:go-policy-template</id>
  <published>2021-04-12T08:52:16Z</published>
  <updated>2021-04-12T08:52:16Z</updated>
  <content type="html">
   A template repository to quickly scaffold a Kubewarden policy written with Go language
  </content>
 </entry>
 <entry>
  <title>gateio: gatews</title>
  <author>
   <name>gateio</name>
  </author>
  <link href="https://github.com/gateio/gatews" />
  <id>urn:rprimus:github:gateio:gatews</id>
  <published>2021-04-12T08:19:41Z</published>
  <updated>2021-04-12T08:19:41Z</updated>
  <content type="html">
   Gate Websocket V4 SDK
  </content>
 </entry>
 <entry>
  <title>diamondburned: cronmon</title>
  <author>
   <name>diamondburned</name>
  </author>
  <link href="https://github.com/diamondburned/cronmon" />
  <id>urn:rprimus:github:diamondburned:cronmon</id>
  <published>2021-04-12T06:46:40Z</published>
  <updated>2021-04-12T06:46:40Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>olivercodes: k8s-config-drift</title>
  <author>
   <name>olivercodes</name>
  </author>
  <link href="https://github.com/olivercodes/k8s-config-drift" />
  <id>urn:rprimus:github:olivercodes:k8s-config-drift</id>
  <published>2021-04-12T04:32:40Z</published>
  <updated>2021-04-12T04:32:40Z</updated>
  <content type="html">
   Go client for checking config drift on k8s clusters.
  </content>
 </entry>
 <entry>
  <title>nektro: aquila</title>
  <author>
   <name>nektro</name>
  </author>
  <link href="https://github.com/nektro/aquila" />
  <id>urn:rprimus:github:nektro:aquila</id>
  <published>2021-04-12T02:10:09Z</published>
  <updated>2021-04-12T02:10:09Z</updated>
  <content type="html">
   A federated package repository and CI system for the Zig programming language.
  </content>
 </entry>
 <entry>
  <title>solidiquis: fsac</title>
  <author>
   <name>solidiquis</name>
  </author>
  <link href="https://github.com/solidiquis/fsac" />
  <id>urn:rprimus:github:solidiquis:fsac</id>
  <published>2021-04-12T02:02:44Z</published>
  <updated>2021-04-12T02:02:44Z</updated>
  <content type="html">
   â¡   fast fuzzy search terminal application that queries what you&#039;re looking for and provides the result to a custom command.
  </content>
 </entry>
 <entry>
  <title>josterholt: diablo-ladder</title>
  <author>
   <name>josterholt</name>
  </author>
  <link href="https://github.com/josterholt/diablo-ladder" />
  <id>urn:rprimus:github:josterholt:diablo-ladder</id>
  <published>2021-04-12T00:54:08Z</published>
  <updated>2021-04-12T00:54:08Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>Hedgehogues: awesome-api</title>
  <author>
   <name>Hedgehogues</name>
  </author>
  <link href="https://github.com/Hedgehogues/awesome-api" />
  <id>urn:rprimus:github:Hedgehogues:awesome-api</id>
  <published>2021-04-12T00:33:45Z</published>
  <updated>2021-04-12T00:33:45Z</updated>
  <content type="html">
   Simple api client
  </content>
 </entry>
</feed>
