<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<link rel="self" type="application/atom+xml" href="http://lence.net/github-go.atom"/>
<id>urn:rprimus:github:newgorepos</id>
<updated>2021-04-16T09:42:51Z</updated>
<title type='text'>New GitHub Go Repos</title>
 <entry>
  <title>hamzasaeed2029: GOlang-server-for-Zktec-IOT-device</title>
  <author>
   <name>hamzasaeed2029</name>
  </author>
  <link href="https://github.com/hamzasaeed2029/GOlang-server-for-Zktec-IOT-device" />
  <id>urn:rprimus:github:hamzasaeed2029:GOlang-server-for-Zktec-IOT-device</id>
  <published>2021-04-16T09:42:51Z</published>
  <updated>2021-04-16T09:42:51Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>wbw295: go-redisson</title>
  <author>
   <name>wbw295</name>
  </author>
  <link href="https://github.com/wbw295/go-redisson" />
  <id>urn:rprimus:github:wbw295:go-redisson</id>
  <published>2021-04-16T08:43:05Z</published>
  <updated>2021-04-16T08:43:05Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>erikira: learn-nsq</title>
  <author>
   <name>erikira</name>
  </author>
  <link href="https://github.com/erikira/learn-nsq" />
  <id>urn:rprimus:github:erikira:learn-nsq</id>
  <published>2021-04-16T08:39:19Z</published>
  <updated>2021-04-16T08:39:19Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>datewu: algo-quiz</title>
  <author>
   <name>datewu</name>
  </author>
  <link href="https://github.com/datewu/algo-quiz" />
  <id>urn:rprimus:github:datewu:algo-quiz</id>
  <published>2021-04-16T08:07:42Z</published>
  <updated>2021-04-16T08:07:42Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>sneakykiwi: bmak-tools</title>
  <author>
   <name>sneakykiwi</name>
  </author>
  <link href="https://github.com/sneakykiwi/bmak-tools" />
  <id>urn:rprimus:github:sneakykiwi:bmak-tools</id>
  <published>2021-04-16T07:17:53Z</published>
  <updated>2021-04-16T07:17:53Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>chenjin-go: go-tcp-proxy</title>
  <author>
   <name>chenjin-go</name>
  </author>
  <link href="https://github.com/chenjin-go/go-tcp-proxy" />
  <id>urn:rprimus:github:chenjin-go:go-tcp-proxy</id>
  <published>2021-04-16T07:07:51Z</published>
  <updated>2021-04-16T07:07:51Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>AlejndroFunesGarcia: Binance-Grid-Expert-Advisor-API</title>
  <author>
   <name>AlejndroFunesGarcia</name>
  </author>
  <link href="https://github.com/AlejndroFunesGarcia/Binance-Grid-Expert-Advisor-API" />
  <id>urn:rprimus:github:AlejndroFunesGarcia:Binance-Grid-Expert-Advisor-API</id>
  <published>2021-04-16T06:30:38Z</published>
  <updated>2021-04-16T06:30:38Z</updated>
  <content type="html">
   Trading algorithm with API conection 
  </content>
 </entry>
 <entry>
  <title>jhunters: timewheel</title>
  <author>
   <name>jhunters</name>
  </author>
  <link href="https://github.com/jhunters/timewheel" />
  <id>urn:rprimus:github:jhunters:timewheel</id>
  <published>2021-04-16T05:43:13Z</published>
  <updated>2021-04-16T05:43:13Z</updated>
  <content type="html">
   æ¶é´è½®golangå®ç°
  </content>
 </entry>
 <entry>
  <title>happyphper: gin-swagger-demo</title>
  <author>
   <name>happyphper</name>
  </author>
  <link href="https://github.com/happyphper/gin-swagger-demo" />
  <id>urn:rprimus:github:happyphper:gin-swagger-demo</id>
  <published>2021-04-16T05:36:04Z</published>
  <updated>2021-04-16T05:36:04Z</updated>
  <content type="html">
   gin swagger demo
  </content>
 </entry>
 <entry>
  <title>Fatkur94: testbibit</title>
  <author>
   <name>Fatkur94</name>
  </author>
  <link href="https://github.com/Fatkur94/testbibit" />
  <id>urn:rprimus:github:Fatkur94:testbibit</id>
  <published>2021-04-16T05:35:00Z</published>
  <updated>2021-04-16T05:35:00Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>ashishgalagali: go-git-churn</title>
  <author>
   <name>ashishgalagali</name>
  </author>
  <link href="https://github.com/ashishgalagali/go-git-churn" />
  <id>urn:rprimus:github:ashishgalagali:go-git-churn</id>
  <published>2021-04-16T05:21:29Z</published>
  <updated>2021-04-16T05:21:29Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>aaditya2200: Golang-microservices</title>
  <author>
   <name>aaditya2200</name>
  </author>
  <link href="https://github.com/aaditya2200/Golang-microservices" />
  <id>urn:rprimus:github:aaditya2200:Golang-microservices</id>
  <published>2021-04-16T04:25:00Z</published>
  <updated>2021-04-16T04:25:00Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>lijingbo8119: gf-conv</title>
  <author>
   <name>lijingbo8119</name>
  </author>
  <link href="https://github.com/lijingbo8119/gf-conv" />
  <id>urn:rprimus:github:lijingbo8119:gf-conv</id>
  <published>2021-04-16T04:06:29Z</published>
  <updated>2021-04-16T04:06:29Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>shopifmate: app4shopifmate</title>
  <author>
   <name>shopifmate</name>
  </author>
  <link href="https://github.com/shopifmate/app4shopifmate" />
  <id>urn:rprimus:github:shopifmate:app4shopifmate</id>
  <published>2021-04-16T04:06:17Z</published>
  <updated>2021-04-16T04:06:17Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>mccubez: BBDC-updates</title>
  <author>
   <name>mccubez</name>
  </author>
  <link href="https://github.com/mccubez/BBDC-updates" />
  <id>urn:rprimus:github:mccubez:BBDC-updates</id>
  <published>2021-04-16T04:06:15Z</published>
  <updated>2021-04-16T04:06:15Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>Aeres-u99: go-code-study</title>
  <author>
   <name>Aeres-u99</name>
  </author>
  <link href="https://github.com/Aeres-u99/go-code-study" />
  <id>urn:rprimus:github:Aeres-u99:go-code-study</id>
  <published>2021-04-16T03:51:37Z</published>
  <updated>2021-04-16T03:51:37Z</updated>
  <content type="html">
   Codes I wrote while stu&quot;dying&quot; golang
  </content>
 </entry>
 <entry>
  <title>tikivn: mysterious-wand</title>
  <author>
   <name>tikivn</name>
  </author>
  <link href="https://github.com/tikivn/mysterious-wand" />
  <id>urn:rprimus:github:tikivn:mysterious-wand</id>
  <published>2021-04-16T03:25:27Z</published>
  <updated>2021-04-16T03:25:27Z</updated>
  <content type="html">
   Data team get link hackathon
  </content>
 </entry>
 <entry>
  <title>3490654586: Gokit</title>
  <author>
   <name>3490654586</name>
  </author>
  <link href="https://github.com/3490654586/Gokit" />
  <id>urn:rprimus:github:3490654586:Gokit</id>
  <published>2021-04-16T03:02:12Z</published>
  <updated>2021-04-16T03:02:12Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>xmwilldo: drone-config-changeset</title>
  <author>
   <name>xmwilldo</name>
  </author>
  <link href="https://github.com/xmwilldo/drone-config-changeset" />
  <id>urn:rprimus:github:xmwilldo:drone-config-changeset</id>
  <published>2021-04-16T02:35:19Z</published>
  <updated>2021-04-16T02:35:19Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>as: json</title>
  <author>
   <name>as</name>
  </author>
  <link href="https://github.com/as/json" />
  <id>urn:rprimus:github:as:json</id>
  <published>2021-04-16T02:32:50Z</published>
  <updated>2021-04-16T02:32:50Z</updated>
  <content type="html">
   fork of encoding/json that fixes omitempty behavior on structs
  </content>
 </entry>
 <entry>
  <title>iurylemos: golang-api</title>
  <author>
   <name>iurylemos</name>
  </author>
  <link href="https://github.com/iurylemos/golang-api" />
  <id>urn:rprimus:github:iurylemos:golang-api</id>
  <published>2021-04-16T02:29:15Z</published>
  <updated>2021-04-16T02:29:15Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>cahyowhy: go-basic-rest-api-revisit</title>
  <author>
   <name>cahyowhy</name>
  </author>
  <link href="https://github.com/cahyowhy/go-basic-rest-api-revisit" />
  <id>urn:rprimus:github:cahyowhy:go-basic-rest-api-revisit</id>
  <published>2021-04-16T02:00:58Z</published>
  <updated>2021-04-16T02:00:58Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>gzl-tommy: resk</title>
  <author>
   <name>gzl-tommy</name>
  </author>
  <link href="https://github.com/gzl-tommy/resk" />
  <id>urn:rprimus:github:gzl-tommy:resk</id>
  <published>2021-04-16T01:55:42Z</published>
  <updated>2021-04-16T01:55:42Z</updated>
  <content type="html">
   å¾®æå¡ççº¢åæå¡
  </content>
 </entry>
 <entry>
  <title>electricbubble: gidevice-cli</title>
  <author>
   <name>electricbubble</name>
  </author>
  <link href="https://github.com/electricbubble/gidevice-cli" />
  <id>urn:rprimus:github:electricbubble:gidevice-cli</id>
  <published>2021-04-16T01:51:11Z</published>
  <updated>2021-04-16T01:51:11Z</updated>
  <content type="html">
   gidevice cli
  </content>
 </entry>
 <entry>
  <title>lin879947361: etcd-3.1.10-note</title>
  <author>
   <name>lin879947361</name>
  </author>
  <link href="https://github.com/lin879947361/etcd-3.1.10-note" />
  <id>urn:rprimus:github:lin879947361:etcd-3.1.10-note</id>
  <published>2021-04-16T01:31:04Z</published>
  <updated>2021-04-16T01:31:04Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>skmatz: tmp</title>
  <author>
   <name>skmatz</name>
  </author>
  <link href="https://github.com/skmatz/tmp" />
  <id>urn:rprimus:github:skmatz:tmp</id>
  <published>2021-04-16T00:53:07Z</published>
  <updated>2021-04-16T00:53:07Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>zmanxiang: server</title>
  <author>
   <name>zmanxiang</name>
  </author>
  <link href="https://github.com/zmanxiang/server" />
  <id>urn:rprimus:github:zmanxiang:server</id>
  <published>2021-04-16T00:47:27Z</published>
  <updated>2021-04-16T00:47:27Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>jdleo: go-idgen</title>
  <author>
   <name>jdleo</name>
  </author>
  <link href="https://github.com/jdleo/go-idgen" />
  <id>urn:rprimus:github:jdleo:go-idgen</id>
  <published>2021-04-16T00:46:23Z</published>
  <updated>2021-04-16T00:46:23Z</updated>
  <content type="html">
   idgen is a cryptographically-secure, URL-safe by default, random ID generator as a Go package.
  </content>
 </entry>
 <entry>
  <title>leaanthony: debme</title>
  <author>
   <name>leaanthony</name>
  </author>
  <link href="https://github.com/leaanthony/debme" />
  <id>urn:rprimus:github:leaanthony:debme</id>
  <published>2021-04-16T00:25:13Z</published>
  <updated>2021-04-16T00:25:13Z</updated>
  <content type="html">
   Get an embed.FS from inside an embed.FS
  </content>
 </entry>
 <entry>
  <title>pvrzl: go-base-arch</title>
  <author>
   <name>pvrzl</name>
  </author>
  <link href="https://github.com/pvrzl/go-base-arch" />
  <id>urn:rprimus:github:pvrzl:go-base-arch</id>
  <published>2021-04-16T00:23:52Z</published>
  <updated>2021-04-16T00:23:52Z</updated>
  <content type="html">
   go base layout
  </content>
 </entry>
 <entry>
  <title>komish: demo-multiverse-operator</title>
  <author>
   <name>komish</name>
  </author>
  <link href="https://github.com/komish/demo-multiverse-operator" />
  <id>urn:rprimus:github:komish:demo-multiverse-operator</id>
  <published>2021-04-15T22:41:58Z</published>
  <updated>2021-04-15T22:41:58Z</updated>
  <content type="html">
   A demo operator implementing a simple conversion webhook
  </content>
 </entry>
 <entry>
  <title>samuel-hunter: cordcgi</title>
  <author>
   <name>samuel-hunter</name>
  </author>
  <link href="https://github.com/samuel-hunter/cordcgi" />
  <id>urn:rprimus:github:samuel-hunter:cordcgi</id>
  <published>2021-04-15T22:38:08Z</published>
  <updated>2021-04-15T22:38:08Z</updated>
  <content type="html">
   WebCGI for Discord: What could go wrong?
  </content>
 </entry>
 <entry>
  <title>fenegroni: TGPL-exercise-solutions</title>
  <author>
   <name>fenegroni</name>
  </author>
  <link href="https://github.com/fenegroni/TGPL-exercise-solutions" />
  <id>urn:rprimus:github:fenegroni:TGPL-exercise-solutions</id>
  <published>2021-04-15T20:37:22Z</published>
  <updated>2021-04-15T20:37:22Z</updated>
  <content type="html">
   Solutions to the exercises from the book The Go Programming Language, using TDD.
  </content>
 </entry>
 <entry>
  <title>x0e1f: dump-hub</title>
  <author>
   <name>x0e1f</name>
  </author>
  <link href="https://github.com/x0e1f/dump-hub" />
  <id>urn:rprimus:github:x0e1f:dump-hub</id>
  <published>2021-04-15T20:03:30Z</published>
  <updated>2021-04-15T20:03:30Z</updated>
  <content type="html">
   Self hosted search engine for data leaks and password dumps
  </content>
 </entry>
 <entry>
  <title>TutorialEdge: go-data-structures-course</title>
  <author>
   <name>TutorialEdge</name>
  </author>
  <link href="https://github.com/TutorialEdge/go-data-structures-course" />
  <id>urn:rprimus:github:TutorialEdge:go-data-structures-course</id>
  <published>2021-04-15T19:04:54Z</published>
  <updated>2021-04-15T19:04:54Z</updated>
  <content type="html">
   This is the course materials for the Go Data Structures Crash Course!
  </content>
 </entry>
 <entry>
  <title>jphhofmann: PromProxy</title>
  <author>
   <name>jphhofmann</name>
  </author>
  <link href="https://github.com/jphhofmann/PromProxy" />
  <id>urn:rprimus:github:jphhofmann:PromProxy</id>
  <published>2021-04-15T18:06:33Z</published>
  <updated>2021-04-15T18:06:33Z</updated>
  <content type="html">
   Proxy for securing Prometheus Exporters
  </content>
 </entry>
 <entry>
  <title>morgangallant: scheduler</title>
  <author>
   <name>morgangallant</name>
  </author>
  <link href="https://github.com/morgangallant/scheduler" />
  <id>urn:rprimus:github:morgangallant:scheduler</id>
  <published>2021-04-15T17:51:59Z</published>
  <updated>2021-04-15T17:51:59Z</updated>
  <content type="html">
   A simple job scheduler backed by Postgres.
  </content>
 </entry>
 <entry>
  <title>wmattei: gotodo</title>
  <author>
   <name>wmattei</name>
  </author>
  <link href="https://github.com/wmattei/gotodo" />
  <id>urn:rprimus:github:wmattei:gotodo</id>
  <published>2021-04-15T17:45:02Z</published>
  <updated>2021-04-15T17:45:02Z</updated>
  <content type="html">
   Learning go because why not????
  </content>
 </entry>
 <entry>
  <title>ractf: socketwrench</title>
  <author>
   <name>ractf</name>
  </author>
  <link href="https://github.com/ractf/socketwrench" />
  <id>urn:rprimus:github:ractf:socketwrench</id>
  <published>2021-04-15T17:29:25Z</published>
  <updated>2021-04-15T17:29:25Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>alobaton: i18n</title>
  <author>
   <name>alobaton</name>
  </author>
  <link href="https://github.com/alobaton/i18n" />
  <id>urn:rprimus:github:alobaton:i18n</id>
  <published>2021-04-15T17:12:39Z</published>
  <updated>2021-04-15T17:12:39Z</updated>
  <content type="html">
   simple i18n support that relies on standard go libraries
  </content>
 </entry>
 <entry>
  <title>abdukhashimov: mylogger</title>
  <author>
   <name>abdukhashimov</name>
  </author>
  <link href="https://github.com/abdukhashimov/mylogger" />
  <id>urn:rprimus:github:abdukhashimov:mylogger</id>
  <published>2021-04-15T17:05:32Z</published>
  <updated>2021-04-15T17:05:32Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>nelhage: duckdb-parquet-bugs</title>
  <author>
   <name>nelhage</name>
  </author>
  <link href="https://github.com/nelhage/duckdb-parquet-bugs" />
  <id>urn:rprimus:github:nelhage:duckdb-parquet-bugs</id>
  <published>2021-04-15T16:44:45Z</published>
  <updated>2021-04-15T16:44:45Z</updated>
  <content type="html">
   Parquet files and generators for some DuckDB parquet bugs
  </content>
 </entry>
 <entry>
  <title>ViaQ: log-exploration-oc-plugin</title>
  <author>
   <name>ViaQ</name>
  </author>
  <link href="https://github.com/ViaQ/log-exploration-oc-plugin" />
  <id>urn:rprimus:github:ViaQ:log-exploration-oc-plugin</id>
  <published>2021-04-15T13:27:02Z</published>
  <updated>2021-04-15T13:27:02Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>wbsnail: my-telegram-bots</title>
  <author>
   <name>wbsnail</name>
  </author>
  <link href="https://github.com/wbsnail/my-telegram-bots" />
  <id>urn:rprimus:github:wbsnail:my-telegram-bots</id>
  <published>2021-04-15T12:17:39Z</published>
  <updated>2021-04-15T12:17:39Z</updated>
  <content type="html">
   My Telegram bots
  </content>
 </entry>
 <entry>
  <title>alimate: fast-loc</title>
  <author>
   <name>alimate</name>
  </author>
  <link href="https://github.com/alimate/fast-loc" />
  <id>urn:rprimus:github:alimate:fast-loc</id>
  <published>2021-04-15T12:03:41Z</published>
  <updated>2021-04-15T12:03:41Z</updated>
  <content type="html">
   Storing Driver Locations 
  </content>
 </entry>
 <entry>
  <title>alexellis: inlets-connect</title>
  <author>
   <name>alexellis</name>
  </author>
  <link href="https://github.com/alexellis/inlets-connect" />
  <id>urn:rprimus:github:alexellis:inlets-connect</id>
  <published>2021-04-15T10:32:31Z</published>
  <updated>2021-04-15T10:32:31Z</updated>
  <content type="html">
   inlets-connect is a proxy that supports HTTPS and the CONNECT method
  </content>
 </entry>
 <entry>
  <title>danopstech: speedtest_exporter</title>
  <author>
   <name>danopstech</name>
  </author>
  <link href="https://github.com/danopstech/speedtest_exporter" />
  <id>urn:rprimus:github:danopstech:speedtest_exporter</id>
  <published>2021-04-15T08:07:40Z</published>
  <updated>2021-04-15T08:07:40Z</updated>
  <content type="html">
   Prometheus exporter that runs speedtest and exposes results
  </content>
 </entry>
 <entry>
  <title>HirazawaUi: sshp</title>
  <author>
   <name>HirazawaUi</name>
  </author>
  <link href="https://github.com/HirazawaUi/sshp" />
  <id>urn:rprimus:github:HirazawaUi:sshp</id>
  <published>2021-04-15T07:54:26Z</published>
  <updated>2021-04-15T07:54:26Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>umputun: echo-http</title>
  <author>
   <name>umputun</name>
  </author>
  <link href="https://github.com/umputun/echo-http" />
  <id>urn:rprimus:github:umputun:echo-http</id>
  <published>2021-04-15T07:47:27Z</published>
  <updated>2021-04-15T07:47:27Z</updated>
  <content type="html">
   Echo http service
  </content>
 </entry>
 <entry>
  <title>rfyiamcool: go-gearman</title>
  <author>
   <name>rfyiamcool</name>
  </author>
  <link href="https://github.com/rfyiamcool/go-gearman" />
  <id>urn:rprimus:github:rfyiamcool:go-gearman</id>
  <published>2021-04-15T07:12:57Z</published>
  <updated>2021-04-15T07:12:57Z</updated>
  <content type="html">
   golang job dispatcher
  </content>
 </entry>
 <entry>
  <title>FactoryManagerFeng: pool</title>
  <author>
   <name>FactoryManagerFeng</name>
  </author>
  <link href="https://github.com/FactoryManagerFeng/pool" />
  <id>urn:rprimus:github:FactoryManagerFeng:pool</id>
  <published>2021-04-15T06:46:33Z</published>
  <updated>2021-04-15T06:46:33Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>wygd-usac: DockerNetworking</title>
  <author>
   <name>wygd-usac</name>
  </author>
  <link href="https://github.com/wygd-usac/DockerNetworking" />
  <id>urn:rprimus:github:wygd-usac:DockerNetworking</id>
  <published>2021-04-15T05:49:39Z</published>
  <updated>2021-04-15T05:49:39Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>zlingqu: go-grpc-demo</title>
  <author>
   <name>zlingqu</name>
  </author>
  <link href="https://github.com/zlingqu/go-grpc-demo" />
  <id>urn:rprimus:github:zlingqu:go-grpc-demo</id>
  <published>2021-04-15T05:03:35Z</published>
  <updated>2021-04-15T05:03:35Z</updated>
  <content type="html">
   grpcåç§æå¡æ¹æ³ç¤ºä¾ï¼åæ¬å®¢æ·ç«¯ãæå¡ç«¯ï¼goå®ç°
  </content>
 </entry>
 <entry>
  <title>minhd-vu: react-mon-go</title>
  <author>
   <name>minhd-vu</name>
  </author>
  <link href="https://github.com/minhd-vu/react-mon-go" />
  <id>urn:rprimus:github:minhd-vu:react-mon-go</id>
  <published>2021-04-15T04:37:08Z</published>
  <updated>2021-04-15T04:37:08Z</updated>
  <content type="html">
   Baseline for a React, MongoDB, and Golang stack web application.
  </content>
 </entry>
 <entry>
  <title>godruoyi: go-snowflake</title>
  <author>
   <name>godruoyi</name>
  </author>
  <link href="https://github.com/godruoyi/go-snowflake" />
  <id>urn:rprimus:github:godruoyi:go-snowflake</id>
  <published>2021-04-15T03:05:28Z</published>
  <updated>2021-04-15T03:05:28Z</updated>
  <content type="html">
   â An Lock Free ID Generator for Golang based on Snowflake Algorithm (Twitter announced).
  </content>
 </entry>
 <entry>
  <title>LampardNguyen234: go-incognito</title>
  <author>
   <name>LampardNguyen234</name>
  </author>
  <link href="https://github.com/LampardNguyen234/go-incognito" />
  <id>urn:rprimus:github:LampardNguyen234:go-incognito</id>
  <published>2021-04-15T02:10:15Z</published>
  <updated>2021-04-15T02:10:15Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>sebsebmc: ctf-watcher</title>
  <author>
   <name>sebsebmc</name>
  </author>
  <link href="https://github.com/sebsebmc/ctf-watcher" />
  <id>urn:rprimus:github:sebsebmc:ctf-watcher</id>
  <published>2021-04-15T01:55:19Z</published>
  <updated>2021-04-15T01:55:19Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>nzlov: diffs</title>
  <author>
   <name>nzlov</name>
  </author>
  <link href="https://github.com/nzlov/diffs" />
  <id>urn:rprimus:github:nzlov:diffs</id>
  <published>2021-04-15T01:36:53Z</published>
  <updated>2021-04-15T01:36:53Z</updated>
  <content type="html">
   Compare the differences between the two directories
  </content>
 </entry>
 <entry>
  <title>kennethnym: based-count-bot</title>
  <author>
   <name>kennethnym</name>
  </author>
  <link href="https://github.com/kennethnym/based-count-bot" />
  <id>urn:rprimus:github:kennethnym:based-count-bot</id>
  <published>2021-04-15T00:36:14Z</published>
  <updated>2021-04-15T00:36:14Z</updated>
  <content type="html">
   A discord bot that keeps track of basednesses of users
  </content>
 </entry>
 <entry>
  <title>rikatz: falco-network-operator</title>
  <author>
   <name>rikatz</name>
  </author>
  <link href="https://github.com/rikatz/falco-network-operator" />
  <id>urn:rprimus:github:rikatz:falco-network-operator</id>
  <published>2021-04-15T00:14:19Z</published>
  <updated>2021-04-15T00:14:19Z</updated>
  <content type="html">
   Controller that generates falco rules based on Network Policies.
  </content>
 </entry>
 <entry>
  <title>zoom-ci: zoom-ci</title>
  <author>
   <name>zoom-ci</name>
  </author>
  <link href="https://github.com/zoom-ci/zoom-ci" />
  <id>urn:rprimus:github:zoom-ci:zoom-ci</id>
  <published>2021-04-14T23:16:06Z</published>
  <updated>2021-04-14T23:16:06Z</updated>
  <content type="html">
   Zoom,a CI/CD service.
  </content>
 </entry>
 <entry>
  <title>charly3pins: test-with-go</title>
  <author>
   <name>charly3pins</name>
  </author>
  <link href="https://github.com/charly3pins/test-with-go" />
  <id>urn:rprimus:github:charly3pins:test-with-go</id>
  <published>2021-04-14T21:47:25Z</published>
  <updated>2021-04-14T21:47:25Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>Vortex-live: Vortex-wallet</title>
  <author>
   <name>Vortex-live</name>
  </author>
  <link href="https://github.com/Vortex-live/Vortex-wallet" />
  <id>urn:rprimus:github:Vortex-live:Vortex-wallet</id>
  <published>2021-04-14T20:23:33Z</published>
  <updated>2021-04-14T20:23:33Z</updated>
  <content type="html">
   Offline cryptocurrency wallet generator
  </content>
 </entry>
 <entry>
  <title>dariusbakunas: terraform-provider-truenas</title>
  <author>
   <name>dariusbakunas</name>
  </author>
  <link href="https://github.com/dariusbakunas/terraform-provider-truenas" />
  <id>urn:rprimus:github:dariusbakunas:terraform-provider-truenas</id>
  <published>2021-04-14T20:04:41Z</published>
  <updated>2021-04-14T20:04:41Z</updated>
  <content type="html">
   Experimental terraform provider to manage TrueNAS server
  </content>
 </entry>
 <entry>
  <title>crthpl: go2v</title>
  <author>
   <name>crthpl</name>
  </author>
  <link href="https://github.com/crthpl/go2v" />
  <id>urn:rprimus:github:crthpl:go2v</id>
  <published>2021-04-14T18:11:37Z</published>
  <updated>2021-04-14T18:11:37Z</updated>
  <content type="html">
   Translate golang to vlang
  </content>
 </entry>
 <entry>
  <title>Senna-Indonesia: sennago</title>
  <author>
   <name>Senna-Indonesia</name>
  </author>
  <link href="https://github.com/Senna-Indonesia/sennago" />
  <id>urn:rprimus:github:Senna-Indonesia:sennago</id>
  <published>2021-04-14T16:30:56Z</published>
  <updated>2021-04-14T16:30:56Z</updated>
  <content type="html">
   Restful framework with expressive, elegant syntax. We believe development must be an enjoyable and creative experience to be truly fulfilling.
  </content>
 </entry>
 <entry>
  <title>hmarf: cTest</title>
  <author>
   <name>hmarf</name>
  </author>
  <link href="https://github.com/hmarf/cTest" />
  <id>urn:rprimus:github:hmarf:cTest</id>
  <published>2021-04-14T16:09:15Z</published>
  <updated>2021-04-14T16:09:15Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>x1ah: gena</title>
  <author>
   <name>x1ah</name>
  </author>
  <link href="https://github.com/x1ah/gena" />
  <id>urn:rprimus:github:x1ah:gena</id>
  <published>2021-04-14T16:01:19Z</published>
  <updated>2021-04-14T16:01:19Z</updated>
  <content type="html">
   å¯¼èªç½ç«çæå¨(Navigation website generator)
  </content>
 </entry>
 <entry>
  <title>plugine: yyds</title>
  <author>
   <name>plugine</name>
  </author>
  <link href="https://github.com/plugine/yyds" />
  <id>urn:rprimus:github:plugine:yyds</id>
  <published>2021-04-14T15:41:17Z</published>
  <updated>2021-04-14T15:41:17Z</updated>
  <content type="html">
   èªå·±çé³ä¹å¶ä½å¨ä»åº
  </content>
 </entry>
 <entry>
  <title>leonklingele: tldcheck</title>
  <author>
   <name>leonklingele</name>
  </author>
  <link href="https://github.com/leonklingele/tldcheck" />
  <id>urn:rprimus:github:leonklingele:tldcheck</id>
  <published>2021-04-14T15:34:32Z</published>
  <updated>2021-04-14T15:34:32Z</updated>
  <content type="html">
   â¡ Super-fast TLD checker â¡
  </content>
 </entry>
 <entry>
  <title>oassuncao: kafka-retry</title>
  <author>
   <name>oassuncao</name>
  </author>
  <link href="https://github.com/oassuncao/kafka-retry" />
  <id>urn:rprimus:github:oassuncao:kafka-retry</id>
  <published>2021-04-14T14:38:27Z</published>
  <updated>2021-04-14T14:38:27Z</updated>
  <content type="html">
   Kafka Retry
  </content>
 </entry>
 <entry>
  <title>casbin: redis-watcher</title>
  <author>
   <name>casbin</name>
  </author>
  <link href="https://github.com/casbin/redis-watcher" />
  <id>urn:rprimus:github:casbin:redis-watcher</id>
  <published>2021-04-14T14:18:14Z</published>
  <updated>2021-04-14T14:18:14Z</updated>
  <content type="html">
   Redis watcher for Casbin
  </content>
 </entry>
 <entry>
  <title>abhir98: ransomware</title>
  <author>
   <name>abhir98</name>
  </author>
  <link href="https://github.com/abhir98/ransomware" />
  <id>urn:rprimus:github:abhir98:ransomware</id>
  <published>2021-04-14T14:09:31Z</published>
  <updated>2021-04-14T14:09:31Z</updated>
  <content type="html">
   Project Summary This project was developed for the Computer Security course at my academic degree. Basically, it will encrypt your files in background using AES-256-CTR, a strong encryption algorithm, using RSA-4096 to secure the exchange with the server, optionally using the Tor SOCKS5 Proxy. The base functionality is what you see in the famous ransomware Cryptolocker.  The project is composed by three parts, the server, the malware and the unlocker.  The server store the victim&#039;s identification key along with the encryption key used by the malware.  The malware encrypt with a RSA-4096 (RSA-OAEP-4096 + SHA256) public key any payload before send then to the server. This approach with the optional Tor Proxy and a .onion domain allow you to hide almost completely your server.  Features Run in Background (or not) Encrypt files using AES-256-CTR(Counter Mode) with random IV for each file. Multithreaded. RSA-4096 to secure the client/server communication. Includes an Unlocker. Optional TOR Proxy support. Use an AES CTR Cypher with stream encryption to avoid load an entire file into memory. Walk all drives by default. Docker image for compilation. Building the binaries DON&#039;T RUN ransomware.exe IN YOUR PERSONAL MACHINE, EXECUTE ONLY IN A TEST ENVIRONMENT! I&#039;m not resposible if you acidentally encrypt all of your disks!  First of all download the project outside your $GOPATH:  git clone github.com/mauri870/ransomware cd ransomware If you have Docker skip to the next section.  You need Go at least 1.11.2 with the $GOPATH/bin in your $PATH and $GOROOT pointing to your Go installation folder. For me:  export GOPATH=~/gopath export PATH=$PATH:$GOPATH/bin export GOROOT=/usr/local/go Build the project require a lot of steps, like the RSA key generation, build three binaries, embed manifest files, so, let&#039;s leave make do your job:  make deps make You can build the server for windows with make -e GOOS=windows.  Docker ./build-docker.sh make Config Parameters You can change some of the configs during compilation. Instead of run only make, you can use the following variables:  HIDDEN=&#039;-H windowsgui&#039; # optional. If present the malware will run in background  USE_TOR=true # optional. If present the malware will download the Tor proxy and use it to contact the server  SERVER_HOST=mydomain.com # the domain used to connect to your server. localhost, 0.0.0.0, 127.0.0.1 works too if you run the server on the same machine as the malware  SERVER_PORT=8080 # the server port, if using a domain you can set this to 80  GOOS=linux # the target os to compile the server. Eg: darwin, linux, windows Example:  make -e USE_TOR=true SERVER_HOST=mydomain.com SERVER_PORT=80 GOOS=darwin  The SERVER_ variables above only apply to the malware. The server has a flag --port that you can use to change the port that it will listen on.  DON&#039;T RUN ransomware.exe IN YOUR PERSONAL MACHINE, EXECUTE ONLY IN A TEST ENVIRONMENT! I&#039;m not resposible if you acidentally encrypt all of your disks!  Step by Step Demo and How it Works For this demo I&#039;ll use two machines, my personal linux machine and a windows 10 VM.  For the sake of simplicity, I have a folder mapped to the VM, so I can compile from my linux and copy to the vm.  In this demo we will use the Ngrok tool, this will allow us to expose our server using a domain, but you can use your own domain or ip address if you want. We are also going to enable the Tor transport, so .onion domains will work without problems.  First of all lets start our external domain:  ngrok http 8080 This command will give us a url like http://2af7161c.ngrok.io. Keep this command running otherwise the malware won&#039;t reach our server.  Let&#039;s compile the binaries (remember to replace the domain):  make -e SERVER_HOST=2af7161c.ngrok.io SERVER_PORT=80 USE_TOR=true The SERVER_PORT needs to be 80 in this case, since ngrok redirects 2af7161c.ngrok.io:80 to your local server port 8080.  After build, a binary called ransomware.exe, and unlocker.exe along with a folder called server will be generated in the bin folder. The execution of ransomware.exe and unlocker.exe (even if you use a diferent GOOS variable during compilation) is locked to windows machines only.  Enter the server directory from another terminal and start it:  cd bin/server &amp;&amp; ./server --port 8080 To make sure that all is working correctly, make a http request to http://2af7161c.ngrok.io:  curl http://2af7161c.ngrok.io If you see a OK and some logs in the server output you are ready to go.  Now move the ransomware.exe and unlocker.exe to the VM along with some dummy files to test the malware. You can take a look at cmd/common.go to see some configuration options like file extensions to match, directories to scan, skipped folders, max size to match a file among others.  Then simply run the ransomware.exe and see the magic happens ð.  The window that you see can be hidden using the HIDDEN option described in the compilation section.  After download, extract and start the Tor proxy, the malware waits until the tor bootstrapping is done and then proceed with the key exchange with the server. The client/server handshake takes place and the client payload, encrypted with an RSA-4096 public key must be correctly decrypted on the server. The victim identification and encryption keys are stored in a Golang embedded database called BoltDB (it also persists on disk). When completed we get into the find, match and encrypt phase, up to N-cores workers start to encrypt files matched by the patterns defined. This proccess is really quick and in seconds all of your files will be gone.  The encryption key exchanged with the server was used to encrypt all of your files. Each file has a random primitive called IV, generated individually and saved as the first 16 bytes of the encrypted content. The algorithm used is AES-256-CTR, a good AES cypher with streaming mode of operation such that the file size is left intact.  The only two sources of information available about what just happen are the READ_TO_DECRYPT.html and FILES_ENCRYPTED.html in the Desktop.  In theory, to decrypt your files you need to send an amount of BTC to the attacker&#039;s wallet, followed by a contact sending your ID(located on the file created on desktop). If the attacker can confirm your payment it will possibly(or maybe not) return your encryption key and the unlocker.exe and you can use then to recover your files. This exchange can be accomplished in several ways and WILL NOT be implemented in this project for obvious reasons.  Let&#039;s suppose you get your encryption key back. To recover the correct key point to the following url:  curl -k http://2af7161c.ngrok.io/api/keys/:id Where :id is your identification stored in the file on desktop. After, run the unlocker.exe by double click and follow the instructions.  That&#039;s it, got your files back ð  The server has only two endpoints:  POST api/keys/add - Used by the malware to persist new keys. Some verifications are made, like the verification of the RSA autenticity. Returns 204 (empty content) in case of success or a json error.  GET api/keys/:id - Id is a 32 characters parameter, representing an Id already persisted. Returns a json containing the encryption key or a json error  The end As you can see, building a functional ransomware, with some of the best existing algorithms is not difficult, anyone with some programming skills can build that in any programming language.
  </content>
 </entry>
 <entry>
  <title>chenjia404: p2ptunnel</title>
  <author>
   <name>chenjia404</name>
  </author>
  <link href="https://github.com/chenjia404/p2ptunnel" />
  <id>urn:rprimus:github:chenjia404:p2ptunnel</id>
  <published>2021-04-14T13:24:37Z</published>
  <updated>2021-04-14T13:24:37Z</updated>
  <content type="html">
   ä¸ä¸ªåºäºp2pçtcpãudpåç½ç©¿éé§éå·¥å·
  </content>
 </entry>
 <entry>
  <title>datreeio: datree</title>
  <author>
   <name>datreeio</name>
  </author>
  <link href="https://github.com/datreeio/datree" />
  <id>urn:rprimus:github:datreeio:datree</id>
  <published>2021-04-14T11:44:56Z</published>
  <updated>2021-04-14T11:44:56Z</updated>
  <content type="html">
   Prevent Kubernetes misconfigurations from ever making it  (again ð¤) to production! The CLI integration provides policy enforcement solution to run automatic checks for rule violations.  Docs: https://hub.datree.io
  </content>
 </entry>
 <entry>
  <title>c9s: my-lucky-draw-telegram-bot</title>
  <author>
   <name>c9s</name>
  </author>
  <link href="https://github.com/c9s/my-lucky-draw-telegram-bot" />
  <id>urn:rprimus:github:c9s:my-lucky-draw-telegram-bot</id>
  <published>2021-04-14T11:04:57Z</published>
  <updated>2021-04-14T11:04:57Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>HappyTeemo7569: teemoKit</title>
  <author>
   <name>HappyTeemo7569</name>
  </author>
  <link href="https://github.com/HappyTeemo7569/teemoKit" />
  <id>urn:rprimus:github:HappyTeemo7569:teemoKit</id>
  <published>2021-04-14T10:42:24Z</published>
  <updated>2021-04-14T10:42:24Z</updated>
  <content type="html">
   æçåºç¡åº
  </content>
 </entry>
 <entry>
  <title>vuegoman: TBack</title>
  <author>
   <name>vuegoman</name>
  </author>
  <link href="https://github.com/vuegoman/TBack" />
  <id>urn:rprimus:github:vuegoman:TBack</id>
  <published>2021-04-14T09:09:10Z</published>
  <updated>2021-04-14T09:09:10Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>rvolosatovs: rund</title>
  <author>
   <name>rvolosatovs</name>
  </author>
  <link href="https://github.com/rvolosatovs/rund" />
  <id>urn:rprimus:github:rvolosatovs:rund</id>
  <published>2021-04-14T08:54:09Z</published>
  <updated>2021-04-14T08:54:09Z</updated>
  <content type="html">
   Run arbitrary containerized Linux processes over gRPC with mTLS auth
  </content>
 </entry>
 <entry>
  <title>empijei: go-safeweb-example-app</title>
  <author>
   <name>empijei</name>
  </author>
  <link href="https://github.com/empijei/go-safeweb-example-app" />
  <id>urn:rprimus:github:empijei:go-safeweb-example-app</id>
  <published>2021-04-14T08:12:07Z</published>
  <updated>2021-04-14T08:12:07Z</updated>
  <content type="html">
   A go-safeweb example application
  </content>
 </entry>
 <entry>
  <title>containeroo: otpgen</title>
  <author>
   <name>containeroo</name>
  </author>
  <link href="https://github.com/containeroo/otpgen" />
  <id>urn:rprimus:github:containeroo:otpgen</id>
  <published>2021-04-14T07:54:31Z</published>
  <updated>2021-04-14T07:54:31Z</updated>
  <content type="html">
   Simple CLI tool to generate OTP tokens
  </content>
 </entry>
 <entry>
  <title>plopezlpz: fiber-starter</title>
  <author>
   <name>plopezlpz</name>
  </author>
  <link href="https://github.com/plopezlpz/fiber-starter" />
  <id>urn:rprimus:github:plopezlpz:fiber-starter</id>
  <published>2021-04-14T06:37:51Z</published>
  <updated>2021-04-14T06:37:51Z</updated>
  <content type="html">
   Opinionated fiber Rest API microservice
  </content>
 </entry>
 <entry>
  <title>DAv10195: submit_fs</title>
  <author>
   <name>DAv10195</name>
  </author>
  <link href="https://github.com/DAv10195/submit_fs" />
  <id>urn:rprimus:github:DAv10195:submit_fs</id>
  <published>2021-04-14T05:31:58Z</published>
  <updated>2021-04-14T05:31:58Z</updated>
  <content type="html">
   File server for the submit project
  </content>
 </entry>
 <entry>
  <title>DAv10195: submit_commons</title>
  <author>
   <name>DAv10195</name>
  </author>
  <link href="https://github.com/DAv10195/submit_commons" />
  <id>urn:rprimus:github:DAv10195:submit_commons</id>
  <published>2021-04-14T05:09:48Z</published>
  <updated>2021-04-14T05:09:48Z</updated>
  <content type="html">
   Common components of the submit project
  </content>
 </entry>
 <entry>
  <title>EscAlice: Alertmanager-Webhook-Wechat</title>
  <author>
   <name>EscAlice</name>
  </author>
  <link href="https://github.com/EscAlice/Alertmanager-Webhook-Wechat" />
  <id>urn:rprimus:github:EscAlice:Alertmanager-Webhook-Wechat</id>
  <published>2021-04-14T03:06:18Z</published>
  <updated>2021-04-14T03:06:18Z</updated>
  <content type="html">
   Promethues alertmanager webhook wechat å®ç°
  </content>
 </entry>
 <entry>
  <title>kelvins-io: micro-mall-pay</title>
  <author>
   <name>kelvins-io</name>
  </author>
  <link href="https://github.com/kelvins-io/micro-mall-pay" />
  <id>urn:rprimus:github:kelvins-io:micro-mall-pay</id>
  <published>2021-04-14T03:04:10Z</published>
  <updated>2021-04-14T03:04:10Z</updated>
  <content type="html">
   å¾®æå¡ï¼æ¯ä»æå¡ï¼go-gprcå¾®æå¡
  </content>
 </entry>
 <entry>
  <title>kelvins-io: micro-mall-sku</title>
  <author>
   <name>kelvins-io</name>
  </author>
  <link href="https://github.com/kelvins-io/micro-mall-sku" />
  <id>urn:rprimus:github:kelvins-io:micro-mall-sku</id>
  <published>2021-04-14T02:50:06Z</published>
  <updated>2021-04-14T02:50:06Z</updated>
  <content type="html">
   å¾®ååï¼åºå­æå¡ï¼go-gprcå¾®æå¡
  </content>
 </entry>
 <entry>
  <title>kelvins-io: micro-mall-users</title>
  <author>
   <name>kelvins-io</name>
  </author>
  <link href="https://github.com/kelvins-io/micro-mall-users" />
  <id>urn:rprimus:github:kelvins-io:micro-mall-users</id>
  <published>2021-04-14T02:38:00Z</published>
  <updated>2021-04-14T02:38:00Z</updated>
  <content type="html">
   å¾®åå-ç¨æ·ä¸­å¿ï¼goå¾®æå¡
  </content>
 </entry>
 <entry>
  <title>electricbubble: gidevice</title>
  <author>
   <name>electricbubble</name>
  </author>
  <link href="https://github.com/electricbubble/gidevice" />
  <id>urn:rprimus:github:electricbubble:gidevice</id>
  <published>2021-04-14T02:01:54Z</published>
  <updated>2021-04-14T02:01:54Z</updated>
  <content type="html">
   communicate with iOS devices implemented with Golang
  </content>
 </entry>
 <entry>
  <title>Sudo-Superman: Excalibur</title>
  <author>
   <name>Sudo-Superman</name>
  </author>
  <link href="https://github.com/Sudo-Superman/Excalibur" />
  <id>urn:rprimus:github:Sudo-Superman:Excalibur</id>
  <published>2021-04-14T01:58:55Z</published>
  <updated>2021-04-14T01:58:55Z</updated>
  <content type="html">
   ðµï¸ A Next Generation APT Scannerðµï¸
  </content>
 </entry>
</feed>
