<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<link rel="self" type="application/atom+xml" href="http://lence.net/github-lisp.atom"/>
<id>urn:rprimus:github:newlisprepos</id>
<updated>2022-10-18T08:17:25Z</updated>
<title type='text'>New GitHub Lisp Repos</title>
 <entry>
  <title>poipoiPIO: mopclip-web</title>
  <author>
   <name>poipoiPIO</name>
  </author>
  <link href="https://github.com/poipoiPIO/mopclip-web" />
  <id>urn:rprimus:github:poipoiPIO:mopclip-web</id>
  <published>2022-10-18T08:17:25Z</published>
  <updated>2022-10-18T08:17:25Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>muyinliu: hunchentoot-utils</title>
  <author>
   <name>muyinliu</name>
  </author>
  <link href="https://github.com/muyinliu/hunchentoot-utils" />
  <id>urn:rprimus:github:muyinliu:hunchentoot-utils</id>
  <published>2022-10-18T02:31:46Z</published>
  <updated>2022-10-18T02:31:46Z</updated>
  <content type="html">
   Utilities for Hunchentoot
  </content>
 </entry>
 <entry>
  <title>muyinliu: cl-mu-utils</title>
  <author>
   <name>muyinliu</name>
  </author>
  <link href="https://github.com/muyinliu/cl-mu-utils" />
  <id>urn:rprimus:github:muyinliu:cl-mu-utils</id>
  <published>2022-10-18T02:26:18Z</published>
  <updated>2022-10-18T02:26:18Z</updated>
  <content type="html">
   Utilities for Common Lisp
  </content>
 </entry>
 <entry>
  <title>muyinliu: cl-etherscan-client</title>
  <author>
   <name>muyinliu</name>
  </author>
  <link href="https://github.com/muyinliu/cl-etherscan-client" />
  <id>urn:rprimus:github:muyinliu:cl-etherscan-client</id>
  <published>2022-10-18T02:19:26Z</published>
  <updated>2022-10-18T02:19:26Z</updated>
  <content type="html">
   Etherscan client for Common Lisp
  </content>
 </entry>
 <entry>
  <title>hermanodecastro: learning-lisp</title>
  <author>
   <name>hermanodecastro</name>
  </author>
  <link href="https://github.com/hermanodecastro/learning-lisp" />
  <id>urn:rprimus:github:hermanodecastro:learning-lisp</id>
  <published>2022-10-18T00:14:21Z</published>
  <updated>2022-10-18T00:14:21Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>awolven: krma</title>
  <author>
   <name>awolven</name>
  </author>
  <link href="https://github.com/awolven/krma" />
  <id>urn:rprimus:github:awolven:krma</id>
  <published>2022-10-17T22:58:01Z</published>
  <updated>2022-10-17T22:58:01Z</updated>
  <content type="html">
   A 2d and 3d graphics toolkit aiming to be efficient and cross platform
  </content>
 </entry>
 <entry>
  <title>skyizwhite: funcallable</title>
  <author>
   <name>skyizwhite</name>
  </author>
  <link href="https://github.com/skyizwhite/funcallable" />
  <id>urn:rprimus:github:skyizwhite:funcallable</id>
  <published>2022-10-17T19:44:18Z</published>
  <updated>2022-10-17T19:44:18Z</updated>
  <content type="html">
   Common Lisp utility for defining funcallable objects
  </content>
 </entry>
 <entry>
  <title>atlas618: vapor-retarder</title>
  <author>
   <name>atlas618</name>
  </author>
  <link href="https://github.com/atlas618/vapor-retarder" />
  <id>urn:rprimus:github:atlas618:vapor-retarder</id>
  <published>2022-10-17T18:23:38Z</published>
  <updated>2022-10-17T18:23:38Z</updated>
  <content type="html">
   Lisp to create a vapor retarder from a polyline.
  </content>
 </entry>
 <entry>
  <title>LiamHowley: stw-svg-parse</title>
  <author>
   <name>LiamHowley</name>
  </author>
  <link href="https://github.com/LiamHowley/stw-svg-parse" />
  <id>urn:rprimus:github:LiamHowley:stw-svg-parse</id>
  <published>2022-10-17T13:12:09Z</published>
  <updated>2022-10-17T13:12:09Z</updated>
  <content type="html">
   An SVG to DOM style parser; parsing elements and attributes into CLOS objects. 
  </content>
 </entry>
 <entry>
  <title>Henry00572: Joy</title>
  <author>
   <name>Henry00572</name>
  </author>
  <link href="https://github.com/Henry00572/Joy" />
  <id>urn:rprimus:github:Henry00572:Joy</id>
  <published>2022-10-17T12:18:25Z</published>
  <updated>2022-10-17T12:18:25Z</updated>
  <content type="html">
   My own attempt at an interpreter that converts Joy code to Lisp
  </content>
 </entry>
 <entry>
  <title>aminaDziriexpertise: -MAPFactory-3D-to-2D</title>
  <author>
   <name>aminaDziriexpertise</name>
  </author>
  <link href="https://github.com/aminaDziriexpertise/-MAPFactory-3D-to-2D" />
  <id>urn:rprimus:github:aminaDziriexpertise:-MAPFactory-3D-to-2D</id>
  <published>2022-10-17T09:28:14Z</published>
  <updated>2022-10-17T09:28:14Z</updated>
  <content type="html">
   Mise Ã  zÃ©ro des plans 3D
  </content>
 </entry>
 <entry>
  <title>rokasgarmasukis: Land-of-lisp</title>
  <author>
   <name>rokasgarmasukis</name>
  </author>
  <link href="https://github.com/rokasgarmasukis/Land-of-lisp" />
  <id>urn:rprimus:github:rokasgarmasukis:Land-of-lisp</id>
  <published>2022-10-17T02:59:12Z</published>
  <updated>2022-10-17T02:59:12Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>stylewarning: maxima</title>
  <author>
   <name>stylewarning</name>
  </author>
  <link href="https://github.com/stylewarning/maxima" />
  <id>urn:rprimus:github:stylewarning:maxima</id>
  <published>2022-10-16T23:11:31Z</published>
  <updated>2022-10-16T23:11:31Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>jack-cedar: lisprey</title>
  <author>
   <name>jack-cedar</name>
  </author>
  <link href="https://github.com/jack-cedar/lisprey" />
  <id>urn:rprimus:github:jack-cedar:lisprey</id>
  <published>2022-10-16T21:21:11Z</published>
  <updated>2022-10-16T21:21:11Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>vydd: semistatic</title>
  <author>
   <name>vydd</name>
  </author>
  <link href="https://github.com/vydd/semistatic" />
  <id>urn:rprimus:github:vydd:semistatic</id>
  <published>2022-10-16T19:28:25Z</published>
  <updated>2022-10-16T19:28:25Z</updated>
  <content type="html">
   Blogware with a twist!
  </content>
 </entry>
 <entry>
  <title>dzangfan: copier.lisp</title>
  <author>
   <name>dzangfan</name>
  </author>
  <link href="https://github.com/dzangfan/copier.lisp" />
  <id>urn:rprimus:github:dzangfan:copier.lisp</id>
  <published>2022-10-16T12:19:15Z</published>
  <updated>2022-10-16T12:19:15Z</updated>
  <content type="html">
   A experimental COP extension for Lisp
  </content>
 </entry>
 <entry>
  <title>tJuette: A-Gentle-Introduction-To-Symbolic-Computing---Exercises--</title>
  <author>
   <name>tJuette</name>
  </author>
  <link href="https://github.com/tJuette/A-Gentle-Introduction-To-Symbolic-Computing---Exercises--" />
  <id>urn:rprimus:github:tJuette:A-Gentle-Introduction-To-Symbolic-Computing---Exercises--</id>
  <published>2022-10-16T07:17:42Z</published>
  <updated>2022-10-16T07:17:42Z</updated>
  <content type="html">
   My solutions to the exercises in David S. Touretzky&#039;s &quot;Common Lisp - A Gentle Introduction To Symbolic Computing -&quot;
  </content>
 </entry>
 <entry>
  <title>angelivan44: autocad-lips</title>
  <author>
   <name>angelivan44</name>
  </author>
  <link href="https://github.com/angelivan44/autocad-lips" />
  <id>urn:rprimus:github:angelivan44:autocad-lips</id>
  <published>2022-10-16T03:10:48Z</published>
  <updated>2022-10-16T03:10:48Z</updated>
  <content type="html">
   this is a collection lips for autocad
  </content>
 </entry>
</feed>
