<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<link rel="self" type="application/atom+xml" href="http://lence.net/github-lisp.atom"/>
<id>urn:rprimus:github:newlisprepos</id>
<updated>2021-04-29T00:19:31Z</updated>
<title type='text'>New GitHub Lisp Repos</title>
 <entry>
  <title>abspetersen: tic-tac-toe-lisp</title>
  <author>
   <name>abspetersen</name>
  </author>
  <link href="https://github.com/abspetersen/tic-tac-toe-lisp" />
  <id>urn:rprimus:github:abspetersen:tic-tac-toe-lisp</id>
  <published>2021-04-29T00:19:31Z</published>
  <updated>2021-04-29T00:19:31Z</updated>
  <content type="html">
   lisp program that allows user to play Tic Tac Toe on a 3x3 board
  </content>
 </entry>
 <entry>
  <title>alex-gutev: cl-form-types</title>
  <author>
   <name>alex-gutev</name>
  </author>
  <link href="https://github.com/alex-gutev/cl-form-types" />
  <id>urn:rprimus:github:alex-gutev:cl-form-types</id>
  <published>2021-04-28T17:54:00Z</published>
  <updated>2021-04-28T17:54:00Z</updated>
  <content type="html">
   Library for determining the types of Common Lisp forms based on information stored in the environment.
  </content>
 </entry>
 <entry>
  <title>xdvom03: lisp-halstead-metrics</title>
  <author>
   <name>xdvom03</name>
  </author>
  <link href="https://github.com/xdvom03/lisp-halstead-metrics" />
  <id>urn:rprimus:github:xdvom03:lisp-halstead-metrics</id>
  <published>2021-04-28T09:06:58Z</published>
  <updated>2021-04-28T09:06:58Z</updated>
  <content type="html">
   Measuring Halstead metrics for Lisp source code.
  </content>
 </entry>
 <entry>
  <title>JohnGarnham: die_maze</title>
  <author>
   <name>JohnGarnham</name>
  </author>
  <link href="https://github.com/JohnGarnham/die_maze" />
  <id>urn:rprimus:github:JohnGarnham:die_maze</id>
  <published>2021-04-27T23:01:24Z</published>
  <updated>2021-04-27T23:01:24Z</updated>
  <content type="html">
   Solve die maze
  </content>
 </entry>
 <entry>
  <title>soup-jingle: calliope</title>
  <author>
   <name>soup-jingle</name>
  </author>
  <link href="https://github.com/soup-jingle/calliope" />
  <id>urn:rprimus:github:soup-jingle:calliope</id>
  <published>2021-04-27T22:40:09Z</published>
  <updated>2021-04-27T22:40:09Z</updated>
  <content type="html">
   common lisp library and music player
  </content>
 </entry>
 <entry>
  <title>soup-jingle: palette</title>
  <author>
   <name>soup-jingle</name>
  </author>
  <link href="https://github.com/soup-jingle/palette" />
  <id>urn:rprimus:github:soup-jingle:palette</id>
  <published>2021-04-27T22:33:56Z</published>
  <updated>2021-04-27T22:33:56Z</updated>
  <content type="html">
   Calculate colors around the color wheel given a starting color. Will be used in quick theme generation for shells, status bars, etc.
  </content>
 </entry>
 <entry>
  <title>mattlow67: genetic-programming</title>
  <author>
   <name>mattlow67</name>
  </author>
  <link href="https://github.com/mattlow67/genetic-programming" />
  <id>urn:rprimus:github:mattlow67:genetic-programming</id>
  <published>2021-04-27T22:01:59Z</published>
  <updated>2021-04-27T22:01:59Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>ankitku: AutoGradTOC</title>
  <author>
   <name>ankitku</name>
  </author>
  <link href="https://github.com/ankitku/AutoGradTOC" />
  <id>urn:rprimus:github:ankitku:AutoGradTOC</id>
  <published>2021-04-27T21:00:28Z</published>
  <updated>2021-04-27T21:00:28Z</updated>
  <content type="html">
   Tools to automate grading of automata. 
  </content>
 </entry>
 <entry>
  <title>ebrasca: cl-crc</title>
  <author>
   <name>ebrasca</name>
  </author>
  <link href="https://github.com/ebrasca/cl-crc" />
  <id>urn:rprimus:github:ebrasca:cl-crc</id>
  <published>2021-04-27T20:33:10Z</published>
  <updated>2021-04-27T20:33:10Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>pgtruesdell: caveman-demo</title>
  <author>
   <name>pgtruesdell</name>
  </author>
  <link href="https://github.com/pgtruesdell/caveman-demo" />
  <id>urn:rprimus:github:pgtruesdell:caveman-demo</id>
  <published>2021-04-27T19:49:38Z</published>
  <updated>2021-04-27T19:49:38Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>muhizia: coro_assignment6</title>
  <author>
   <name>muhizia</name>
  </author>
  <link href="https://github.com/muhizia/coro_assignment6" />
  <id>urn:rprimus:github:muhizia:coro_assignment6</id>
  <published>2021-04-27T19:49:16Z</published>
  <updated>2021-04-27T19:49:16Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>ArtifactCabinet: workbench-Lisp</title>
  <author>
   <name>ArtifactCabinet</name>
  </author>
  <link href="https://github.com/ArtifactCabinet/workbench-Lisp" />
  <id>urn:rprimus:github:ArtifactCabinet:workbench-Lisp</id>
  <published>2021-04-27T18:25:21Z</published>
  <updated>2021-04-27T18:25:21Z</updated>
  <content type="html">
   What if every thing was a pair/cons?
  </content>
 </entry>
 <entry>
  <title>kokokodak: cl-stuff</title>
  <author>
   <name>kokokodak</name>
  </author>
  <link href="https://github.com/kokokodak/cl-stuff" />
  <id>urn:rprimus:github:kokokodak:cl-stuff</id>
  <published>2021-04-27T13:29:30Z</published>
  <updated>2021-04-27T13:29:30Z</updated>
  <content type="html">
   my cl experiments mostly
  </content>
 </entry>
 <entry>
  <title>lblod: app-lblod-harvester</title>
  <author>
   <name>lblod</name>
  </author>
  <link href="https://github.com/lblod/app-lblod-harvester" />
  <id>urn:rprimus:github:lblod:app-lblod-harvester</id>
  <published>2021-04-27T11:28:09Z</published>
  <updated>2021-04-27T11:28:09Z</updated>
  <content type="html">
   Harvesting Self Service
  </content>
 </entry>
 <entry>
  <title>ailrk: algebraic-coding</title>
  <author>
   <name>ailrk</name>
  </author>
  <link href="https://github.com/ailrk/algebraic-coding" />
  <id>urn:rprimus:github:ailrk:algebraic-coding</id>
  <published>2021-04-27T09:51:24Z</published>
  <updated>2021-04-27T09:51:24Z</updated>
  <content type="html">
   common lisp algebraic coding library
  </content>
 </entry>
 <entry>
  <title>soup-jingle: config-io</title>
  <author>
   <name>soup-jingle</name>
  </author>
  <link href="https://github.com/soup-jingle/config-io" />
  <id>urn:rprimus:github:soup-jingle:config-io</id>
  <published>2021-04-27T08:54:11Z</published>
  <updated>2021-04-27T08:54:11Z</updated>
  <content type="html">
   small library for loading/saving config files (written in lisp)
  </content>
 </entry>
 <entry>
  <title>ban-masa: dynamixel_hand</title>
  <author>
   <name>ban-masa</name>
  </author>
  <link href="https://github.com/ban-masa/dynamixel_hand" />
  <id>urn:rprimus:github:ban-masa:dynamixel_hand</id>
  <published>2021-04-27T08:15:35Z</published>
  <updated>2021-04-27T08:15:35Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>soup-jingle: twitter-bot</title>
  <author>
   <name>soup-jingle</name>
  </author>
  <link href="https://github.com/soup-jingle/twitter-bot" />
  <id>urn:rprimus:github:soup-jingle:twitter-bot</id>
  <published>2021-04-27T08:06:52Z</published>
  <updated>2021-04-27T08:06:52Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>asjad99: lisp-practice</title>
  <author>
   <name>asjad99</name>
  </author>
  <link href="https://github.com/asjad99/lisp-practice" />
  <id>urn:rprimus:github:asjad99:lisp-practice</id>
  <published>2021-04-27T04:18:58Z</published>
  <updated>2021-04-27T04:18:58Z</updated>
  <content type="html">
   
  </content>
 </entry>
</feed>
