<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<link rel="self" type="application/atom+xml" href="http://lence.net/github-lisp.atom"/>
<id>urn:rprimus:github:newlisprepos</id>
<updated>2021-07-05T09:15:57Z</updated>
<title type='text'>New GitHub Lisp Repos</title>
 <entry>
  <title>Gimolayka228: test1</title>
  <author>
   <name>Gimolayka228</name>
  </author>
  <link href="https://github.com/Gimolayka228/test1" />
  <id>urn:rprimus:github:Gimolayka228:test1</id>
  <published>2021-07-05T09:15:57Z</published>
  <updated>2021-07-05T09:15:57Z</updated>
  <content type="html">
   test ibm
  </content>
 </entry>
 <entry>
  <title>FloatingLion: Cabin-Life</title>
  <author>
   <name>FloatingLion</name>
  </author>
  <link href="https://github.com/FloatingLion/Cabin-Life" />
  <id>urn:rprimus:github:FloatingLion:Cabin-Life</id>
  <published>2021-07-05T03:56:31Z</published>
  <updated>2021-07-05T03:56:31Z</updated>
  <content type="html">
   Some Common Lisp works.
  </content>
 </entry>
 <entry>
  <title>canbeyaznar: prolog-implementation-with-CL</title>
  <author>
   <name>canbeyaznar</name>
  </author>
  <link href="https://github.com/canbeyaznar/prolog-implementation-with-CL" />
  <id>urn:rprimus:github:canbeyaznar:prolog-implementation-with-CL</id>
  <published>2021-07-04T22:49:52Z</published>
  <updated>2021-07-04T22:49:52Z</updated>
  <content type="html">
   simple prolog implementation with using common lips
  </content>
 </entry>
 <entry>
  <title>canbeyaznar: lisp-brute-force-decoder</title>
  <author>
   <name>canbeyaznar</name>
  </author>
  <link href="https://github.com/canbeyaznar/lisp-brute-force-decoder" />
  <id>urn:rprimus:github:canbeyaznar:lisp-brute-force-decoder</id>
  <published>2021-07-04T22:36:30Z</published>
  <updated>2021-07-04T22:36:30Z</updated>
  <content type="html">
   A lisp project that decrypts the ciphertext from the user with the brute force method.
  </content>
 </entry>
 <entry>
  <title>lctr: webdo</title>
  <author>
   <name>lctr</name>
  </author>
  <link href="https://github.com/lctr/webdo" />
  <id>urn:rprimus:github:lctr:webdo</id>
  <published>2021-07-04T21:23:22Z</published>
  <updated>2021-07-04T21:23:22Z</updated>
  <content type="html">
   A simple todo list web app powered by Common Lisp
  </content>
 </entry>
 <entry>
  <title>Kehvarl: cl-roguelight</title>
  <author>
   <name>Kehvarl</name>
  </author>
  <link href="https://github.com/Kehvarl/cl-roguelight" />
  <id>urn:rprimus:github:Kehvarl:cl-roguelight</id>
  <published>2021-07-04T20:38:54Z</published>
  <updated>2021-07-04T20:38:54Z</updated>
  <content type="html">
   Playing with lighting in common-lisp roguelike.
  </content>
 </entry>
 <entry>
  <title>K1D77A: cl-read-writer-lock</title>
  <author>
   <name>K1D77A</name>
  </author>
  <link href="https://github.com/K1D77A/cl-read-writer-lock" />
  <id>urn:rprimus:github:K1D77A:cl-read-writer-lock</id>
  <published>2021-07-04T17:53:35Z</published>
  <updated>2021-07-04T17:53:35Z</updated>
  <content type="html">
   read writer lock
  </content>
 </entry>
 <entry>
  <title>drfg0119: Obstacle-Avoidance-on-Labmade-Robot</title>
  <author>
   <name>drfg0119</name>
  </author>
  <link href="https://github.com/drfg0119/Obstacle-Avoidance-on-Labmade-Robot" />
  <id>urn:rprimus:github:drfg0119:Obstacle-Avoidance-on-Labmade-Robot</id>
  <published>2021-07-04T17:13:34Z</published>
  <updated>2021-07-04T17:13:34Z</updated>
  <content type="html">
   Path Following and Obstacle Avoidance by Deep Deterministic Policy Gradient
  </content>
 </entry>
 <entry>
  <title>smvamse: utilz</title>
  <author>
   <name>smvamse</name>
  </author>
  <link href="https://github.com/smvamse/utilz" />
  <id>urn:rprimus:github:smvamse:utilz</id>
  <published>2021-07-04T14:09:28Z</published>
  <updated>2021-07-04T14:09:28Z</updated>
  <content type="html">
   My extensions to CommonLisp
  </content>
 </entry>
 <entry>
  <title>Aksej: Mang</title>
  <author>
   <name>Aksej</name>
  </author>
  <link href="https://github.com/Aksej/Mang" />
  <id>urn:rprimus:github:Aksej:Mang</id>
  <published>2021-07-04T09:49:41Z</published>
  <updated>2021-07-04T09:49:41Z</updated>
  <content type="html">
   A conlanging program
  </content>
 </entry>
 <entry>
  <title>marekmaskarinec: grapher</title>
  <author>
   <name>marekmaskarinec</name>
  </author>
  <link href="https://github.com/marekmaskarinec/grapher" />
  <id>urn:rprimus:github:marekmaskarinec:grapher</id>
  <published>2021-07-04T08:35:10Z</published>
  <updated>2021-07-04T08:35:10Z</updated>
  <content type="html">
   Function drawer in common lisp
  </content>
 </entry>
 <entry>
  <title>yurrriq: paip</title>
  <author>
   <name>yurrriq</name>
  </author>
  <link href="https://github.com/yurrriq/paip" />
  <id>urn:rprimus:github:yurrriq:paip</id>
  <published>2021-07-04T05:22:56Z</published>
  <updated>2021-07-04T05:22:56Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>rajasegar: cl-tvmaze</title>
  <author>
   <name>rajasegar</name>
  </author>
  <link href="https://github.com/rajasegar/cl-tvmaze" />
  <id>urn:rprimus:github:rajasegar:cl-tvmaze</id>
  <published>2021-07-04T05:14:51Z</published>
  <updated>2021-07-04T05:14:51Z</updated>
  <content type="html">
   TV Maze api demo in Common Lisp
  </content>
 </entry>
 <entry>
  <title>callsamu: lispychip-8</title>
  <author>
   <name>callsamu</name>
  </author>
  <link href="https://github.com/callsamu/lispychip-8" />
  <id>urn:rprimus:github:callsamu:lispychip-8</id>
  <published>2021-07-04T04:15:56Z</published>
  <updated>2021-07-04T04:15:56Z</updated>
  <content type="html">
   A CHIP-8 emulator written in Common Lisp.
  </content>
 </entry>
 <entry>
  <title>lorentzj: mystery</title>
  <author>
   <name>lorentzj</name>
  </author>
  <link href="https://github.com/lorentzj/mystery" />
  <id>urn:rprimus:github:lorentzj:mystery</id>
  <published>2021-07-03T23:10:05Z</published>
  <updated>2021-07-03T23:10:05Z</updated>
  <content type="html">
   Why does it do that?
  </content>
 </entry>
 <entry>
  <title>rajasegar: lisp-for-the-web</title>
  <author>
   <name>rajasegar</name>
  </author>
  <link href="https://github.com/rajasegar/lisp-for-the-web" />
  <id>urn:rprimus:github:rajasegar:lisp-for-the-web</id>
  <published>2021-07-03T14:10:20Z</published>
  <updated>2021-07-03T14:10:20Z</updated>
  <content type="html">
   Code for lisp for the web post
  </content>
 </entry>
 <entry>
  <title>christophejunke: cl-infinidash</title>
  <author>
   <name>christophejunke</name>
  </author>
  <link href="https://github.com/christophejunke/cl-infinidash" />
  <id>urn:rprimus:github:christophejunke:cl-infinidash</id>
  <published>2021-07-03T08:50:53Z</published>
  <updated>2021-07-03T08:50:53Z</updated>
  <content type="html">
   Lisp API for AWS Infinidash
  </content>
 </entry>
 <entry>
  <title>wasuken: dp-learn</title>
  <author>
   <name>wasuken</name>
  </author>
  <link href="https://github.com/wasuken/dp-learn" />
  <id>urn:rprimus:github:wasuken:dp-learn</id>
  <published>2021-07-03T08:37:57Z</published>
  <updated>2021-07-03T08:37:57Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>rajasegar: cl-super-rentals</title>
  <author>
   <name>rajasegar</name>
  </author>
  <link href="https://github.com/rajasegar/cl-super-rentals" />
  <id>urn:rprimus:github:rajasegar:cl-super-rentals</id>
  <published>2021-07-03T03:22:02Z</published>
  <updated>2021-07-03T03:22:02Z</updated>
  <content type="html">
   Super rentals in Common Lisp
  </content>
 </entry>
 <entry>
  <title>ankitku: gradescope-acl2s</title>
  <author>
   <name>ankitku</name>
  </author>
  <link href="https://github.com/ankitku/gradescope-acl2s" />
  <id>urn:rprimus:github:ankitku:gradescope-acl2s</id>
  <published>2021-07-03T02:55:11Z</published>
  <updated>2021-07-03T02:55:11Z</updated>
  <content type="html">
   Library to automate grading of ACL2s forms on Gradescope
  </content>
 </entry>
</feed>
