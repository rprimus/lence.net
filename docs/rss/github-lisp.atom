<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<link rel="self" type="application/atom+xml" href="http://lence.net/github-lisp.atom"/>
<id>urn:rprimus:github:newlisprepos</id>
<updated>2021-04-14T06:03:59Z</updated>
<title type='text'>New GitHub Lisp Repos</title>
 <entry>
  <title>kaihenghu: CS2800Project</title>
  <author>
   <name>kaihenghu</name>
  </author>
  <link href="https://github.com/kaihenghu/CS2800Project" />
  <id>urn:rprimus:github:kaihenghu:CS2800Project</id>
  <published>2021-04-14T06:03:59Z</published>
  <updated>2021-04-14T06:03:59Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>ellaholl: LCProject</title>
  <author>
   <name>ellaholl</name>
  </author>
  <link href="https://github.com/ellaholl/LCProject" />
  <id>urn:rprimus:github:ellaholl:LCProject</id>
  <published>2021-04-14T04:00:05Z</published>
  <updated>2021-04-14T04:00:05Z</updated>
  <content type="html">
   Final Project for CS2800
  </content>
 </entry>
 <entry>
  <title>namin: 3-proto-lisp</title>
  <author>
   <name>namin</name>
  </author>
  <link href="https://github.com/namin/3-proto-lisp" />
  <id>urn:rprimus:github:namin:3-proto-lisp</id>
  <published>2021-04-14T03:27:09Z</published>
  <updated>2021-04-14T03:27:09Z</updated>
  <content type="html">
   Code from the paper Reflection for the Masses by Charlotte Herzeel, Pascal Costanza, and Theo D&#039;Hondt.
  </content>
 </entry>
 <entry>
  <title>cgore: cl-cryptonator-api</title>
  <author>
   <name>cgore</name>
  </author>
  <link href="https://github.com/cgore/cl-cryptonator-api" />
  <id>urn:rprimus:github:cgore:cl-cryptonator-api</id>
  <published>2021-04-14T00:52:20Z</published>
  <updated>2021-04-14T00:52:20Z</updated>
  <content type="html">
   A Common Lisp library for interacting with Cryptonator&#039;s API.
  </content>
 </entry>
 <entry>
  <title>AndrewAngulo: LogicAndComputationFinal</title>
  <author>
   <name>AndrewAngulo</name>
  </author>
  <link href="https://github.com/AndrewAngulo/LogicAndComputationFinal" />
  <id>urn:rprimus:github:AndrewAngulo:LogicAndComputationFinal</id>
  <published>2021-04-13T23:27:56Z</published>
  <updated>2021-04-13T23:27:56Z</updated>
  <content type="html">
   Repository for Logic and Computation final project at Northeastern University
  </content>
 </entry>
 <entry>
  <title>val314159: ly</title>
  <author>
   <name>val314159</name>
  </author>
  <link href="https://github.com/val314159/ly" />
  <id>urn:rprimus:github:val314159:ly</id>
  <published>2021-04-13T19:29:28Z</published>
  <updated>2021-04-13T19:29:28Z</updated>
  <content type="html">
   lisp yaml, improved from cl-yaml (reads whole files with multiple documents)
  </content>
 </entry>
 <entry>
  <title>vindarel: lish-init</title>
  <author>
   <name>vindarel</name>
  </author>
  <link href="https://github.com/vindarel/lish-init" />
  <id>urn:rprimus:github:vindarel:lish-init</id>
  <published>2021-04-13T17:37:50Z</published>
  <updated>2021-04-13T17:37:50Z</updated>
  <content type="html">
   Playing with the Lish shell ! https://github.com/nibbula/lish
  </content>
 </entry>
 <entry>
  <title>kwk18: FP</title>
  <author>
   <name>kwk18</name>
  </author>
  <link href="https://github.com/kwk18/FP" />
  <id>urn:rprimus:github:kwk18:FP</id>
  <published>2021-04-13T17:13:06Z</published>
  <updated>2021-04-13T17:13:06Z</updated>
  <content type="html">
   6 semester, Functional programming
  </content>
 </entry>
 <entry>
  <title>sirherrbatka: hermetica</title>
  <author>
   <name>sirherrbatka</name>
  </author>
  <link href="https://github.com/sirherrbatka/hermetica" />
  <id>urn:rprimus:github:sirherrbatka:hermetica</id>
  <published>2021-04-13T15:47:32Z</published>
  <updated>2021-04-13T15:47:32Z</updated>
  <content type="html">
   Sequence pattern matching 
  </content>
 </entry>
 <entry>
  <title>LR-POR: tutorial</title>
  <author>
   <name>LR-POR</name>
  </author>
  <link href="https://github.com/LR-POR/tutorial" />
  <id>urn:rprimus:github:LR-POR:tutorial</id>
  <published>2021-04-13T12:55:30Z</published>
  <updated>2021-04-13T12:55:30Z</updated>
  <content type="html">
   Example grammars and additional materials from a tutorial on using the LinGO Grammar Matrix  for the implementation of HPSG grammars: http://arademaker.github.io/blog/2021/04/05/grammar-matrix.html
  </content>
 </entry>
 <entry>
  <title>val314159: cyaml</title>
  <author>
   <name>val314159</name>
  </author>
  <link href="https://github.com/val314159/cyaml" />
  <id>urn:rprimus:github:val314159:cyaml</id>
  <published>2021-04-13T03:30:02Z</published>
  <updated>2021-04-13T03:30:02Z</updated>
  <content type="html">
   cyaml
  </content>
 </entry>
 <entry>
  <title>jillbaltrus: karatsuba</title>
  <author>
   <name>jillbaltrus</name>
  </author>
  <link href="https://github.com/jillbaltrus/karatsuba" />
  <id>urn:rprimus:github:jillbaltrus:karatsuba</id>
  <published>2021-04-13T02:34:47Z</published>
  <updated>2021-04-13T02:34:47Z</updated>
  <content type="html">
   cs2800 final proj
  </content>
 </entry>
 <entry>
  <title>max-rocha: PT2EXCEL</title>
  <author>
   <name>max-rocha</name>
  </author>
  <link href="https://github.com/max-rocha/PT2EXCEL" />
  <id>urn:rprimus:github:max-rocha:PT2EXCEL</id>
  <published>2021-04-12T22:39:31Z</published>
  <updated>2021-04-12T22:39:31Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>KatarinaDeletic: ByteLisp</title>
  <author>
   <name>KatarinaDeletic</name>
  </author>
  <link href="https://github.com/KatarinaDeletic/ByteLisp" />
  <id>urn:rprimus:github:KatarinaDeletic:ByteLisp</id>
  <published>2021-04-12T21:16:33Z</published>
  <updated>2021-04-12T21:16:33Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>jpleboeuf: exercism_common-lisp</title>
  <author>
   <name>jpleboeuf</name>
  </author>
  <link href="https://github.com/jpleboeuf/exercism_common-lisp" />
  <id>urn:rprimus:github:jpleboeuf:exercism_common-lisp</id>
  <published>2021-04-12T20:50:15Z</published>
  <updated>2021-04-12T20:50:15Z</updated>
  <content type="html">
   My solutions to the exercises from the Common Lisp track on Exercism.
  </content>
 </entry>
 <entry>
  <title>val314159: lyaml</title>
  <author>
   <name>val314159</name>
  </author>
  <link href="https://github.com/val314159/lyaml" />
  <id>urn:rprimus:github:val314159:lyaml</id>
  <published>2021-04-12T19:23:30Z</published>
  <updated>2021-04-12T19:23:30Z</updated>
  <content type="html">
   lispy improved libyaml
  </content>
 </entry>
 <entry>
  <title>ethan-leba: stop-and-wait-arq-proof</title>
  <author>
   <name>ethan-leba</name>
  </author>
  <link href="https://github.com/ethan-leba/stop-and-wait-arq-proof" />
  <id>urn:rprimus:github:ethan-leba:stop-and-wait-arq-proof</id>
  <published>2021-04-12T18:48:41Z</published>
  <updated>2021-04-12T18:48:41Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>babytire: Projects</title>
  <author>
   <name>babytire</name>
  </author>
  <link href="https://github.com/babytire/Projects" />
  <id>urn:rprimus:github:babytire:Projects</id>
  <published>2021-04-12T14:36:56Z</published>
  <updated>2021-04-12T14:36:56Z</updated>
  <content type="html">
   various projects and stuff I&#039;ve worked on
  </content>
 </entry>
 <entry>
  <title>darabi: cl-dcmtk</title>
  <author>
   <name>darabi</name>
  </author>
  <link href="https://github.com/darabi/cl-dcmtk" />
  <id>urn:rprimus:github:darabi:cl-dcmtk</id>
  <published>2021-04-12T14:01:45Z</published>
  <updated>2021-04-12T14:01:45Z</updated>
  <content type="html">
   CFFI wrapper for DCMTK
  </content>
 </entry>
 <entry>
  <title>lisp-mirror: ltk-plotchart</title>
  <author>
   <name>lisp-mirror</name>
  </author>
  <link href="https://github.com/lisp-mirror/ltk-plotchart" />
  <id>urn:rprimus:github:lisp-mirror:ltk-plotchart</id>
  <published>2021-04-12T13:56:11Z</published>
  <updated>2021-04-12T13:56:11Z</updated>
  <content type="html">
   https://notabug.org/peterlane/ltk-plotchart
  </content>
 </entry>
 <entry>
  <title>lisp-polymorph: polymorph.type-protocol</title>
  <author>
   <name>lisp-polymorph</name>
  </author>
  <link href="https://github.com/lisp-polymorph/polymorph.type-protocol" />
  <id>urn:rprimus:github:lisp-polymorph:polymorph.type-protocol</id>
  <published>2021-04-12T08:33:29Z</published>
  <updated>2021-04-12T08:33:29Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>lisp-polymorph: polymorph.copy-cast</title>
  <author>
   <name>lisp-polymorph</name>
  </author>
  <link href="https://github.com/lisp-polymorph/polymorph.copy-cast" />
  <id>urn:rprimus:github:lisp-polymorph:polymorph.copy-cast</id>
  <published>2021-04-12T08:24:26Z</published>
  <updated>2021-04-12T08:24:26Z</updated>
  <content type="html">
   Copy and cast for polymorph.stl
  </content>
 </entry>
 <entry>
  <title>blerdwor: S21-CS161</title>
  <author>
   <name>blerdwor</name>
  </author>
  <link href="https://github.com/blerdwor/S21-CS161" />
  <id>urn:rprimus:github:blerdwor:S21-CS161</id>
  <published>2021-04-12T06:00:06Z</published>
  <updated>2021-04-12T06:00:06Z</updated>
  <content type="html">
   These are my solutions to the projects for CS 161 - Introduction to Artificial Intelligence, taken during Spring 2021. 
  </content>
 </entry>
 <entry>
  <title>earnivore: Lisp-Binary-Search-Game</title>
  <author>
   <name>earnivore</name>
  </author>
  <link href="https://github.com/earnivore/Lisp-Binary-Search-Game" />
  <id>urn:rprimus:github:earnivore:Lisp-Binary-Search-Game</id>
  <published>2021-04-12T04:04:27Z</published>
  <updated>2021-04-12T04:04:27Z</updated>
  <content type="html">
   A quick guessing game using a binary search in Lisp
  </content>
 </entry>
</feed>
