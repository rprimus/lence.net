<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<link rel="self" type="application/atom+xml" href="http://lence.net/github-lisp.atom"/>
<id>urn:rprimus:github:newlisprepos</id>
<updated>2021-04-21T01:08:01Z</updated>
<title type='text'>New GitHub Lisp Repos</title>
 <entry>
  <title>mahirvaluj: osaml</title>
  <author>
   <name>mahirvaluj</name>
  </author>
  <link href="https://github.com/mahirvaluj/osaml" />
  <id>urn:rprimus:github:mahirvaluj:osaml</id>
  <published>2021-04-21T01:08:01Z</published>
  <updated>2021-04-21T01:08:01Z</updated>
  <content type="html">
   SamLang
  </content>
 </entry>
 <entry>
  <title>chang-ye-tu: lie</title>
  <author>
   <name>chang-ye-tu</name>
  </author>
  <link href="https://github.com/chang-ye-tu/lie" />
  <id>urn:rprimus:github:chang-ye-tu:lie</id>
  <published>2021-04-21T00:21:44Z</published>
  <updated>2021-04-21T00:21:44Z</updated>
  <content type="html">
   Maxima code accompanying the paper &quot;Note on Merton&#039;s Optimal Consumption-Investment Problem&quot;.
  </content>
 </entry>
 <entry>
  <title>val314159: weblisp</title>
  <author>
   <name>val314159</name>
  </author>
  <link href="https://github.com/val314159/weblisp" />
  <id>urn:rprimus:github:val314159:weblisp</id>
  <published>2021-04-20T20:20:10Z</published>
  <updated>2021-04-20T20:20:10Z</updated>
  <content type="html">
   weblisp.  yup, not the greatest name but it&#039;s accurate for now
  </content>
 </entry>
 <entry>
  <title>gsou: cl-rtlgen</title>
  <author>
   <name>gsou</name>
  </author>
  <link href="https://github.com/gsou/cl-rtlgen" />
  <id>urn:rprimus:github:gsou:cl-rtlgen</id>
  <published>2021-04-20T19:40:36Z</published>
  <updated>2021-04-20T19:40:36Z</updated>
  <content type="html">
   Functions to automate some parts of HDL writing
  </content>
 </entry>
 <entry>
  <title>rkawala: touretzky-gentle</title>
  <author>
   <name>rkawala</name>
  </author>
  <link href="https://github.com/rkawala/touretzky-gentle" />
  <id>urn:rprimus:github:rkawala:touretzky-gentle</id>
  <published>2021-04-20T17:47:06Z</published>
  <updated>2021-04-20T17:47:06Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>jcguu95: stumpwm--dynamic-floating-group</title>
  <author>
   <name>jcguu95</name>
  </author>
  <link href="https://github.com/jcguu95/stumpwm--dynamic-floating-group" />
  <id>urn:rprimus:github:jcguu95:stumpwm--dynamic-floating-group</id>
  <published>2021-04-20T15:17:13Z</published>
  <updated>2021-04-20T15:17:13Z</updated>
  <content type="html">
   A dynamic-group for StumpWM in the floating setting.
  </content>
 </entry>
 <entry>
  <title>mmontone: cl-mimeparse</title>
  <author>
   <name>mmontone</name>
  </author>
  <link href="https://github.com/mmontone/cl-mimeparse" />
  <id>urn:rprimus:github:mmontone:cl-mimeparse</id>
  <published>2021-04-20T01:23:42Z</published>
  <updated>2021-04-20T01:23:42Z</updated>
  <content type="html">
   Common Lisp library for parsing MIME types.
  </content>
 </entry>
 <entry>
  <title>mmaxim2710: FP</title>
  <author>
   <name>mmaxim2710</name>
  </author>
  <link href="https://github.com/mmaxim2710/FP" />
  <id>urn:rprimus:github:mmaxim2710:FP</id>
  <published>2021-04-19T21:45:22Z</published>
  <updated>2021-04-19T21:45:22Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>complexitycollapse: 0am</title>
  <author>
   <name>complexitycollapse</name>
  </author>
  <link href="https://github.com/complexitycollapse/0am" />
  <id>urn:rprimus:github:complexitycollapse:0am</id>
  <published>2021-04-19T20:47:36Z</published>
  <updated>2021-04-19T20:47:36Z</updated>
  <content type="html">
   Trying to hit the sweet spot of my perfect Common Lisp unit testing framework.
  </content>
 </entry>
 <entry>
  <title>borodust: claw-usb</title>
  <author>
   <name>borodust</name>
  </author>
  <link href="https://github.com/borodust/claw-usb" />
  <id>urn:rprimus:github:borodust:claw-usb</id>
  <published>2021-04-19T20:23:34Z</published>
  <updated>2021-04-19T20:23:34Z</updated>
  <content type="html">
   Thin bindings to libusb for Common Lisp
  </content>
 </entry>
 <entry>
  <title>splittist: scanfcl</title>
  <author>
   <name>splittist</name>
  </author>
  <link href="https://github.com/splittist/scanfcl" />
  <id>urn:rprimus:github:splittist:scanfcl</id>
  <published>2021-04-19T20:06:58Z</published>
  <updated>2021-04-19T20:06:58Z</updated>
  <content type="html">
   An implementation of sscanf in Common Lisp
  </content>
 </entry>
 <entry>
  <title>TylerWest99: LispProject7</title>
  <author>
   <name>TylerWest99</name>
  </author>
  <link href="https://github.com/TylerWest99/LispProject7" />
  <id>urn:rprimus:github:TylerWest99:LispProject7</id>
  <published>2021-04-19T17:29:22Z</published>
  <updated>2021-04-19T17:29:22Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>eggplants: unko.lisp</title>
  <author>
   <name>eggplants</name>
  </author>
  <link href="https://github.com/eggplants/unko.lisp" />
  <id>urn:rprimus:github:eggplants:unko.lisp</id>
  <published>2021-04-19T14:56:45Z</published>
  <updated>2021-04-19T14:56:45Z</updated>
  <content type="html">
   sample commonlisp package with cl-package
  </content>
 </entry>
 <entry>
  <title>schmalz: wizards-adventure.lisp</title>
  <author>
   <name>schmalz</name>
  </author>
  <link href="https://github.com/schmalz/wizards-adventure.lisp" />
  <id>urn:rprimus:github:schmalz:wizards-adventure.lisp</id>
  <published>2021-04-19T14:22:52Z</published>
  <updated>2021-04-19T14:22:52Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>stoneyboi: 343Project7</title>
  <author>
   <name>stoneyboi</name>
  </author>
  <link href="https://github.com/stoneyboi/343Project7" />
  <id>urn:rprimus:github:stoneyboi:343Project7</id>
  <published>2021-04-19T13:29:09Z</published>
  <updated>2021-04-19T13:29:09Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>eggplants: cl-crd</title>
  <author>
   <name>eggplants</name>
  </author>
  <link href="https://github.com/eggplants/cl-crd" />
  <id>urn:rprimus:github:eggplants:cl-crd</id>
  <published>2021-04-19T12:18:23Z</published>
  <updated>2021-04-19T12:18:23Z</updated>
  <content type="html">
   ã¬ãã¡ã¬ã³ã¹ååãã¼ã¿ãã¼ã¹ for commonlisp
  </content>
 </entry>
 <entry>
  <title>psandbrook: advent-of-code</title>
  <author>
   <name>psandbrook</name>
  </author>
  <link href="https://github.com/psandbrook/advent-of-code" />
  <id>urn:rprimus:github:psandbrook:advent-of-code</id>
  <published>2021-04-19T09:35:48Z</published>
  <updated>2021-04-19T09:35:48Z</updated>
  <content type="html">
   https://adventofcode.com/
  </content>
 </entry>
 <entry>
  <title>scymtym: s-expression-syntax</title>
  <author>
   <name>scymtym</name>
  </author>
  <link href="https://github.com/scymtym/s-expression-syntax" />
  <id>urn:rprimus:github:scymtym:s-expression-syntax</id>
  <published>2021-04-19T08:08:17Z</published>
  <updated>2021-04-19T08:08:17Z</updated>
  <content type="html">
   UNFINISHED, FOR DISCUSSION PURPOSES ONLY, YOU CANNOT USE THIS YET
  </content>
 </entry>
 <entry>
  <title>HakiSan: Angler-script</title>
  <author>
   <name>HakiSan</name>
  </author>
  <link href="https://github.com/HakiSan/Angler-script" />
  <id>urn:rprimus:github:HakiSan:Angler-script</id>
  <published>2021-04-19T06:15:18Z</published>
  <updated>2021-04-19T06:15:18Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>IsraP: AutoLisp</title>
  <author>
   <name>IsraP</name>
  </author>
  <link href="https://github.com/IsraP/AutoLisp" />
  <id>urn:rprimus:github:IsraP:AutoLisp</id>
  <published>2021-04-19T02:46:29Z</published>
  <updated>2021-04-19T02:46:29Z</updated>
  <content type="html">
   
  </content>
 </entry>
</feed>
