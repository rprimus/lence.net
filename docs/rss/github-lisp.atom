<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<link rel="self" type="application/atom+xml" href="http://lence.net/github-lisp.atom"/>
<id>urn:rprimus:github:newlisprepos</id>
<updated>2021-04-13T03:30:02Z</updated>
<title type='text'>New GitHub Lisp Repos</title>
 <entry>
  <title>val314159: cyaml</title>
  <author>
   <name>val314159</name>
  </author>
  <link href="https://github.com/val314159/cyaml" />
  <id>urn:rprimus:github:val314159:cyaml</id>
  <published>2021-04-13T03:30:02Z</published>
  <updated>2021-04-13T03:30:02Z</updated>
  <content type="html">
   cyaml
  </content>
 </entry>
 <entry>
  <title>jillbaltrus: karatsuba</title>
  <author>
   <name>jillbaltrus</name>
  </author>
  <link href="https://github.com/jillbaltrus/karatsuba" />
  <id>urn:rprimus:github:jillbaltrus:karatsuba</id>
  <published>2021-04-13T02:34:47Z</published>
  <updated>2021-04-13T02:34:47Z</updated>
  <content type="html">
   cs2800 final proj
  </content>
 </entry>
 <entry>
  <title>max-rocha: PT2EXCEL</title>
  <author>
   <name>max-rocha</name>
  </author>
  <link href="https://github.com/max-rocha/PT2EXCEL" />
  <id>urn:rprimus:github:max-rocha:PT2EXCEL</id>
  <published>2021-04-12T22:39:31Z</published>
  <updated>2021-04-12T22:39:31Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>KatarinaDeletic: ByteLisp</title>
  <author>
   <name>KatarinaDeletic</name>
  </author>
  <link href="https://github.com/KatarinaDeletic/ByteLisp" />
  <id>urn:rprimus:github:KatarinaDeletic:ByteLisp</id>
  <published>2021-04-12T21:16:33Z</published>
  <updated>2021-04-12T21:16:33Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>val314159: lyaml</title>
  <author>
   <name>val314159</name>
  </author>
  <link href="https://github.com/val314159/lyaml" />
  <id>urn:rprimus:github:val314159:lyaml</id>
  <published>2021-04-12T19:23:30Z</published>
  <updated>2021-04-12T19:23:30Z</updated>
  <content type="html">
   lispy improved libyaml
  </content>
 </entry>
 <entry>
  <title>ethan-leba: stop-and-wait-arq-proof</title>
  <author>
   <name>ethan-leba</name>
  </author>
  <link href="https://github.com/ethan-leba/stop-and-wait-arq-proof" />
  <id>urn:rprimus:github:ethan-leba:stop-and-wait-arq-proof</id>
  <published>2021-04-12T18:48:41Z</published>
  <updated>2021-04-12T18:48:41Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>darabi: cl-dcmtk</title>
  <author>
   <name>darabi</name>
  </author>
  <link href="https://github.com/darabi/cl-dcmtk" />
  <id>urn:rprimus:github:darabi:cl-dcmtk</id>
  <published>2021-04-12T14:01:45Z</published>
  <updated>2021-04-12T14:01:45Z</updated>
  <content type="html">
   CFFI wrapper for DCMTK
  </content>
 </entry>
 <entry>
  <title>lisp-mirror: ltk-plotchart</title>
  <author>
   <name>lisp-mirror</name>
  </author>
  <link href="https://github.com/lisp-mirror/ltk-plotchart" />
  <id>urn:rprimus:github:lisp-mirror:ltk-plotchart</id>
  <published>2021-04-12T13:56:11Z</published>
  <updated>2021-04-12T13:56:11Z</updated>
  <content type="html">
   https://notabug.org/peterlane/ltk-plotchart
  </content>
 </entry>
 <entry>
  <title>lisp-polymorph: polymorph.type-protocol</title>
  <author>
   <name>lisp-polymorph</name>
  </author>
  <link href="https://github.com/lisp-polymorph/polymorph.type-protocol" />
  <id>urn:rprimus:github:lisp-polymorph:polymorph.type-protocol</id>
  <published>2021-04-12T08:33:29Z</published>
  <updated>2021-04-12T08:33:29Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>lisp-polymorph: polymorph.copy-cast</title>
  <author>
   <name>lisp-polymorph</name>
  </author>
  <link href="https://github.com/lisp-polymorph/polymorph.copy-cast" />
  <id>urn:rprimus:github:lisp-polymorph:polymorph.copy-cast</id>
  <published>2021-04-12T08:24:26Z</published>
  <updated>2021-04-12T08:24:26Z</updated>
  <content type="html">
   Copy and cast for polymorph.stl
  </content>
 </entry>
 <entry>
  <title>blerdwor: S21-CS161</title>
  <author>
   <name>blerdwor</name>
  </author>
  <link href="https://github.com/blerdwor/S21-CS161" />
  <id>urn:rprimus:github:blerdwor:S21-CS161</id>
  <published>2021-04-12T06:00:06Z</published>
  <updated>2021-04-12T06:00:06Z</updated>
  <content type="html">
   These are my solutions to the projects for CS 161 - Introduction to Artificial Intelligence, taken during Spring 2021. 
  </content>
 </entry>
 <entry>
  <title>earnivore: Lisp-Binary-Search-Game</title>
  <author>
   <name>earnivore</name>
  </author>
  <link href="https://github.com/earnivore/Lisp-Binary-Search-Game" />
  <id>urn:rprimus:github:earnivore:Lisp-Binary-Search-Game</id>
  <published>2021-04-12T04:04:27Z</published>
  <updated>2021-04-12T04:04:27Z</updated>
  <content type="html">
   A quick guessing game using a binary search in Lisp
  </content>
 </entry>
 <entry>
  <title>tyjacks: practical-common-lisp</title>
  <author>
   <name>tyjacks</name>
  </author>
  <link href="https://github.com/tyjacks/practical-common-lisp" />
  <id>urn:rprimus:github:tyjacks:practical-common-lisp</id>
  <published>2021-04-11T17:44:49Z</published>
  <updated>2021-04-11T17:44:49Z</updated>
  <content type="html">
   Working through Practical Common Lisp
  </content>
 </entry>
 <entry>
  <title>psullivan235: cs2800FinalProjectDraft</title>
  <author>
   <name>psullivan235</name>
  </author>
  <link href="https://github.com/psullivan235/cs2800FinalProjectDraft" />
  <id>urn:rprimus:github:psullivan235:cs2800FinalProjectDraft</id>
  <published>2021-04-11T17:17:43Z</published>
  <updated>2021-04-11T17:17:43Z</updated>
  <content type="html">
   ACL2 Files for my CS2800 final
  </content>
 </entry>
 <entry>
  <title>abstewart: acl2s-merge-insert-ordered-assoc</title>
  <author>
   <name>abstewart</name>
  </author>
  <link href="https://github.com/abstewart/acl2s-merge-insert-ordered-assoc" />
  <id>urn:rprimus:github:abstewart:acl2s-merge-insert-ordered-assoc</id>
  <published>2021-04-11T14:00:59Z</published>
  <updated>2021-04-11T14:00:59Z</updated>
  <content type="html">
   Final project for CS 2800. Formally proving the associativity of a merge-ordered-insert function in ACL2s.
  </content>
 </entry>
 <entry>
  <title>igoralmeida: nx-notmuch</title>
  <author>
   <name>igoralmeida</name>
  </author>
  <link href="https://github.com/igoralmeida/nx-notmuch" />
  <id>urn:rprimus:github:igoralmeida:nx-notmuch</id>
  <published>2021-04-11T03:00:39Z</published>
  <updated>2021-04-11T03:00:39Z</updated>
  <content type="html">
   
  </content>
 </entry>
</feed>
