<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<link rel="self" type="application/atom+xml" href="http://lence.net/github-erlang.atom"/>
<id>urn:rprimus:github:newerlangrepos</id>
<updated>2021-08-15T19:36:55Z</updated>
<title type='text'>New GitHub Erlang Repos</title>
 <entry>
  <title>AgustinRamiroDiaz: LCC-SO1-TP-Final</title>
  <author>
   <name>AgustinRamiroDiaz</name>
  </author>
  <link href="https://github.com/AgustinRamiroDiaz/LCC-SO1-TP-Final" />
  <id>urn:rprimus:github:AgustinRamiroDiaz:LCC-SO1-TP-Final</id>
  <published>2021-08-15T19:36:55Z</published>
  <updated>2021-08-15T19:36:55Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>OKaemii: totient-range-parallel</title>
  <author>
   <name>OKaemii</name>
  </author>
  <link href="https://github.com/OKaemii/totient-range-parallel" />
  <id>urn:rprimus:github:OKaemii:totient-range-parallel</id>
  <published>2021-08-15T14:46:25Z</published>
  <updated>2021-08-15T14:46:25Z</updated>
  <content type="html">
   A reliable implementation of the totient range function in Erlang. This is a parallel and distributed implementation.
  </content>
 </entry>
 <entry>
  <title>liu-jianhao: ProgrammingErlang</title>
  <author>
   <name>liu-jianhao</name>
  </author>
  <link href="https://github.com/liu-jianhao/ProgrammingErlang" />
  <id>urn:rprimus:github:liu-jianhao:ProgrammingErlang</id>
  <published>2021-08-15T14:32:03Z</published>
  <updated>2021-08-15T14:32:03Z</updated>
  <content type="html">
   Erlangç¨åºè®¾è®¡ï¼ç¬¬2çï¼è¯»ä¹¦ç¬è®°ï¼åå«æºä»£ç åè¯¾åç»ä¹ ç­æ¡
  </content>
 </entry>
 <entry>
  <title>OKaemii: totient-range-sequential</title>
  <author>
   <name>OKaemii</name>
  </author>
  <link href="https://github.com/OKaemii/totient-range-sequential" />
  <id>urn:rprimus:github:OKaemii:totient-range-sequential</id>
  <published>2021-08-15T14:25:48Z</published>
  <updated>2021-08-15T14:25:48Z</updated>
  <content type="html">
   In number theory, Euler&#039;s totient function counts the positive integers up to a given integer n that are relatively prime to n. It is written using the Greek letter phi as varphi or phi, and may also be called Euler&#039;s phi function.
  </content>
 </entry>
 <entry>
  <title>ngoclinhng: bingo</title>
  <author>
   <name>ngoclinhng</name>
  </author>
  <link href="https://github.com/ngoclinhng/bingo" />
  <id>urn:rprimus:github:ngoclinhng:bingo</id>
  <published>2021-08-14T14:51:40Z</published>
  <updated>2021-08-14T14:51:40Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>kstatz12: cnfgr</title>
  <author>
   <name>kstatz12</name>
  </author>
  <link href="https://github.com/kstatz12/cnfgr" />
  <id>urn:rprimus:github:kstatz12:cnfgr</id>
  <published>2021-08-14T02:45:22Z</published>
  <updated>2021-08-14T02:45:22Z</updated>
  <content type="html">
   highly available config storage
  </content>
 </entry>
</feed>
