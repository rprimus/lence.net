<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<link rel="self" type="application/atom+xml" href="http://lence.net/github-crystal.atom"/>
<id>urn:rprimus:github:newcrystalrepos</id>
<updated>2021-09-15T17:39:27Z</updated>
<title type='text'>New GitHub Crystal Repos</title>
 <entry>
  <title>wyhaines: nbchannel.cr</title>
  <author>
   <name>wyhaines</name>
  </author>
  <link href="https://github.com/wyhaines/nbchannel.cr" />
  <id>urn:rprimus:github:wyhaines:nbchannel.cr</id>
  <published>2021-09-15T17:39:27Z</published>
  <updated>2021-09-15T17:39:27Z</updated>
  <content type="html">
   A NBChannel is a non-blocking channel. Normal Crystal channels block on send and on receive. The NBChannel will never block on send, and there are both blocking and nonblocking receive calls available. The channel should work both for single producer, single consumer scenarios, and for scenarios with multiple producers or multiple consumers.
  </content>
 </entry>
 <entry>
  <title>Vrishtrix: TamsFlockBot</title>
  <author>
   <name>Vrishtrix</name>
  </author>
  <link href="https://github.com/Vrishtrix/TamsFlockBot" />
  <id>urn:rprimus:github:Vrishtrix:TamsFlockBot</id>
  <published>2021-09-15T12:52:59Z</published>
  <updated>2021-09-15T12:52:59Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>startupdevhouse: test-coverage-reporter</title>
  <author>
   <name>startupdevhouse</name>
  </author>
  <link href="https://github.com/startupdevhouse/test-coverage-reporter" />
  <id>urn:rprimus:github:startupdevhouse:test-coverage-reporter</id>
  <published>2021-09-15T08:41:00Z</published>
  <updated>2021-09-15T08:41:00Z</updated>
  <content type="html">
   
  </content>
 </entry>
 <entry>
  <title>jackharrhy: cbc-rss</title>
  <author>
   <name>jackharrhy</name>
  </author>
  <link href="https://github.com/jackharrhy/cbc-rss" />
  <id>urn:rprimus:github:jackharrhy:cbc-rss</id>
  <published>2021-09-14T15:40:21Z</published>
  <updated>2021-09-14T15:40:21Z</updated>
  <content type="html">
   an attempt to consume cbcs rss feed within miniflux, by seeing if invalid xml is to blame
  </content>
 </entry>
</feed>
